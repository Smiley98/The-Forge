     0: RWTexture2D          ( 0 -     37)
     1: <                    ( 0 -     37)
     2: float4               ( 0 -     37)
     3: >                    ( 0 -     37)
     4: outputTexture        ( 0 -     37)
     5: :                    ( 0 -     37)
     6: register             ( 0 -     37)
     7: (                    ( 0 -     37)
     8: u1                   ( 0 -     37)
     9: )                    ( 0 -     37)
    10: ;                    ( 0 -     37)
    11: cbuffer              ( 0 -     39)
    12: uniformBlock         ( 0 -     39)
    13: :                    ( 0 -     39)
    14: register             ( 0 -     39)
    15: (                    ( 0 -     39)
    16: b0                   ( 0 -     39)
    17: ,                    ( 0 -     39)
    18: space1               ( 0 -     39)
    19: )                    ( 0 -     39)
    20: {                    ( 0 -     40)
    21: float4x4             ( 0 -     41)
    22: mvp                  ( 0 -     41)
    23: ;                    ( 0 -     41)
    24: float4               ( 0 -     42)
    25: c_diffuse            ( 0 -     42)
    26: ;                    ( 0 -     42)
    27: float4               ( 0 -     43)
    28: c_mu                 ( 0 -     43)
    29: ;                    ( 0 -     43)
    30: float                ( 0 -     44)
    31: c_epsilon            ( 0 -     44)
    32: ;                    ( 0 -     44)
    33: float                ( 0 -     45)
    34: zoom                 ( 0 -     45)
    35: ;                    ( 0 -     45)
    36: int                  ( 0 -     47)
    37: c_width              ( 0 -     47)
    38: ;                    ( 0 -     47)
    39: int                  ( 0 -     48)
    40: c_height             ( 0 -     48)
    41: ;                    ( 0 -     48)
    42: int                  ( 0 -     49)
    43: c_renderSoftShadows  ( 0 -     49)
    44: ;                    ( 0 -     49)
    45: }                    ( 0 -     50)
    46: float4               ( 0 -     96)
    47: quatMult             ( 0 -     96)
    48: (                    ( 0 -     96)
    49: float4               ( 0 -     96)
    50: q1                   ( 0 -     96)
    51: ,                    ( 0 -     96)
    52: float4               ( 0 -     96)
    53: q2                   ( 0 -     96)
    54: )                    ( 0 -     96)
    55: {                    ( 0 -     97)
    56: float4               ( 0 -     98)
    57: r                    ( 0 -     98)
    58: ;                    ( 0 -     98)
    59: r                    ( 0 -    100)
    60: .                    ( 0 -    100)
    61: x                    ( 0 -    100)
    62: =                    ( 0 -    100)
    63: q1                   ( 0 -    100)
    64: .                    ( 0 -    100)
    65: x                    ( 0 -    100)
    66: *                    ( 0 -    100)
    67: q2                   ( 0 -    100)
    68: .                    ( 0 -    100)
    69: x                    ( 0 -    100)
    70: -                    ( 0 -    100)
    71: dot                  ( 0 -    100)
    72: (                    ( 0 -    100)
    73: q1                   ( 0 -    100)
    74: .                    ( 0 -    100)
    75: yzw                  ( 0 -    100)
    76: ,                    ( 0 -    100)
    77: q2                   ( 0 -    100)
    78: .                    ( 0 -    100)
    79: yzw                  ( 0 -    100)
    80: )                    ( 0 -    100)
    81: ;                    ( 0 -    100)
    82: r                    ( 0 -    101)
    83: .                    ( 0 -    101)
    84: yzw                  ( 0 -    101)
    85: =                    ( 0 -    101)
    86: q1                   ( 0 -    101)
    87: .                    ( 0 -    101)
    88: x                    ( 0 -    101)
    89: *                    ( 0 -    101)
    90: q2                   ( 0 -    101)
    91: .                    ( 0 -    101)
    92: yzw                  ( 0 -    101)
    93: +                    ( 0 -    101)
    94: q2                   ( 0 -    101)
    95: .                    ( 0 -    101)
    96: x                    ( 0 -    101)
    97: *                    ( 0 -    101)
    98: q1                   ( 0 -    101)
    99: .                    ( 0 -    101)
   100: yzw                  ( 0 -    101)
   101: +                    ( 0 -    101)
   102: cross                ( 0 -    101)
   103: (                    ( 0 -    101)
   104: q1                   ( 0 -    101)
   105: .                    ( 0 -    101)
   106: yzw                  ( 0 -    101)
   107: ,                    ( 0 -    101)
   108: q2                   ( 0 -    101)
   109: .                    ( 0 -    101)
   110: yzw                  ( 0 -    101)
   111: )                    ( 0 -    101)
   112: ;                    ( 0 -    101)
   113: return               ( 0 -    103)
   114: r                    ( 0 -    103)
   115: ;                    ( 0 -    103)
   116: }                    ( 0 -    104)
   117: float4               ( 0 -    112)
   118: quatSq               ( 0 -    112)
   119: (                    ( 0 -    112)
   120: float4               ( 0 -    112)
   121: q                    ( 0 -    112)
   122: )                    ( 0 -    112)
   123: {                    ( 0 -    113)
   124: float4               ( 0 -    114)
   125: r                    ( 0 -    114)
   126: ;                    ( 0 -    114)
   127: r                    ( 0 -    116)
   128: .                    ( 0 -    116)
   129: x                    ( 0 -    116)
   130: =                    ( 0 -    116)
   131: q                    ( 0 -    116)
   132: .                    ( 0 -    116)
   133: x                    ( 0 -    116)
   134: *                    ( 0 -    116)
   135: q                    ( 0 -    116)
   136: .                    ( 0 -    116)
   137: x                    ( 0 -    116)
   138: -                    ( 0 -    116)
   139: dot                  ( 0 -    116)
   140: (                    ( 0 -    116)
   141: q                    ( 0 -    116)
   142: .                    ( 0 -    116)
   143: yzw                  ( 0 -    116)
   144: ,                    ( 0 -    116)
   145: q                    ( 0 -    116)
   146: .                    ( 0 -    116)
   147: yzw                  ( 0 -    116)
   148: )                    ( 0 -    116)
   149: ;                    ( 0 -    116)
   150: r                    ( 0 -    117)
   151: .                    ( 0 -    117)
   152: yzw                  ( 0 -    117)
   153: =                    ( 0 -    117)
   154: 2                    ( 0 -    117)
   155: *                    ( 0 -    117)
   156: q                    ( 0 -    117)
   157: .                    ( 0 -    117)
   158: x                    ( 0 -    117)
   159: *                    ( 0 -    117)
   160: q                    ( 0 -    117)
   161: .                    ( 0 -    117)
   162: yzw                  ( 0 -    117)
   163: ;                    ( 0 -    117)
   164: return               ( 0 -    119)
   165: r                    ( 0 -    119)
   166: ;                    ( 0 -    119)
   167: }                    ( 0 -    120)
   168: float3               ( 0 -    129)
   169: normEstimate         ( 0 -    129)
   170: (                    ( 0 -    129)
   171: float3               ( 0 -    129)
   172: p                    ( 0 -    129)
   173: ,                    ( 0 -    129)
   174: float4               ( 0 -    129)
   175: c                    ( 0 -    129)
   176: )                    ( 0 -    129)
   177: {                    ( 0 -    130)
   178: float3               ( 0 -    131)
   179: N                    ( 0 -    131)
   180: ;                    ( 0 -    131)
   181: float4               ( 0 -    132)
   182: qP                   ( 0 -    132)
   183: =                    ( 0 -    132)
   184: float4               ( 0 -    132)
   185: (                    ( 0 -    132)
   186: p                    ( 0 -    132)
   187: ,                    ( 0 -    132)
   188: 0                    ( 0 -    132)
   189: )                    ( 0 -    132)
   190: ;                    ( 0 -    132)
   191: float                ( 0 -    133)
   192: gradX                ( 0 -    133)
   193: ,                    ( 0 -    133)
   194: gradY                ( 0 -    133)
   195: ,                    ( 0 -    133)
   196: gradZ                ( 0 -    133)
   197: ;                    ( 0 -    133)
   198: float4               ( 0 -    135)
   199: gx1                  ( 0 -    135)
   200: =                    ( 0 -    135)
   201: qP                   ( 0 -    135)
   202: -                    ( 0 -    135)
   203: float4               ( 0 -    135)
   204: (                    ( 0 -    135)
   205: 0.000100             ( 0 -    135)
   206: ,                    ( 0 -    135)
   207: 0                    ( 0 -    135)
   208: ,                    ( 0 -    135)
   209: 0                    ( 0 -    135)
   210: ,                    ( 0 -    135)
   211: 0                    ( 0 -    135)
   212: )                    ( 0 -    135)
   213: ;                    ( 0 -    135)
   214: float4               ( 0 -    136)
   215: gx2                  ( 0 -    136)
   216: =                    ( 0 -    136)
   217: qP                   ( 0 -    136)
   218: +                    ( 0 -    136)
   219: float4               ( 0 -    136)
   220: (                    ( 0 -    136)
   221: 0.000100             ( 0 -    136)
   222: ,                    ( 0 -    136)
   223: 0                    ( 0 -    136)
   224: ,                    ( 0 -    136)
   225: 0                    ( 0 -    136)
   226: ,                    ( 0 -    136)
   227: 0                    ( 0 -    136)
   228: )                    ( 0 -    136)
   229: ;                    ( 0 -    136)
   230: float4               ( 0 -    137)
   231: gy1                  ( 0 -    137)
   232: =                    ( 0 -    137)
   233: qP                   ( 0 -    137)
   234: -                    ( 0 -    137)
   235: float4               ( 0 -    137)
   236: (                    ( 0 -    137)
   237: 0                    ( 0 -    137)
   238: ,                    ( 0 -    137)
   239: 0.000100             ( 0 -    137)
   240: ,                    ( 0 -    137)
   241: 0                    ( 0 -    137)
   242: ,                    ( 0 -    137)
   243: 0                    ( 0 -    137)
   244: )                    ( 0 -    137)
   245: ;                    ( 0 -    137)
   246: float4               ( 0 -    138)
   247: gy2                  ( 0 -    138)
   248: =                    ( 0 -    138)
   249: qP                   ( 0 -    138)
   250: +                    ( 0 -    138)
   251: float4               ( 0 -    138)
   252: (                    ( 0 -    138)
   253: 0                    ( 0 -    138)
   254: ,                    ( 0 -    138)
   255: 0.000100             ( 0 -    138)
   256: ,                    ( 0 -    138)
   257: 0                    ( 0 -    138)
   258: ,                    ( 0 -    138)
   259: 0                    ( 0 -    138)
   260: )                    ( 0 -    138)
   261: ;                    ( 0 -    138)
   262: float4               ( 0 -    139)
   263: gz1                  ( 0 -    139)
   264: =                    ( 0 -    139)
   265: qP                   ( 0 -    139)
   266: -                    ( 0 -    139)
   267: float4               ( 0 -    139)
   268: (                    ( 0 -    139)
   269: 0                    ( 0 -    139)
   270: ,                    ( 0 -    139)
   271: 0                    ( 0 -    139)
   272: ,                    ( 0 -    139)
   273: 0.000100             ( 0 -    139)
   274: ,                    ( 0 -    139)
   275: 0                    ( 0 -    139)
   276: )                    ( 0 -    139)
   277: ;                    ( 0 -    139)
   278: float4               ( 0 -    140)
   279: gz2                  ( 0 -    140)
   280: =                    ( 0 -    140)
   281: qP                   ( 0 -    140)
   282: +                    ( 0 -    140)
   283: float4               ( 0 -    140)
   284: (                    ( 0 -    140)
   285: 0                    ( 0 -    140)
   286: ,                    ( 0 -    140)
   287: 0                    ( 0 -    140)
   288: ,                    ( 0 -    140)
   289: 0.000100             ( 0 -    140)
   290: ,                    ( 0 -    140)
   291: 0                    ( 0 -    140)
   292: )                    ( 0 -    140)
   293: ;                    ( 0 -    140)
   294: for                  ( 0 -    142)
   295: (                    ( 0 -    142)
   296: int                  ( 0 -    142)
   297: i                    ( 0 -    142)
   298: =                    ( 0 -    142)
   299: 0                    ( 0 -    142)
   300: ;                    ( 0 -    142)
   301: i                    ( 0 -    142)
   302: <                    ( 0 -    142)
   303: 10                   ( 0 -    142)
   304: ;                    ( 0 -    142)
   305: i                    ( 0 -    142)
   306: ++                   ( 0 -    142)
   307: )                    ( 0 -    142)
   308: {                    ( 0 -    143)
   309: gx1                  ( 0 -    144)
   310: =                    ( 0 -    144)
   311: quatSq               ( 0 -    144)
   312: (                    ( 0 -    144)
   313: gx1                  ( 0 -    144)
   314: )                    ( 0 -    144)
   315: +                    ( 0 -    144)
   316: c                    ( 0 -    144)
   317: ;                    ( 0 -    144)
   318: gx2                  ( 0 -    145)
   319: =                    ( 0 -    145)
   320: quatSq               ( 0 -    145)
   321: (                    ( 0 -    145)
   322: gx2                  ( 0 -    145)
   323: )                    ( 0 -    145)
   324: +                    ( 0 -    145)
   325: c                    ( 0 -    145)
   326: ;                    ( 0 -    145)
   327: gy1                  ( 0 -    146)
   328: =                    ( 0 -    146)
   329: quatSq               ( 0 -    146)
   330: (                    ( 0 -    146)
   331: gy1                  ( 0 -    146)
   332: )                    ( 0 -    146)
   333: +                    ( 0 -    146)
   334: c                    ( 0 -    146)
   335: ;                    ( 0 -    146)
   336: gy2                  ( 0 -    147)
   337: =                    ( 0 -    147)
   338: quatSq               ( 0 -    147)
   339: (                    ( 0 -    147)
   340: gy2                  ( 0 -    147)
   341: )                    ( 0 -    147)
   342: +                    ( 0 -    147)
   343: c                    ( 0 -    147)
   344: ;                    ( 0 -    147)
   345: gz1                  ( 0 -    148)
   346: =                    ( 0 -    148)
   347: quatSq               ( 0 -    148)
   348: (                    ( 0 -    148)
   349: gz1                  ( 0 -    148)
   350: )                    ( 0 -    148)
   351: +                    ( 0 -    148)
   352: c                    ( 0 -    148)
   353: ;                    ( 0 -    148)
   354: gz2                  ( 0 -    149)
   355: =                    ( 0 -    149)
   356: quatSq               ( 0 -    149)
   357: (                    ( 0 -    149)
   358: gz2                  ( 0 -    149)
   359: )                    ( 0 -    149)
   360: +                    ( 0 -    149)
   361: c                    ( 0 -    149)
   362: ;                    ( 0 -    149)
   363: }                    ( 0 -    150)
   364: gradX                ( 0 -    152)
   365: =                    ( 0 -    152)
   366: length               ( 0 -    152)
   367: (                    ( 0 -    152)
   368: gx2                  ( 0 -    152)
   369: )                    ( 0 -    152)
   370: -                    ( 0 -    152)
   371: length               ( 0 -    152)
   372: (                    ( 0 -    152)
   373: gx1                  ( 0 -    152)
   374: )                    ( 0 -    152)
   375: ;                    ( 0 -    152)
   376: gradY                ( 0 -    153)
   377: =                    ( 0 -    153)
   378: length               ( 0 -    153)
   379: (                    ( 0 -    153)
   380: gy2                  ( 0 -    153)
   381: )                    ( 0 -    153)
   382: -                    ( 0 -    153)
   383: length               ( 0 -    153)
   384: (                    ( 0 -    153)
   385: gy1                  ( 0 -    153)
   386: )                    ( 0 -    153)
   387: ;                    ( 0 -    153)
   388: gradZ                ( 0 -    154)
   389: =                    ( 0 -    154)
   390: length               ( 0 -    154)
   391: (                    ( 0 -    154)
   392: gz2                  ( 0 -    154)
   393: )                    ( 0 -    154)
   394: -                    ( 0 -    154)
   395: length               ( 0 -    154)
   396: (                    ( 0 -    154)
   397: gz1                  ( 0 -    154)
   398: )                    ( 0 -    154)
   399: ;                    ( 0 -    154)
   400: N                    ( 0 -    156)
   401: =                    ( 0 -    156)
   402: normalize            ( 0 -    156)
   403: (                    ( 0 -    156)
   404: float3               ( 0 -    156)
   405: (                    ( 0 -    156)
   406: gradX                ( 0 -    156)
   407: ,                    ( 0 -    156)
   408: gradY                ( 0 -    156)
   409: ,                    ( 0 -    156)
   410: gradZ                ( 0 -    156)
   411: )                    ( 0 -    156)
   412: )                    ( 0 -    156)
   413: ;                    ( 0 -    156)
   414: return               ( 0 -    158)
   415: N                    ( 0 -    158)
   416: ;                    ( 0 -    158)
   417: }                    ( 0 -    159)
   418: float                ( 0 -    197)
   419: intersectQJulia      ( 0 -    197)
   420: (                    ( 0 -    197)
   421: inout                ( 0 -    197)
   422: float3               ( 0 -    197)
   423: rO                   ( 0 -    197)
   424: ,                    ( 0 -    197)
   425: float3               ( 0 -    197)
   426: rD                   ( 0 -    197)
   427: ,                    ( 0 -    197)
   428: float4               ( 0 -    197)
   429: c                    ( 0 -    197)
   430: ,                    ( 0 -    197)
   431: float                ( 0 -    197)
   432: epsilon              ( 0 -    197)
   433: )                    ( 0 -    197)
   434: {                    ( 0 -    198)
   435: float                ( 0 -    199)
   436: dist                 ( 0 -    199)
   437: ;                    ( 0 -    199)
   438: float                ( 0 -    203)
   439: rd                   ( 0 -    203)
   440: =                    ( 0 -    203)
   441: 0.000000             ( 0 -    203)
   442: ;                    ( 0 -    203)
   443: dist                 ( 0 -    204)
   444: =                    ( 0 -    204)
   445: epsilon              ( 0 -    204)
   446: ;                    ( 0 -    204)
   447: while                ( 0 -    210)
   448: (                    ( 0 -    210)
   449: dist                 ( 0 -    210)
   450: unknown              ( 0 -    210)
   451: epsilon              ( 0 -    210)
   452: unknown              ( 0 -    210)
   453: rd                   ( 0 -    210)
   454: <                    ( 0 -    210)
   455: 3.000000             ( 0 -    210)
   456: )                    ( 0 -    210)
   457: {                    ( 0 -    211)
   458: float4               ( 0 -    212)
   459: z                    ( 0 -    212)
   460: =                    ( 0 -    212)
   461: float4               ( 0 -    212)
   462: (                    ( 0 -    212)
   463: rO                   ( 0 -    212)
   464: ,                    ( 0 -    212)
   465: 0                    ( 0 -    212)
   466: )                    ( 0 -    212)
   467: ;                    ( 0 -    212)
   468: float4               ( 0 -    215)
   469: zp                   ( 0 -    215)
   470: =                    ( 0 -    215)
   471: float4               ( 0 -    215)
   472: (                    ( 0 -    215)
   473: 1                    ( 0 -    215)
   474: ,                    ( 0 -    215)
   475: 0                    ( 0 -    215)
   476: ,                    ( 0 -    215)
   477: 0                    ( 0 -    215)
   478: ,                    ( 0 -    215)
   479: 0                    ( 0 -    215)
   480: )                    ( 0 -    215)
   481: ;                    ( 0 -    215)
   482: float                ( 0 -    218)
   483: zd                   ( 0 -    218)
   484: =                    ( 0 -    218)
   485: 0.000000             ( 0 -    218)
   486: ;                    ( 0 -    218)
   487: uint                 ( 0 -    219)
   488: count                ( 0 -    219)
   489: =                    ( 0 -    219)
   490: 0                    ( 0 -    219)
   491: ;                    ( 0 -    219)
   492: while                ( 0 -    223)
   493: (                    ( 0 -    223)
   494: zd                   ( 0 -    223)
   495: <                    ( 0 -    223)
   496: 10                   ( 0 -    223)
   497: unknown              ( 0 -    223)
   498: count                ( 0 -    223)
   499: <                    ( 0 -    223)
   500: 10                   ( 0 -    223)
   501: )                    ( 0 -    223)
   502: {                    ( 0 -    224)
   503: zp                   ( 0 -    225)
   504: =                    ( 0 -    225)
   505: 2.000000             ( 0 -    225)
   506: *                    ( 0 -    225)
   507: quatMult             ( 0 -    225)
   508: (                    ( 0 -    225)
   509: z                    ( 0 -    225)
   510: ,                    ( 0 -    225)
   511: zp                   ( 0 -    225)
   512: )                    ( 0 -    225)
   513: ;                    ( 0 -    225)
   514: z                    ( 0 -    226)
   515: =                    ( 0 -    226)
   516: quatSq               ( 0 -    226)
   517: (                    ( 0 -    226)
   518: z                    ( 0 -    226)
   519: )                    ( 0 -    226)
   520: +                    ( 0 -    226)
   521: c                    ( 0 -    226)
   522: ;                    ( 0 -    226)
   523: zd                   ( 0 -    227)
   524: =                    ( 0 -    227)
   525: dot                  ( 0 -    227)
   526: (                    ( 0 -    227)
   527: z                    ( 0 -    227)
   528: ,                    ( 0 -    227)
   529: z                    ( 0 -    227)
   530: )                    ( 0 -    227)
   531: ;                    ( 0 -    227)
   532: count                ( 0 -    228)
   533: ++                   ( 0 -    228)
   534: ;                    ( 0 -    228)
   535: }                    ( 0 -    229)
   536: float                ( 0 -    232)
   537: normZ                ( 0 -    232)
   538: =                    ( 0 -    232)
   539: length               ( 0 -    232)
   540: (                    ( 0 -    232)
   541: z                    ( 0 -    232)
   542: )                    ( 0 -    232)
   543: ;                    ( 0 -    232)
   544: dist                 ( 0 -    233)
   545: =                    ( 0 -    233)
   546: 0.500000             ( 0 -    233)
   547: *                    ( 0 -    233)
   548: normZ                ( 0 -    233)
   549: *                    ( 0 -    233)
   550: log                  ( 0 -    233)
   551: (                    ( 0 -    233)
   552: normZ                ( 0 -    233)
   553: )                    ( 0 -    233)
   554: /                    ( 0 -    233)
   555: length               ( 0 -    233)
   556: (                    ( 0 -    233)
   557: zp                   ( 0 -    233)
   558: )                    ( 0 -    233)
   559: ;                    ( 0 -    233)
   560: rO                   ( 0 -    235)
   561: +=                   ( 0 -    235)
   562: rD                   ( 0 -    235)
   563: *                    ( 0 -    235)
   564: dist                 ( 0 -    235)
   565: ;                    ( 0 -    235)
   566: rd                   ( 0 -    237)
   567: =                    ( 0 -    237)
   568: dot                  ( 0 -    237)
   569: (                    ( 0 -    237)
   570: rO                   ( 0 -    237)
   571: ,                    ( 0 -    237)
   572: rO                   ( 0 -    237)
   573: )                    ( 0 -    237)
   574: ;                    ( 0 -    237)
   575: }                    ( 0 -    238)
   576: return               ( 0 -    241)
   577: dist                 ( 0 -    241)
   578: ;                    ( 0 -    241)
   579: }                    ( 0 -    242)
   580: float3               ( 0 -    252)
   581: Phong                ( 0 -    252)
   582: (                    ( 0 -    252)
   583: float3               ( 0 -    252)
   584: light                ( 0 -    252)
   585: ,                    ( 0 -    252)
   586: float3               ( 0 -    252)
   587: eye                  ( 0 -    252)
   588: ,                    ( 0 -    252)
   589: float3               ( 0 -    252)
   590: pt                   ( 0 -    252)
   591: ,                    ( 0 -    252)
   592: float3               ( 0 -    252)
   593: N                    ( 0 -    252)
   594: )                    ( 0 -    252)
   595: {                    ( 0 -    253)
   596: float3               ( 0 -    254)
   597: diffuse              ( 0 -    254)
   598: =                    ( 0 -    254)
   599: float3               ( 0 -    254)
   600: (                    ( 0 -    254)
   601: 1.000000             ( 0 -    254)
   602: ,                    ( 0 -    254)
   603: 0.450000             ( 0 -    254)
   604: ,                    ( 0 -    254)
   605: 0.250000             ( 0 -    254)
   606: )                    ( 0 -    254)
   607: ;                    ( 0 -    254)
   608: const                ( 0 -    255)
   609: int                  ( 0 -    255)
   610: specularExponent     ( 0 -    255)
   611: =                    ( 0 -    255)
   612: 10                   ( 0 -    255)
   613: ;                    ( 0 -    255)
   614: const                ( 0 -    256)
   615: float                ( 0 -    256)
   616: specularity          ( 0 -    256)
   617: =                    ( 0 -    256)
   618: 0.450000             ( 0 -    256)
   619: ;                    ( 0 -    256)
   620: float3               ( 0 -    258)
   621: L                    ( 0 -    258)
   622: =                    ( 0 -    258)
   623: normalize            ( 0 -    258)
   624: (                    ( 0 -    258)
   625: light                ( 0 -    258)
   626: -                    ( 0 -    258)
   627: pt                   ( 0 -    258)
   628: )                    ( 0 -    258)
   629: ;                    ( 0 -    258)
   630: float3               ( 0 -    259)
   631: E                    ( 0 -    259)
   632: =                    ( 0 -    259)
   633: normalize            ( 0 -    259)
   634: (                    ( 0 -    259)
   635: eye                  ( 0 -    259)
   636: -                    ( 0 -    259)
   637: pt                   ( 0 -    259)
   638: )                    ( 0 -    259)
   639: ;                    ( 0 -    259)
   640: float                ( 0 -    260)
   641: NdotL                ( 0 -    260)
   642: =                    ( 0 -    260)
   643: dot                  ( 0 -    260)
   644: (                    ( 0 -    260)
   645: N                    ( 0 -    260)
   646: ,                    ( 0 -    260)
   647: L                    ( 0 -    260)
   648: )                    ( 0 -    260)
   649: ;                    ( 0 -    260)
   650: float3               ( 0 -    261)
   651: R                    ( 0 -    261)
   652: =                    ( 0 -    261)
   653: L                    ( 0 -    261)
   654: -                    ( 0 -    261)
   655: 2                    ( 0 -    261)
   656: *                    ( 0 -    261)
   657: NdotL                ( 0 -    261)
   658: *                    ( 0 -    261)
   659: N                    ( 0 -    261)
   660: ;                    ( 0 -    261)
   661: diffuse              ( 0 -    263)
   662: =                    ( 0 -    263)
   663: c_diffuse            ( 0 -    263)
   664: .                    ( 0 -    263)
   665: xyz                  ( 0 -    263)
   666: +                    ( 0 -    263)
   667: abs                  ( 0 -    263)
   668: (                    ( 0 -    263)
   669: N                    ( 0 -    263)
   670: )                    ( 0 -    263)
   671: *                    ( 0 -    263)
   672: 0.300000             ( 0 -    263)
   673: ;                    ( 0 -    263)
   674: return               ( 0 -    267)
   675: diffuse              ( 0 -    267)
   676: *                    ( 0 -    267)
   677: max                  ( 0 -    267)
   678: (                    ( 0 -    267)
   679: NdotL                ( 0 -    267)
   680: ,                    ( 0 -    267)
   681: 0                    ( 0 -    267)
   682: )                    ( 0 -    267)
   683: +                    ( 0 -    267)
   684: specularity          ( 0 -    267)
   685: *                    ( 0 -    267)
   686: pow                  ( 0 -    267)
   687: (                    ( 0 -    267)
   688: max                  ( 0 -    267)
   689: (                    ( 0 -    267)
   690: dot                  ( 0 -    267)
   691: (                    ( 0 -    267)
   692: E                    ( 0 -    267)
   693: ,                    ( 0 -    267)
   694: R                    ( 0 -    267)
   695: )                    ( 0 -    267)
   696: ,                    ( 0 -    267)
   697: 0                    ( 0 -    267)
   698: )                    ( 0 -    267)
   699: ,                    ( 0 -    267)
   700: specularExponent     ( 0 -    267)
   701: )                    ( 0 -    267)
   702: ;                    ( 0 -    267)
   703: }                    ( 0 -    268)
   704: float3               ( 0 -    276)
   705: intersectSphere      ( 0 -    276)
   706: (                    ( 0 -    276)
   707: float3               ( 0 -    276)
   708: rO                   ( 0 -    276)
   709: ,                    ( 0 -    276)
   710: float3               ( 0 -    276)
   711: rD                   ( 0 -    276)
   712: )                    ( 0 -    276)
   713: {                    ( 0 -    277)
   714: float                ( 0 -    278)
   715: B                    ( 0 -    278)
   716: ,                    ( 0 -    278)
   717: C                    ( 0 -    278)
   718: ,                    ( 0 -    278)
   719: d                    ( 0 -    278)
   720: ,                    ( 0 -    278)
   721: t0                   ( 0 -    278)
   722: ,                    ( 0 -    278)
   723: t1                   ( 0 -    278)
   724: ,                    ( 0 -    278)
   725: t                    ( 0 -    278)
   726: ;                    ( 0 -    278)
   727: B                    ( 0 -    280)
   728: =                    ( 0 -    280)
   729: 2                    ( 0 -    280)
   730: *                    ( 0 -    280)
   731: dot                  ( 0 -    280)
   732: (                    ( 0 -    280)
   733: rO                   ( 0 -    280)
   734: ,                    ( 0 -    280)
   735: rD                   ( 0 -    280)
   736: )                    ( 0 -    280)
   737: ;                    ( 0 -    280)
   738: C                    ( 0 -    281)
   739: =                    ( 0 -    281)
   740: dot                  ( 0 -    281)
   741: (                    ( 0 -    281)
   742: rO                   ( 0 -    281)
   743: ,                    ( 0 -    281)
   744: rO                   ( 0 -    281)
   745: )                    ( 0 -    281)
   746: -                    ( 0 -    281)
   747: 3.000000             ( 0 -    281)
   748: ;                    ( 0 -    281)
   749: d                    ( 0 -    282)
   750: =                    ( 0 -    282)
   751: sqrt                 ( 0 -    282)
   752: (                    ( 0 -    282)
   753: B                    ( 0 -    282)
   754: *                    ( 0 -    282)
   755: B                    ( 0 -    282)
   756: -                    ( 0 -    282)
   757: 4                    ( 0 -    282)
   758: *                    ( 0 -    282)
   759: C                    ( 0 -    282)
   760: )                    ( 0 -    282)
   761: ;                    ( 0 -    282)
   762: t0                   ( 0 -    283)
   763: =                    ( 0 -    283)
   764: (                    ( 0 -    283)
   765: -                    ( 0 -    283)
   766: B                    ( 0 -    283)
   767: +                    ( 0 -    283)
   768: d                    ( 0 -    283)
   769: )                    ( 0 -    283)
   770: *                    ( 0 -    283)
   771: 0.500000             ( 0 -    283)
   772: ;                    ( 0 -    283)
   773: t1                   ( 0 -    284)
   774: =                    ( 0 -    284)
   775: (                    ( 0 -    284)
   776: -                    ( 0 -    284)
   777: B                    ( 0 -    284)
   778: -                    ( 0 -    284)
   779: d                    ( 0 -    284)
   780: )                    ( 0 -    284)
   781: *                    ( 0 -    284)
   782: 0.500000             ( 0 -    284)
   783: ;                    ( 0 -    284)
   784: t                    ( 0 -    285)
   785: =                    ( 0 -    285)
   786: min                  ( 0 -    285)
   787: (                    ( 0 -    285)
   788: t0                   ( 0 -    285)
   789: ,                    ( 0 -    285)
   790: t1                   ( 0 -    285)
   791: )                    ( 0 -    285)
   792: ;                    ( 0 -    285)
   793: rO                   ( 0 -    286)
   794: +=                   ( 0 -    286)
   795: t                    ( 0 -    286)
   796: *                    ( 0 -    286)
   797: rD                   ( 0 -    286)
   798: ;                    ( 0 -    286)
   799: return               ( 0 -    288)
   800: rO                   ( 0 -    288)
   801: ;                    ( 0 -    288)
   802: }                    ( 0 -    289)
   803: float4               ( 0 -    311)
   804: QJulia               ( 0 -    311)
   805: (                    ( 0 -    311)
   806: float3               ( 0 -    311)
   807: rO                   ( 0 -    311)
   808: ,                    ( 0 -    311)
   809: float3               ( 0 -    312)
   810: rD                   ( 0 -    312)
   811: ,                    ( 0 -    312)
   812: float4               ( 0 -    314)
   813: mu                   ( 0 -    314)
   814: ,                    ( 0 -    314)
   815: float                ( 0 -    315)
   816: epsilon              ( 0 -    315)
   817: ,                    ( 0 -    315)
   818: float3               ( 0 -    316)
   819: eye                  ( 0 -    316)
   820: ,                    ( 0 -    316)
   821: float3               ( 0 -    317)
   822: light                ( 0 -    317)
   823: ,                    ( 0 -    317)
   824: bool                 ( 0 -    318)
   825: renderShadows        ( 0 -    318)
   826: )                    ( 0 -    318)
   827: {                    ( 0 -    319)
   828: const                ( 0 -    321)
   829: float4               ( 0 -    321)
   830: backgroundColor      ( 0 -    321)
   831: =                    ( 0 -    321)
   832: float4               ( 0 -    321)
   833: (                    ( 0 -    321)
   834: 0.300000             ( 0 -    321)
   835: ,                    ( 0 -    321)
   836: 0.300000             ( 0 -    321)
   837: ,                    ( 0 -    321)
   838: 0.300000             ( 0 -    321)
   839: ,                    ( 0 -    321)
   840: 0                    ( 0 -    321)
   841: )                    ( 0 -    321)
   842: ;                    ( 0 -    321)
   843: float4               ( 0 -    323)
   844: color                ( 0 -    323)
   845: ;                    ( 0 -    323)
   846: color                ( 0 -    328)
   847: =                    ( 0 -    328)
   848: backgroundColor      ( 0 -    328)
   849: ;                    ( 0 -    328)
   850: rD                   ( 0 -    336)
   851: =                    ( 0 -    336)
   852: normalize            ( 0 -    336)
   853: (                    ( 0 -    336)
   854: rD                   ( 0 -    336)
   855: )                    ( 0 -    336)
   856: ;                    ( 0 -    336)
   857: rO                   ( 0 -    337)
   858: =                    ( 0 -    337)
   859: intersectSphere      ( 0 -    337)
   860: (                    ( 0 -    337)
   861: rO                   ( 0 -    337)
   862: ,                    ( 0 -    337)
   863: rD                   ( 0 -    337)
   864: )                    ( 0 -    337)
   865: ;                    ( 0 -    337)
   866: float                ( 0 -    343)
   867: dist                 ( 0 -    343)
   868: =                    ( 0 -    343)
   869: intersectQJulia      ( 0 -    343)
   870: (                    ( 0 -    343)
   871: rO                   ( 0 -    343)
   872: ,                    ( 0 -    343)
   873: rD                   ( 0 -    343)
   874: ,                    ( 0 -    343)
   875: mu                   ( 0 -    343)
   876: ,                    ( 0 -    343)
   877: epsilon              ( 0 -    343)
   878: )                    ( 0 -    343)
   879: ;                    ( 0 -    343)
   880: if                   ( 0 -    350)
   881: (                    ( 0 -    350)
   882: dist                 ( 0 -    350)
   883: <                    ( 0 -    350)
   884: epsilon              ( 0 -    350)
   885: )                    ( 0 -    350)
   886: {                    ( 0 -    351)
   887: float3               ( 0 -    353)
   888: N                    ( 0 -    353)
   889: =                    ( 0 -    353)
   890: normEstimate         ( 0 -    353)
   891: (                    ( 0 -    353)
   892: rO                   ( 0 -    353)
   893: ,                    ( 0 -    353)
   894: mu                   ( 0 -    353)
   895: )                    ( 0 -    353)
   896: ;                    ( 0 -    353)
   897: color                ( 0 -    356)
   898: .                    ( 0 -    356)
   899: rgb                  ( 0 -    356)
   900: =                    ( 0 -    356)
   901: Phong                ( 0 -    356)
   902: (                    ( 0 -    356)
   903: light                ( 0 -    356)
   904: ,                    ( 0 -    356)
   905: rD                   ( 0 -    356)
   906: ,                    ( 0 -    356)
   907: rO                   ( 0 -    356)
   908: ,                    ( 0 -    356)
   909: N                    ( 0 -    356)
   910: )                    ( 0 -    356)
   911: ;                    ( 0 -    356)
   912: color                ( 0 -    357)
   913: .                    ( 0 -    357)
   914: a                    ( 0 -    357)
   915: =                    ( 0 -    357)
   916: 1                    ( 0 -    357)
   917: ;                    ( 0 -    357)
   918: if                   ( 0 -    360)
   919: (                    ( 0 -    360)
   920: renderShadows        ( 0 -    360)
   921: unknown              ( 0 -    360)
   922: true                 ( 0 -    360)
   923: )                    ( 0 -    360)
   924: {                    ( 0 -    361)
   925: float3               ( 0 -    367)
   926: L                    ( 0 -    367)
   927: =                    ( 0 -    367)
   928: normalize            ( 0 -    367)
   929: (                    ( 0 -    367)
   930: light                ( 0 -    367)
   931: -                    ( 0 -    367)
   932: rO                   ( 0 -    367)
   933: )                    ( 0 -    367)
   934: ;                    ( 0 -    367)
   935: rO                   ( 0 -    368)
   936: +=                   ( 0 -    368)
   937: N                    ( 0 -    368)
   938: *                    ( 0 -    368)
   939: epsilon              ( 0 -    368)
   940: *                    ( 0 -    368)
   941: 2.000000             ( 0 -    368)
   942: ;                    ( 0 -    368)
   943: dist                 ( 0 -    369)
   944: =                    ( 0 -    369)
   945: intersectQJulia      ( 0 -    369)
   946: (                    ( 0 -    369)
   947: rO                   ( 0 -    369)
   948: ,                    ( 0 -    369)
   949: L                    ( 0 -    369)
   950: ,                    ( 0 -    369)
   951: mu                   ( 0 -    369)
   952: ,                    ( 0 -    369)
   953: epsilon              ( 0 -    369)
   954: )                    ( 0 -    369)
   955: ;                    ( 0 -    369)
   956: if                   ( 0 -    374)
   957: (                    ( 0 -    374)
   958: dist                 ( 0 -    374)
   959: <                    ( 0 -    374)
   960: epsilon              ( 0 -    374)
   961: )                    ( 0 -    374)
   962: color                ( 0 -    375)
   963: .                    ( 0 -    375)
   964: rgb                  ( 0 -    375)
   965: *=                   ( 0 -    375)
   966: 0.400000             ( 0 -    375)
   967: ;                    ( 0 -    375)
   968: }                    ( 0 -    376)
   969: }                    ( 0 -    377)
   970: return               ( 0 -    380)
   971: color                ( 0 -    380)
   972: ;                    ( 0 -    380)
   973: }                    ( 0 -    381)
   974: [                    ( 0 -    383)
   975: numthreads           ( 0 -    383)
   976: (                    ( 0 -    383)
   977: 16                   ( 0 -    383)
   978: ,                    ( 0 -    383)
   979: 16                   ( 0 -    383)
   980: ,                    ( 0 -    383)
   981: 1                    ( 0 -    383)
   982: )                    ( 0 -    383)
   983: ]                    ( 0 -    383)
   984: void                 ( 0 -    384)
   985: main                 ( 0 -    384)
   986: (                    ( 0 -    384)
   987: uint3                ( 0 -    384)
   988: Gid                  ( 0 -    384)
   989: :                    ( 0 -    384)
   990: SV_GroupID           ( 0 -    384)
   991: ,                    ( 0 -    384)
   992: uint3                ( 0 -    384)
   993: DTid                 ( 0 -    384)
   994: :                    ( 0 -    384)
   995: SV_DispatchThreadID  ( 0 -    384)
   996: ,                    ( 0 -    384)
   997: uint3                ( 0 -    384)
   998: GTid                 ( 0 -    384)
   999: :                    ( 0 -    384)
  1000: SV_GroupThreadID     ( 0 -    384)
  1001: ,                    ( 0 -    384)
  1002: uint                 ( 0 -    384)
  1003: GI                   ( 0 -    384)
  1004: :                    ( 0 -    384)
  1005: SV_GroupIndex        ( 0 -    384)
  1006: )                    ( 0 -    384)
  1007: {                    ( 0 -    385)
  1008: float4               ( 0 -    387)
  1009: coord                ( 0 -    387)
  1010: =                    ( 0 -    387)
  1011: float4               ( 0 -    387)
  1012: (                    ( 0 -    387)
  1013: (                    ( 0 -    387)
  1014: float                ( 0 -    387)
  1015: )                    ( 0 -    387)
  1016: DTid                 ( 0 -    387)
  1017: .                    ( 0 -    387)
  1018: x                    ( 0 -    387)
  1019: ,                    ( 0 -    387)
  1020: (                    ( 0 -    387)
  1021: float                ( 0 -    387)
  1022: )                    ( 0 -    387)
  1023: DTid                 ( 0 -    387)
  1024: .                    ( 0 -    387)
  1025: y                    ( 0 -    387)
  1026: ,                    ( 0 -    387)
  1027: 0.000000             ( 0 -    387)
  1028: ,                    ( 0 -    387)
  1029: 0.000000             ( 0 -    387)
  1030: )                    ( 0 -    387)
  1031: ;                    ( 0 -    387)
  1032: float2               ( 0 -    390)
  1033: size                 ( 0 -    390)
  1034: =                    ( 0 -    390)
  1035: float2               ( 0 -    390)
  1036: (                    ( 0 -    390)
  1037: (                    ( 0 -    390)
  1038: float                ( 0 -    390)
  1039: )                    ( 0 -    390)
  1040: c_width              ( 0 -    390)
  1041: ,                    ( 0 -    390)
  1042: (                    ( 0 -    390)
  1043: float                ( 0 -    390)
  1044: )                    ( 0 -    390)
  1045: c_height             ( 0 -    390)
  1046: )                    ( 0 -    390)
  1047: ;                    ( 0 -    390)
  1048: float                ( 0 -    391)
  1049: scale                ( 0 -    391)
  1050: =                    ( 0 -    391)
  1051: min                  ( 0 -    391)
  1052: (                    ( 0 -    391)
  1053: size                 ( 0 -    391)
  1054: .                    ( 0 -    391)
  1055: x                    ( 0 -    391)
  1056: ,                    ( 0 -    391)
  1057: size                 ( 0 -    391)
  1058: .                    ( 0 -    391)
  1059: y                    ( 0 -    391)
  1060: )                    ( 0 -    391)
  1061: ;                    ( 0 -    391)
  1062: float2               ( 0 -    392)
  1063: halfvec              ( 0 -    392)
  1064: =                    ( 0 -    392)
  1065: float2               ( 0 -    392)
  1066: (                    ( 0 -    392)
  1067: 0.500000             ( 0 -    392)
  1068: ,                    ( 0 -    392)
  1069: 0.500000             ( 0 -    392)
  1070: )                    ( 0 -    392)
  1071: ;                    ( 0 -    392)
  1072: float2               ( 0 -    393)
  1073: position             ( 0 -    393)
  1074: =                    ( 0 -    393)
  1075: (                    ( 0 -    393)
  1076: coord                ( 0 -    393)
  1077: .                    ( 0 -    393)
  1078: xy                   ( 0 -    393)
  1079: -                    ( 0 -    393)
  1080: halfvec              ( 0 -    393)
  1081: *                    ( 0 -    393)
  1082: size                 ( 0 -    393)
  1083: )                    ( 0 -    393)
  1084: /                    ( 0 -    393)
  1085: scale                ( 0 -    393)
  1086: *                    ( 0 -    393)
  1087: 3.000000             ( 0 -    393)
  1088: *                    ( 0 -    393)
  1089: zoom                 ( 0 -    393)
  1090: ;                    ( 0 -    393)
  1091: float4               ( 0 -    396)
  1092: light                ( 0 -    396)
  1093: =                    ( 0 -    396)
  1094: float4               ( 0 -    396)
  1095: (                    ( 0 -    396)
  1096: 1.500000             ( 0 -    396)
  1097: ,                    ( 0 -    396)
  1098: 0.500000             ( 0 -    396)
  1099: ,                    ( 0 -    396)
  1100: 4.000000             ( 0 -    396)
  1101: ,                    ( 0 -    396)
  1102: 0.000000             ( 0 -    396)
  1103: )                    ( 0 -    396)
  1104: ;                    ( 0 -    396)
  1105: float4               ( 0 -    397)
  1106: eye                  ( 0 -    397)
  1107: =                    ( 0 -    397)
  1108: float4               ( 0 -    397)
  1109: (                    ( 0 -    397)
  1110: 0.000000             ( 0 -    397)
  1111: ,                    ( 0 -    397)
  1112: 0.000000             ( 0 -    397)
  1113: ,                    ( 0 -    397)
  1114: 4.000000             ( 0 -    397)
  1115: ,                    ( 0 -    397)
  1116: 0.000000             ( 0 -    397)
  1117: )                    ( 0 -    397)
  1118: ;                    ( 0 -    397)
  1119: float4               ( 0 -    398)
  1120: ray                  ( 0 -    398)
  1121: =                    ( 0 -    398)
  1122: float4               ( 0 -    398)
  1123: (                    ( 0 -    398)
  1124: position             ( 0 -    398)
  1125: .                    ( 0 -    398)
  1126: x                    ( 0 -    398)
  1127: ,                    ( 0 -    398)
  1128: position             ( 0 -    398)
  1129: .                    ( 0 -    398)
  1130: y                    ( 0 -    398)
  1131: ,                    ( 0 -    398)
  1132: 0.000000             ( 0 -    398)
  1133: ,                    ( 0 -    398)
  1134: 0.000000             ( 0 -    398)
  1135: )                    ( 0 -    398)
  1136: ;                    ( 0 -    398)
  1137: light                ( 0 -    402)
  1138: =                    ( 0 -    402)
  1139: mul                  ( 0 -    402)
  1140: (                    ( 0 -    402)
  1141: light                ( 0 -    402)
  1142: ,                    ( 0 -    402)
  1143: mvp                  ( 0 -    402)
  1144: )                    ( 0 -    402)
  1145: ;                    ( 0 -    402)
  1146: eye                  ( 0 -    403)
  1147: =                    ( 0 -    403)
  1148: mul                  ( 0 -    403)
  1149: (                    ( 0 -    403)
  1150: eye                  ( 0 -    403)
  1151: ,                    ( 0 -    403)
  1152: mvp                  ( 0 -    403)
  1153: )                    ( 0 -    403)
  1154: ;                    ( 0 -    403)
  1155: ray                  ( 0 -    404)
  1156: =                    ( 0 -    404)
  1157: mul                  ( 0 -    404)
  1158: (                    ( 0 -    404)
  1159: ray                  ( 0 -    404)
  1160: ,                    ( 0 -    404)
  1161: mvp                  ( 0 -    404)
  1162: )                    ( 0 -    404)
  1163: ;                    ( 0 -    404)
  1164: float3               ( 0 -    409)
  1165: rO                   ( 0 -    409)
  1166: =                    ( 0 -    409)
  1167: eye                  ( 0 -    409)
  1168: .                    ( 0 -    409)
  1169: xyz                  ( 0 -    409)
  1170: ;                    ( 0 -    409)
  1171: float3               ( 0 -    410)
  1172: rD                   ( 0 -    410)
  1173: =                    ( 0 -    410)
  1174: ray                  ( 0 -    410)
  1175: .                    ( 0 -    410)
  1176: xyz                  ( 0 -    410)
  1177: -                    ( 0 -    410)
  1178: rO                   ( 0 -    410)
  1179: ;                    ( 0 -    410)
  1180: float4               ( 0 -    413)
  1181: color                ( 0 -    413)
  1182: =                    ( 0 -    413)
  1183: QJulia               ( 0 -    413)
  1184: (                    ( 0 -    413)
  1185: rO                   ( 0 -    413)
  1186: ,                    ( 0 -    413)
  1187: rD                   ( 0 -    413)
  1188: ,                    ( 0 -    413)
  1189: c_mu                 ( 0 -    413)
  1190: ,                    ( 0 -    413)
  1191: c_epsilon            ( 0 -    413)
  1192: ,                    ( 0 -    413)
  1193: eye                  ( 0 -    413)
  1194: .                    ( 0 -    413)
  1195: xyz                  ( 0 -    413)
  1196: ,                    ( 0 -    413)
  1197: light                ( 0 -    413)
  1198: .                    ( 0 -    413)
  1199: xyz                  ( 0 -    413)
  1200: ,                    ( 0 -    413)
  1201: c_renderSoftShadows  ( 0 -    413)
  1202: )                    ( 0 -    413)
  1203: ;                    ( 0 -    413)
  1204: outputTexture        ( 0 -    415)
  1205: [                    ( 0 -    415)
  1206: DTid                 ( 0 -    415)
  1207: .                    ( 0 -    415)
  1208: xy                   ( 0 -    415)
  1209: ]                    ( 0 -    415)
  1210: =                    ( 0 -    415)
  1211: color                ( 0 -    415)
  1212: ;                    ( 0 -    415)
  1213: }                    ( 0 -    416)
  1214: <eof>                ( 0 -    417)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/02_Compute/Shaders/D3D12/compute.comp

