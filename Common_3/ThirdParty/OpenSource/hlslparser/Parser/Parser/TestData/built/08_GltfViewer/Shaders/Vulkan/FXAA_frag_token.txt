     0: Texture2D            ( 0 -     30)
     1: sceneTexture         ( 0 -     30)
     2: :                    ( 0 -     30)
     3: register             ( 0 -     30)
     4: (                    ( 0 -     30)
     5: t6                   ( 0 -     30)
     6: )                    ( 0 -     30)
     7: ;                    ( 0 -     30)
     8: SamplerState         ( 0 -     32)
     9: clampMiplessLinearSampler ( 0 -     32)
    10: :                    ( 0 -     32)
    11: register             ( 0 -     32)
    12: (                    ( 0 -     32)
    13: s7                   ( 0 -     32)
    14: )                    ( 0 -     32)
    15: ;                    ( 0 -     32)
    16: cbuffer              ( 0 -     34)
    17: FXAARootConstant     ( 0 -     34)
    18: :                    ( 0 -     34)
    19: register             ( 0 -     34)
    20: (                    ( 0 -     34)
    21: b21                  ( 0 -     34)
    22: )                    ( 0 -     34)
    23: {                    ( 0 -     35)
    24: float2               ( 0 -     36)
    25: ScreenSize           ( 0 -     36)
    26: ;                    ( 0 -     36)
    27: uint                 ( 0 -     37)
    28: Use                  ( 0 -     37)
    29: ;                    ( 0 -     37)
    30: uint                 ( 0 -     38)
    31: padding00            ( 0 -     38)
    32: ;                    ( 0 -     38)
    33: }                    ( 0 -     39)
    34: float                ( 0 -     41)
    35: rgb2luma             ( 0 -     41)
    36: (                    ( 0 -     41)
    37: float3               ( 0 -     41)
    38: rgb                  ( 0 -     41)
    39: )                    ( 0 -     41)
    40: {                    ( 0 -     41)
    41: return               ( 0 -     42)
    42: sqrt                 ( 0 -     42)
    43: (                    ( 0 -     42)
    44: dot                  ( 0 -     42)
    45: (                    ( 0 -     42)
    46: rgb                  ( 0 -     42)
    47: ,                    ( 0 -     42)
    48: float3               ( 0 -     42)
    49: (                    ( 0 -     42)
    50: 0.299000             ( 0 -     42)
    51: ,                    ( 0 -     42)
    52: 0.587000             ( 0 -     42)
    53: ,                    ( 0 -     42)
    54: 0.114000             ( 0 -     42)
    55: )                    ( 0 -     42)
    56: )                    ( 0 -     42)
    57: )                    ( 0 -     42)
    58: ;                    ( 0 -     42)
    59: }                    ( 0 -     43)
    60: float3               ( 0 -     45)
    61: FXAA                 ( 0 -     45)
    62: (                    ( 0 -     45)
    63: float2               ( 0 -     45)
    64: UV                   ( 0 -     45)
    65: ,                    ( 0 -     45)
    66: int2                 ( 0 -     45)
    67: Pixel                ( 0 -     45)
    68: )                    ( 0 -     45)
    69: {                    ( 0 -     46)
    70: float                ( 0 -     47)
    71: QUALITY              ( 0 -     47)
    72: [                    ( 0 -     47)
    73: 12                   ( 0 -     47)
    74: ]                    ( 0 -     47)
    75: =                    ( 0 -     47)
    76: {                    ( 0 -     47)
    77: 0.000000             ( 0 -     47)
    78: ,                    ( 0 -     47)
    79: 0.000000             ( 0 -     47)
    80: ,                    ( 0 -     47)
    81: 0.000000             ( 0 -     47)
    82: ,                    ( 0 -     47)
    83: 0.000000             ( 0 -     47)
    84: ,                    ( 0 -     47)
    85: 0.000000             ( 0 -     47)
    86: ,                    ( 0 -     47)
    87: 1.500000             ( 0 -     47)
    88: ,                    ( 0 -     47)
    89: 2.000000             ( 0 -     47)
    90: ,                    ( 0 -     47)
    91: 2.000000             ( 0 -     47)
    92: ,                    ( 0 -     47)
    93: 2.000000             ( 0 -     47)
    94: ,                    ( 0 -     47)
    95: 2.000000             ( 0 -     47)
    96: ,                    ( 0 -     47)
    97: 4.000000             ( 0 -     47)
    98: ,                    ( 0 -     47)
    99: 8.000000             ( 0 -     47)
   100: }                    ( 0 -     47)
   101: ;                    ( 0 -     47)
   102: float3               ( 0 -     49)
   103: colorCenter          ( 0 -     49)
   104: =                    ( 0 -     49)
   105: sceneTexture         ( 0 -     49)
   106: .                    ( 0 -     49)
   107: Load                 ( 0 -     49)
   108: (                    ( 0 -     49)
   109: int3                 ( 0 -     49)
   110: (                    ( 0 -     49)
   111: Pixel                ( 0 -     49)
   112: .                    ( 0 -     49)
   113: x                    ( 0 -     49)
   114: ,                    ( 0 -     49)
   115: Pixel                ( 0 -     49)
   116: .                    ( 0 -     49)
   117: y                    ( 0 -     49)
   118: ,                    ( 0 -     49)
   119: 0                    ( 0 -     49)
   120: )                    ( 0 -     49)
   121: ,                    ( 0 -     49)
   122: int2                 ( 0 -     49)
   123: (                    ( 0 -     49)
   124: 0                    ( 0 -     49)
   125: ,                    ( 0 -     49)
   126: 0                    ( 0 -     49)
   127: )                    ( 0 -     49)
   128: )                    ( 0 -     49)
   129: .                    ( 0 -     49)
   130: rgb                  ( 0 -     49)
   131: ;                    ( 0 -     49)
   132: float                ( 0 -     52)
   133: lumaCenter           ( 0 -     52)
   134: =                    ( 0 -     52)
   135: rgb2luma             ( 0 -     52)
   136: (                    ( 0 -     52)
   137: colorCenter          ( 0 -     52)
   138: )                    ( 0 -     52)
   139: ;                    ( 0 -     52)
   140: float                ( 0 -     55)
   141: lumaD                ( 0 -     55)
   142: =                    ( 0 -     55)
   143: rgb2luma             ( 0 -     55)
   144: (                    ( 0 -     55)
   145: sceneTexture         ( 0 -     55)
   146: .                    ( 0 -     55)
   147: Load                 ( 0 -     55)
   148: (                    ( 0 -     55)
   149: int3                 ( 0 -     55)
   150: (                    ( 0 -     55)
   151: Pixel                ( 0 -     55)
   152: .                    ( 0 -     55)
   153: x                    ( 0 -     55)
   154: ,                    ( 0 -     55)
   155: Pixel                ( 0 -     55)
   156: .                    ( 0 -     55)
   157: y                    ( 0 -     55)
   158: ,                    ( 0 -     55)
   159: 0                    ( 0 -     55)
   160: )                    ( 0 -     55)
   161: ,                    ( 0 -     55)
   162: int2                 ( 0 -     55)
   163: (                    ( 0 -     55)
   164: 0                    ( 0 -     55)
   165: ,                    ( 0 -     55)
   166: -                    ( 0 -     55)
   167: 1                    ( 0 -     55)
   168: )                    ( 0 -     55)
   169: )                    ( 0 -     55)
   170: .                    ( 0 -     55)
   171: rgb                  ( 0 -     55)
   172: )                    ( 0 -     55)
   173: ;                    ( 0 -     55)
   174: float                ( 0 -     56)
   175: lumaU                ( 0 -     56)
   176: =                    ( 0 -     56)
   177: rgb2luma             ( 0 -     56)
   178: (                    ( 0 -     56)
   179: sceneTexture         ( 0 -     56)
   180: .                    ( 0 -     56)
   181: Load                 ( 0 -     56)
   182: (                    ( 0 -     56)
   183: int3                 ( 0 -     56)
   184: (                    ( 0 -     56)
   185: Pixel                ( 0 -     56)
   186: .                    ( 0 -     56)
   187: x                    ( 0 -     56)
   188: ,                    ( 0 -     56)
   189: Pixel                ( 0 -     56)
   190: .                    ( 0 -     56)
   191: y                    ( 0 -     56)
   192: ,                    ( 0 -     56)
   193: 0                    ( 0 -     56)
   194: )                    ( 0 -     56)
   195: ,                    ( 0 -     56)
   196: int2                 ( 0 -     56)
   197: (                    ( 0 -     56)
   198: 0                    ( 0 -     56)
   199: ,                    ( 0 -     56)
   200: 1                    ( 0 -     56)
   201: )                    ( 0 -     56)
   202: )                    ( 0 -     56)
   203: .                    ( 0 -     56)
   204: rgb                  ( 0 -     56)
   205: )                    ( 0 -     56)
   206: ;                    ( 0 -     56)
   207: float                ( 0 -     57)
   208: lumaL                ( 0 -     57)
   209: =                    ( 0 -     57)
   210: rgb2luma             ( 0 -     57)
   211: (                    ( 0 -     57)
   212: sceneTexture         ( 0 -     57)
   213: .                    ( 0 -     57)
   214: Load                 ( 0 -     57)
   215: (                    ( 0 -     57)
   216: int3                 ( 0 -     57)
   217: (                    ( 0 -     57)
   218: Pixel                ( 0 -     57)
   219: .                    ( 0 -     57)
   220: x                    ( 0 -     57)
   221: ,                    ( 0 -     57)
   222: Pixel                ( 0 -     57)
   223: .                    ( 0 -     57)
   224: y                    ( 0 -     57)
   225: ,                    ( 0 -     57)
   226: 0                    ( 0 -     57)
   227: )                    ( 0 -     57)
   228: ,                    ( 0 -     57)
   229: int2                 ( 0 -     57)
   230: (                    ( 0 -     57)
   231: -                    ( 0 -     57)
   232: 1                    ( 0 -     57)
   233: ,                    ( 0 -     57)
   234: 0                    ( 0 -     57)
   235: )                    ( 0 -     57)
   236: )                    ( 0 -     57)
   237: .                    ( 0 -     57)
   238: rgb                  ( 0 -     57)
   239: )                    ( 0 -     57)
   240: ;                    ( 0 -     57)
   241: float                ( 0 -     58)
   242: lumaR                ( 0 -     58)
   243: =                    ( 0 -     58)
   244: rgb2luma             ( 0 -     58)
   245: (                    ( 0 -     58)
   246: sceneTexture         ( 0 -     58)
   247: .                    ( 0 -     58)
   248: Load                 ( 0 -     58)
   249: (                    ( 0 -     58)
   250: int3                 ( 0 -     58)
   251: (                    ( 0 -     58)
   252: Pixel                ( 0 -     58)
   253: .                    ( 0 -     58)
   254: x                    ( 0 -     58)
   255: ,                    ( 0 -     58)
   256: Pixel                ( 0 -     58)
   257: .                    ( 0 -     58)
   258: y                    ( 0 -     58)
   259: ,                    ( 0 -     58)
   260: 0                    ( 0 -     58)
   261: )                    ( 0 -     58)
   262: ,                    ( 0 -     58)
   263: int2                 ( 0 -     58)
   264: (                    ( 0 -     58)
   265: 1                    ( 0 -     58)
   266: ,                    ( 0 -     58)
   267: 0                    ( 0 -     58)
   268: )                    ( 0 -     58)
   269: )                    ( 0 -     58)
   270: .                    ( 0 -     58)
   271: rgb                  ( 0 -     58)
   272: )                    ( 0 -     58)
   273: ;                    ( 0 -     58)
   274: float                ( 0 -     61)
   275: lumaMin              ( 0 -     61)
   276: =                    ( 0 -     61)
   277: min                  ( 0 -     61)
   278: (                    ( 0 -     61)
   279: lumaCenter           ( 0 -     61)
   280: ,                    ( 0 -     61)
   281: min                  ( 0 -     61)
   282: (                    ( 0 -     61)
   283: min                  ( 0 -     61)
   284: (                    ( 0 -     61)
   285: lumaD                ( 0 -     61)
   286: ,                    ( 0 -     61)
   287: lumaU                ( 0 -     61)
   288: )                    ( 0 -     61)
   289: ,                    ( 0 -     61)
   290: min                  ( 0 -     61)
   291: (                    ( 0 -     61)
   292: lumaL                ( 0 -     61)
   293: ,                    ( 0 -     61)
   294: lumaR                ( 0 -     61)
   295: )                    ( 0 -     61)
   296: )                    ( 0 -     61)
   297: )                    ( 0 -     61)
   298: ;                    ( 0 -     61)
   299: float                ( 0 -     62)
   300: lumaMax              ( 0 -     62)
   301: =                    ( 0 -     62)
   302: max                  ( 0 -     62)
   303: (                    ( 0 -     62)
   304: lumaCenter           ( 0 -     62)
   305: ,                    ( 0 -     62)
   306: max                  ( 0 -     62)
   307: (                    ( 0 -     62)
   308: max                  ( 0 -     62)
   309: (                    ( 0 -     62)
   310: lumaD                ( 0 -     62)
   311: ,                    ( 0 -     62)
   312: lumaU                ( 0 -     62)
   313: )                    ( 0 -     62)
   314: ,                    ( 0 -     62)
   315: max                  ( 0 -     62)
   316: (                    ( 0 -     62)
   317: lumaL                ( 0 -     62)
   318: ,                    ( 0 -     62)
   319: lumaR                ( 0 -     62)
   320: )                    ( 0 -     62)
   321: )                    ( 0 -     62)
   322: )                    ( 0 -     62)
   323: ;                    ( 0 -     62)
   324: float                ( 0 -     65)
   325: lumaRange            ( 0 -     65)
   326: =                    ( 0 -     65)
   327: lumaMax              ( 0 -     65)
   328: -                    ( 0 -     65)
   329: lumaMin              ( 0 -     65)
   330: ;                    ( 0 -     65)
   331: if                   ( 0 -     67)
   332: (                    ( 0 -     67)
   333: lumaRange            ( 0 -     67)
   334: <                    ( 0 -     67)
   335: max                  ( 0 -     67)
   336: (                    ( 0 -     67)
   337: 0.031200             ( 0 -     67)
   338: ,                    ( 0 -     67)
   339: lumaMax              ( 0 -     67)
   340: *                    ( 0 -     67)
   341: 0.125000             ( 0 -     67)
   342: )                    ( 0 -     67)
   343: )                    ( 0 -     67)
   344: return               ( 0 -     68)
   345: sceneTexture         ( 0 -     68)
   346: .                    ( 0 -     68)
   347: Sample               ( 0 -     68)
   348: (                    ( 0 -     68)
   349: clampMiplessLinearSampler ( 0 -     68)
   350: ,                    ( 0 -     68)
   351: UV                   ( 0 -     68)
   352: )                    ( 0 -     68)
   353: .                    ( 0 -     68)
   354: rgb                  ( 0 -     68)
   355: ;                    ( 0 -     68)
   356: float                ( 0 -     71)
   357: lumaDL               ( 0 -     71)
   358: =                    ( 0 -     71)
   359: rgb2luma             ( 0 -     71)
   360: (                    ( 0 -     71)
   361: sceneTexture         ( 0 -     71)
   362: .                    ( 0 -     71)
   363: Load                 ( 0 -     71)
   364: (                    ( 0 -     71)
   365: int3                 ( 0 -     71)
   366: (                    ( 0 -     71)
   367: Pixel                ( 0 -     71)
   368: .                    ( 0 -     71)
   369: x                    ( 0 -     71)
   370: ,                    ( 0 -     71)
   371: Pixel                ( 0 -     71)
   372: .                    ( 0 -     71)
   373: y                    ( 0 -     71)
   374: ,                    ( 0 -     71)
   375: 0                    ( 0 -     71)
   376: )                    ( 0 -     71)
   377: ,                    ( 0 -     71)
   378: int2                 ( 0 -     71)
   379: (                    ( 0 -     71)
   380: -                    ( 0 -     71)
   381: 1                    ( 0 -     71)
   382: ,                    ( 0 -     71)
   383: -                    ( 0 -     71)
   384: 1                    ( 0 -     71)
   385: )                    ( 0 -     71)
   386: )                    ( 0 -     71)
   387: .                    ( 0 -     71)
   388: rgb                  ( 0 -     71)
   389: )                    ( 0 -     71)
   390: ;                    ( 0 -     71)
   391: float                ( 0 -     72)
   392: lumaUR               ( 0 -     72)
   393: =                    ( 0 -     72)
   394: rgb2luma             ( 0 -     72)
   395: (                    ( 0 -     72)
   396: sceneTexture         ( 0 -     72)
   397: .                    ( 0 -     72)
   398: Load                 ( 0 -     72)
   399: (                    ( 0 -     72)
   400: int3                 ( 0 -     72)
   401: (                    ( 0 -     72)
   402: Pixel                ( 0 -     72)
   403: .                    ( 0 -     72)
   404: x                    ( 0 -     72)
   405: ,                    ( 0 -     72)
   406: Pixel                ( 0 -     72)
   407: .                    ( 0 -     72)
   408: y                    ( 0 -     72)
   409: ,                    ( 0 -     72)
   410: 0                    ( 0 -     72)
   411: )                    ( 0 -     72)
   412: ,                    ( 0 -     72)
   413: int2                 ( 0 -     72)
   414: (                    ( 0 -     72)
   415: 1                    ( 0 -     72)
   416: ,                    ( 0 -     72)
   417: 1                    ( 0 -     72)
   418: )                    ( 0 -     72)
   419: )                    ( 0 -     72)
   420: .                    ( 0 -     72)
   421: rgb                  ( 0 -     72)
   422: )                    ( 0 -     72)
   423: ;                    ( 0 -     72)
   424: float                ( 0 -     73)
   425: lumaUL               ( 0 -     73)
   426: =                    ( 0 -     73)
   427: rgb2luma             ( 0 -     73)
   428: (                    ( 0 -     73)
   429: sceneTexture         ( 0 -     73)
   430: .                    ( 0 -     73)
   431: Load                 ( 0 -     73)
   432: (                    ( 0 -     73)
   433: int3                 ( 0 -     73)
   434: (                    ( 0 -     73)
   435: Pixel                ( 0 -     73)
   436: .                    ( 0 -     73)
   437: x                    ( 0 -     73)
   438: ,                    ( 0 -     73)
   439: Pixel                ( 0 -     73)
   440: .                    ( 0 -     73)
   441: y                    ( 0 -     73)
   442: ,                    ( 0 -     73)
   443: 0                    ( 0 -     73)
   444: )                    ( 0 -     73)
   445: ,                    ( 0 -     73)
   446: int2                 ( 0 -     73)
   447: (                    ( 0 -     73)
   448: -                    ( 0 -     73)
   449: 1                    ( 0 -     73)
   450: ,                    ( 0 -     73)
   451: 1                    ( 0 -     73)
   452: )                    ( 0 -     73)
   453: )                    ( 0 -     73)
   454: .                    ( 0 -     73)
   455: rgb                  ( 0 -     73)
   456: )                    ( 0 -     73)
   457: ;                    ( 0 -     73)
   458: float                ( 0 -     74)
   459: lumaDR               ( 0 -     74)
   460: =                    ( 0 -     74)
   461: rgb2luma             ( 0 -     74)
   462: (                    ( 0 -     74)
   463: sceneTexture         ( 0 -     74)
   464: .                    ( 0 -     74)
   465: Load                 ( 0 -     74)
   466: (                    ( 0 -     74)
   467: int3                 ( 0 -     74)
   468: (                    ( 0 -     74)
   469: Pixel                ( 0 -     74)
   470: .                    ( 0 -     74)
   471: x                    ( 0 -     74)
   472: ,                    ( 0 -     74)
   473: Pixel                ( 0 -     74)
   474: .                    ( 0 -     74)
   475: y                    ( 0 -     74)
   476: ,                    ( 0 -     74)
   477: 0                    ( 0 -     74)
   478: )                    ( 0 -     74)
   479: ,                    ( 0 -     74)
   480: int2                 ( 0 -     74)
   481: (                    ( 0 -     74)
   482: 1                    ( 0 -     74)
   483: ,                    ( 0 -     74)
   484: -                    ( 0 -     74)
   485: 1                    ( 0 -     74)
   486: )                    ( 0 -     74)
   487: )                    ( 0 -     74)
   488: .                    ( 0 -     74)
   489: rgb                  ( 0 -     74)
   490: )                    ( 0 -     74)
   491: ;                    ( 0 -     74)
   492: float                ( 0 -     77)
   493: lumaDownUp           ( 0 -     77)
   494: =                    ( 0 -     77)
   495: lumaD                ( 0 -     77)
   496: +                    ( 0 -     77)
   497: lumaU                ( 0 -     77)
   498: ;                    ( 0 -     77)
   499: float                ( 0 -     78)
   500: lumaLeftRight        ( 0 -     78)
   501: =                    ( 0 -     78)
   502: lumaL                ( 0 -     78)
   503: +                    ( 0 -     78)
   504: lumaR                ( 0 -     78)
   505: ;                    ( 0 -     78)
   506: float                ( 0 -     81)
   507: lumaLeftCorners      ( 0 -     81)
   508: =                    ( 0 -     81)
   509: lumaDL               ( 0 -     81)
   510: +                    ( 0 -     81)
   511: lumaUL               ( 0 -     81)
   512: ;                    ( 0 -     81)
   513: float                ( 0 -     82)
   514: lumaDownCorners      ( 0 -     82)
   515: =                    ( 0 -     82)
   516: lumaDL               ( 0 -     82)
   517: +                    ( 0 -     82)
   518: lumaDR               ( 0 -     82)
   519: ;                    ( 0 -     82)
   520: float                ( 0 -     83)
   521: lumaRightCorners     ( 0 -     83)
   522: =                    ( 0 -     83)
   523: lumaDR               ( 0 -     83)
   524: +                    ( 0 -     83)
   525: lumaUR               ( 0 -     83)
   526: ;                    ( 0 -     83)
   527: float                ( 0 -     84)
   528: lumaUpCorners        ( 0 -     84)
   529: =                    ( 0 -     84)
   530: lumaUR               ( 0 -     84)
   531: +                    ( 0 -     84)
   532: lumaUL               ( 0 -     84)
   533: ;                    ( 0 -     84)
   534: float                ( 0 -     87)
   535: edgeHorizontal       ( 0 -     87)
   536: =                    ( 0 -     87)
   537: abs                  ( 0 -     87)
   538: (                    ( 0 -     87)
   539: -                    ( 0 -     87)
   540: 2.000000             ( 0 -     87)
   541: *                    ( 0 -     87)
   542: lumaL                ( 0 -     87)
   543: +                    ( 0 -     87)
   544: lumaLeftCorners      ( 0 -     87)
   545: )                    ( 0 -     87)
   546: +                    ( 0 -     87)
   547: abs                  ( 0 -     87)
   548: (                    ( 0 -     87)
   549: -                    ( 0 -     87)
   550: 2.000000             ( 0 -     87)
   551: *                    ( 0 -     87)
   552: lumaCenter           ( 0 -     87)
   553: +                    ( 0 -     87)
   554: lumaDownUp           ( 0 -     87)
   555: )                    ( 0 -     87)
   556: *                    ( 0 -     87)
   557: 2.000000             ( 0 -     87)
   558: +                    ( 0 -     87)
   559: abs                  ( 0 -     87)
   560: (                    ( 0 -     87)
   561: -                    ( 0 -     87)
   562: 2.000000             ( 0 -     87)
   563: *                    ( 0 -     87)
   564: lumaR                ( 0 -     87)
   565: +                    ( 0 -     87)
   566: lumaRightCorners     ( 0 -     87)
   567: )                    ( 0 -     87)
   568: ;                    ( 0 -     87)
   569: float                ( 0 -     88)
   570: edgeVertical         ( 0 -     88)
   571: =                    ( 0 -     88)
   572: abs                  ( 0 -     88)
   573: (                    ( 0 -     88)
   574: -                    ( 0 -     88)
   575: 2.000000             ( 0 -     88)
   576: *                    ( 0 -     88)
   577: lumaU                ( 0 -     88)
   578: +                    ( 0 -     88)
   579: lumaUpCorners        ( 0 -     88)
   580: )                    ( 0 -     88)
   581: +                    ( 0 -     88)
   582: abs                  ( 0 -     88)
   583: (                    ( 0 -     88)
   584: -                    ( 0 -     88)
   585: 2.000000             ( 0 -     88)
   586: *                    ( 0 -     88)
   587: lumaCenter           ( 0 -     88)
   588: +                    ( 0 -     88)
   589: lumaLeftRight        ( 0 -     88)
   590: )                    ( 0 -     88)
   591: *                    ( 0 -     88)
   592: 2.000000             ( 0 -     88)
   593: +                    ( 0 -     88)
   594: abs                  ( 0 -     88)
   595: (                    ( 0 -     88)
   596: -                    ( 0 -     88)
   597: 2.000000             ( 0 -     88)
   598: *                    ( 0 -     88)
   599: lumaD                ( 0 -     88)
   600: +                    ( 0 -     88)
   601: lumaDownCorners      ( 0 -     88)
   602: )                    ( 0 -     88)
   603: ;                    ( 0 -     88)
   604: float                ( 0 -     91)
   605: isHorizontal         ( 0 -     91)
   606: =                    ( 0 -     91)
   607: (                    ( 0 -     91)
   608: edgeHorizontal       ( 0 -     91)
   609: unknown              ( 0 -     91)
   610: edgeVertical         ( 0 -     91)
   611: )                    ( 0 -     91)
   612: ?                    ( 0 -     91)
   613: 0.000000             ( 0 -     91)
   614: :                    ( 0 -     91)
   615: 1.000000             ( 0 -     91)
   616: ;                    ( 0 -     91)
   617: float                ( 0 -     94)
   618: luma1                ( 0 -     94)
   619: =                    ( 0 -     94)
   620: lerp                 ( 0 -     94)
   621: (                    ( 0 -     94)
   622: lumaD                ( 0 -     94)
   623: ,                    ( 0 -     94)
   624: lumaL                ( 0 -     94)
   625: ,                    ( 0 -     94)
   626: isHorizontal         ( 0 -     94)
   627: )                    ( 0 -     94)
   628: ;                    ( 0 -     94)
   629: float                ( 0 -     95)
   630: luma2                ( 0 -     95)
   631: =                    ( 0 -     95)
   632: lerp                 ( 0 -     95)
   633: (                    ( 0 -     95)
   634: lumaU                ( 0 -     95)
   635: ,                    ( 0 -     95)
   636: lumaR                ( 0 -     95)
   637: ,                    ( 0 -     95)
   638: isHorizontal         ( 0 -     95)
   639: )                    ( 0 -     95)
   640: ;                    ( 0 -     95)
   641: float                ( 0 -     98)
   642: gradient1            ( 0 -     98)
   643: =                    ( 0 -     98)
   644: luma1                ( 0 -     98)
   645: -                    ( 0 -     98)
   646: lumaCenter           ( 0 -     98)
   647: ;                    ( 0 -     98)
   648: float                ( 0 -     99)
   649: gradient2            ( 0 -     99)
   650: =                    ( 0 -     99)
   651: luma2                ( 0 -     99)
   652: -                    ( 0 -     99)
   653: lumaCenter           ( 0 -     99)
   654: ;                    ( 0 -     99)
   655: bool                 ( 0 -    102)
   656: is1Steepest          ( 0 -    102)
   657: =                    ( 0 -    102)
   658: abs                  ( 0 -    102)
   659: (                    ( 0 -    102)
   660: gradient1            ( 0 -    102)
   661: )                    ( 0 -    102)
   662: unknown              ( 0 -    102)
   663: abs                  ( 0 -    102)
   664: (                    ( 0 -    102)
   665: gradient2            ( 0 -    102)
   666: )                    ( 0 -    102)
   667: ;                    ( 0 -    102)
   668: float                ( 0 -    105)
   669: gradientScaled       ( 0 -    105)
   670: =                    ( 0 -    105)
   671: 0.250000             ( 0 -    105)
   672: *                    ( 0 -    105)
   673: max                  ( 0 -    105)
   674: (                    ( 0 -    105)
   675: abs                  ( 0 -    105)
   676: (                    ( 0 -    105)
   677: gradient1            ( 0 -    105)
   678: )                    ( 0 -    105)
   679: ,                    ( 0 -    105)
   680: abs                  ( 0 -    105)
   681: (                    ( 0 -    105)
   682: gradient2            ( 0 -    105)
   683: )                    ( 0 -    105)
   684: )                    ( 0 -    105)
   685: ;                    ( 0 -    105)
   686: float2               ( 0 -    109)
   687: inverseScreenSize    ( 0 -    109)
   688: =                    ( 0 -    109)
   689: float2               ( 0 -    109)
   690: (                    ( 0 -    109)
   691: (                    ( 0 -    109)
   692: 1.000000             ( 0 -    109)
   693: /                    ( 0 -    109)
   694: ScreenSize           ( 0 -    109)
   695: .                    ( 0 -    109)
   696: x                    ( 0 -    109)
   697: )                    ( 0 -    109)
   698: ,                    ( 0 -    109)
   699: (                    ( 0 -    109)
   700: 1.000000             ( 0 -    109)
   701: /                    ( 0 -    109)
   702: ScreenSize           ( 0 -    109)
   703: .                    ( 0 -    109)
   704: y                    ( 0 -    109)
   705: )                    ( 0 -    109)
   706: )                    ( 0 -    109)
   707: ;                    ( 0 -    109)
   708: float                ( 0 -    111)
   709: stepLength           ( 0 -    111)
   710: =                    ( 0 -    111)
   711: lerp                 ( 0 -    111)
   712: (                    ( 0 -    111)
   713: inverseScreenSize    ( 0 -    111)
   714: .                    ( 0 -    111)
   715: y                    ( 0 -    111)
   716: ,                    ( 0 -    111)
   717: inverseScreenSize    ( 0 -    111)
   718: .                    ( 0 -    111)
   719: x                    ( 0 -    111)
   720: ,                    ( 0 -    111)
   721: isHorizontal         ( 0 -    111)
   722: )                    ( 0 -    111)
   723: ;                    ( 0 -    111)
   724: float                ( 0 -    114)
   725: lumaLocalAverage     ( 0 -    114)
   726: =                    ( 0 -    114)
   727: 0.000000             ( 0 -    114)
   728: ;                    ( 0 -    114)
   729: if                   ( 0 -    116)
   730: (                    ( 0 -    116)
   731: is1Steepest          ( 0 -    116)
   732: )                    ( 0 -    116)
   733: {                    ( 0 -    117)
   734: stepLength           ( 0 -    119)
   735: =                    ( 0 -    119)
   736: -                    ( 0 -    119)
   737: stepLength           ( 0 -    119)
   738: ;                    ( 0 -    119)
   739: lumaLocalAverage     ( 0 -    120)
   740: =                    ( 0 -    120)
   741: 0.500000             ( 0 -    120)
   742: *                    ( 0 -    120)
   743: (                    ( 0 -    120)
   744: luma1                ( 0 -    120)
   745: +                    ( 0 -    120)
   746: lumaCenter           ( 0 -    120)
   747: )                    ( 0 -    120)
   748: ;                    ( 0 -    120)
   749: }                    ( 0 -    121)
   750: else                 ( 0 -    122)
   751: {                    ( 0 -    123)
   752: lumaLocalAverage     ( 0 -    124)
   753: =                    ( 0 -    124)
   754: 0.500000             ( 0 -    124)
   755: *                    ( 0 -    124)
   756: (                    ( 0 -    124)
   757: luma2                ( 0 -    124)
   758: +                    ( 0 -    124)
   759: lumaCenter           ( 0 -    124)
   760: )                    ( 0 -    124)
   761: ;                    ( 0 -    124)
   762: }                    ( 0 -    125)
   763: float2               ( 0 -    128)
   764: currentUv            ( 0 -    128)
   765: =                    ( 0 -    128)
   766: UV                   ( 0 -    128)
   767: ;                    ( 0 -    128)
   768: if                   ( 0 -    129)
   769: (                    ( 0 -    129)
   770: isHorizontal         ( 0 -    129)
   771: <                    ( 0 -    129)
   772: 0.500000             ( 0 -    129)
   773: )                    ( 0 -    129)
   774: {                    ( 0 -    130)
   775: currentUv            ( 0 -    131)
   776: .                    ( 0 -    131)
   777: y                    ( 0 -    131)
   778: +=                   ( 0 -    131)
   779: stepLength           ( 0 -    131)
   780: *                    ( 0 -    131)
   781: 0.500000             ( 0 -    131)
   782: ;                    ( 0 -    131)
   783: }                    ( 0 -    132)
   784: else                 ( 0 -    133)
   785: {                    ( 0 -    134)
   786: currentUv            ( 0 -    135)
   787: .                    ( 0 -    135)
   788: x                    ( 0 -    135)
   789: +=                   ( 0 -    135)
   790: stepLength           ( 0 -    135)
   791: *                    ( 0 -    135)
   792: 0.500000             ( 0 -    135)
   793: ;                    ( 0 -    135)
   794: }                    ( 0 -    136)
   795: float2               ( 0 -    139)
   796: offset               ( 0 -    139)
   797: =                    ( 0 -    139)
   798: lerp                 ( 0 -    139)
   799: (                    ( 0 -    139)
   800: float2               ( 0 -    139)
   801: (                    ( 0 -    139)
   802: inverseScreenSize    ( 0 -    139)
   803: .                    ( 0 -    139)
   804: x                    ( 0 -    139)
   805: ,                    ( 0 -    139)
   806: 0.000000             ( 0 -    139)
   807: )                    ( 0 -    139)
   808: ,                    ( 0 -    139)
   809: float2               ( 0 -    139)
   810: (                    ( 0 -    139)
   811: 0.000000             ( 0 -    139)
   812: ,                    ( 0 -    139)
   813: inverseScreenSize    ( 0 -    139)
   814: .                    ( 0 -    139)
   815: y                    ( 0 -    139)
   816: )                    ( 0 -    139)
   817: ,                    ( 0 -    139)
   818: isHorizontal         ( 0 -    139)
   819: )                    ( 0 -    139)
   820: ;                    ( 0 -    139)
   821: float2               ( 0 -    141)
   822: uv1                  ( 0 -    141)
   823: =                    ( 0 -    141)
   824: currentUv            ( 0 -    141)
   825: -                    ( 0 -    141)
   826: offset               ( 0 -    141)
   827: ;                    ( 0 -    141)
   828: float2               ( 0 -    142)
   829: uv2                  ( 0 -    142)
   830: =                    ( 0 -    142)
   831: currentUv            ( 0 -    142)
   832: +                    ( 0 -    142)
   833: offset               ( 0 -    142)
   834: ;                    ( 0 -    142)
   835: float                ( 0 -    145)
   836: lumaEnd1             ( 0 -    145)
   837: =                    ( 0 -    145)
   838: rgb2luma             ( 0 -    145)
   839: (                    ( 0 -    145)
   840: sceneTexture         ( 0 -    145)
   841: .                    ( 0 -    145)
   842: Sample               ( 0 -    145)
   843: (                    ( 0 -    145)
   844: clampMiplessLinearSampler ( 0 -    145)
   845: ,                    ( 0 -    145)
   846: uv1                  ( 0 -    145)
   847: )                    ( 0 -    145)
   848: .                    ( 0 -    145)
   849: rgb                  ( 0 -    145)
   850: )                    ( 0 -    145)
   851: ;                    ( 0 -    145)
   852: float                ( 0 -    146)
   853: lumaEnd2             ( 0 -    146)
   854: =                    ( 0 -    146)
   855: rgb2luma             ( 0 -    146)
   856: (                    ( 0 -    146)
   857: sceneTexture         ( 0 -    146)
   858: .                    ( 0 -    146)
   859: Sample               ( 0 -    146)
   860: (                    ( 0 -    146)
   861: clampMiplessLinearSampler ( 0 -    146)
   862: ,                    ( 0 -    146)
   863: uv2                  ( 0 -    146)
   864: )                    ( 0 -    146)
   865: .                    ( 0 -    146)
   866: rgb                  ( 0 -    146)
   867: )                    ( 0 -    146)
   868: ;                    ( 0 -    146)
   869: lumaEnd1             ( 0 -    147)
   870: -=                   ( 0 -    147)
   871: lumaLocalAverage     ( 0 -    147)
   872: ;                    ( 0 -    147)
   873: lumaEnd2             ( 0 -    148)
   874: -=                   ( 0 -    148)
   875: lumaLocalAverage     ( 0 -    148)
   876: ;                    ( 0 -    148)
   877: bool                 ( 0 -    151)
   878: reached1             ( 0 -    151)
   879: =                    ( 0 -    151)
   880: abs                  ( 0 -    151)
   881: (                    ( 0 -    151)
   882: lumaEnd1             ( 0 -    151)
   883: )                    ( 0 -    151)
   884: unknown              ( 0 -    151)
   885: gradientScaled       ( 0 -    151)
   886: ;                    ( 0 -    151)
   887: bool                 ( 0 -    152)
   888: reached2             ( 0 -    152)
   889: =                    ( 0 -    152)
   890: abs                  ( 0 -    152)
   891: (                    ( 0 -    152)
   892: lumaEnd2             ( 0 -    152)
   893: )                    ( 0 -    152)
   894: unknown              ( 0 -    152)
   895: gradientScaled       ( 0 -    152)
   896: ;                    ( 0 -    152)
   897: bool                 ( 0 -    153)
   898: reachedBoth          ( 0 -    153)
   899: =                    ( 0 -    153)
   900: reached1             ( 0 -    153)
   901: unknown              ( 0 -    153)
   902: reached2             ( 0 -    153)
   903: ;                    ( 0 -    153)
   904: if                   ( 0 -    156)
   905: (                    ( 0 -    156)
   906: !                    ( 0 -    156)
   907: reached1             ( 0 -    156)
   908: )                    ( 0 -    156)
   909: {                    ( 0 -    157)
   910: uv1                  ( 0 -    158)
   911: -=                   ( 0 -    158)
   912: offset               ( 0 -    158)
   913: ;                    ( 0 -    158)
   914: }                    ( 0 -    159)
   915: if                   ( 0 -    160)
   916: (                    ( 0 -    160)
   917: !                    ( 0 -    160)
   918: reached2             ( 0 -    160)
   919: )                    ( 0 -    160)
   920: {                    ( 0 -    161)
   921: uv2                  ( 0 -    162)
   922: +=                   ( 0 -    162)
   923: offset               ( 0 -    162)
   924: ;                    ( 0 -    162)
   925: }                    ( 0 -    163)
   926: if                   ( 0 -    166)
   927: (                    ( 0 -    166)
   928: !                    ( 0 -    166)
   929: reachedBoth          ( 0 -    166)
   930: )                    ( 0 -    166)
   931: {                    ( 0 -    167)
   932: [                    ( 0 -    168)
   933: unroll               ( 0 -    168)
   934: ]                    ( 0 -    168)
   935: for                  ( 0 -    169)
   936: (                    ( 0 -    169)
   937: int                  ( 0 -    169)
   938: i                    ( 0 -    169)
   939: =                    ( 0 -    169)
   940: 2                    ( 0 -    169)
   941: ;                    ( 0 -    169)
   942: i                    ( 0 -    169)
   943: <                    ( 0 -    169)
   944: 12                   ( 0 -    169)
   945: ;                    ( 0 -    169)
   946: ++                   ( 0 -    169)
   947: i                    ( 0 -    169)
   948: )                    ( 0 -    169)
   949: {                    ( 0 -    170)
   950: if                   ( 0 -    172)
   951: (                    ( 0 -    172)
   952: !                    ( 0 -    172)
   953: reached1             ( 0 -    172)
   954: )                    ( 0 -    172)
   955: {                    ( 0 -    173)
   956: lumaEnd1             ( 0 -    174)
   957: =                    ( 0 -    174)
   958: rgb2luma             ( 0 -    174)
   959: (                    ( 0 -    174)
   960: sceneTexture         ( 0 -    174)
   961: .                    ( 0 -    174)
   962: Sample               ( 0 -    174)
   963: (                    ( 0 -    174)
   964: clampMiplessLinearSampler ( 0 -    174)
   965: ,                    ( 0 -    174)
   966: uv1                  ( 0 -    174)
   967: )                    ( 0 -    174)
   968: .                    ( 0 -    174)
   969: rgb                  ( 0 -    174)
   970: )                    ( 0 -    174)
   971: ;                    ( 0 -    174)
   972: lumaEnd1             ( 0 -    175)
   973: =                    ( 0 -    175)
   974: lumaEnd1             ( 0 -    175)
   975: -                    ( 0 -    175)
   976: lumaLocalAverage     ( 0 -    175)
   977: ;                    ( 0 -    175)
   978: }                    ( 0 -    176)
   979: if                   ( 0 -    179)
   980: (                    ( 0 -    179)
   981: !                    ( 0 -    179)
   982: reached2             ( 0 -    179)
   983: )                    ( 0 -    179)
   984: {                    ( 0 -    180)
   985: lumaEnd2             ( 0 -    181)
   986: =                    ( 0 -    181)
   987: rgb2luma             ( 0 -    181)
   988: (                    ( 0 -    181)
   989: sceneTexture         ( 0 -    181)
   990: .                    ( 0 -    181)
   991: Sample               ( 0 -    181)
   992: (                    ( 0 -    181)
   993: clampMiplessLinearSampler ( 0 -    181)
   994: ,                    ( 0 -    181)
   995: uv2                  ( 0 -    181)
   996: )                    ( 0 -    181)
   997: .                    ( 0 -    181)
   998: rgb                  ( 0 -    181)
   999: )                    ( 0 -    181)
  1000: ;                    ( 0 -    181)
  1001: lumaEnd2             ( 0 -    182)
  1002: =                    ( 0 -    182)
  1003: lumaEnd2             ( 0 -    182)
  1004: -                    ( 0 -    182)
  1005: lumaLocalAverage     ( 0 -    182)
  1006: ;                    ( 0 -    182)
  1007: }                    ( 0 -    183)
  1008: reached1             ( 0 -    186)
  1009: =                    ( 0 -    186)
  1010: abs                  ( 0 -    186)
  1011: (                    ( 0 -    186)
  1012: lumaEnd1             ( 0 -    186)
  1013: )                    ( 0 -    186)
  1014: unknown              ( 0 -    186)
  1015: gradientScaled       ( 0 -    186)
  1016: ;                    ( 0 -    186)
  1017: reached2             ( 0 -    187)
  1018: =                    ( 0 -    187)
  1019: abs                  ( 0 -    187)
  1020: (                    ( 0 -    187)
  1021: lumaEnd2             ( 0 -    187)
  1022: )                    ( 0 -    187)
  1023: unknown              ( 0 -    187)
  1024: gradientScaled       ( 0 -    187)
  1025: ;                    ( 0 -    187)
  1026: reachedBoth          ( 0 -    188)
  1027: =                    ( 0 -    188)
  1028: reached1             ( 0 -    188)
  1029: unknown              ( 0 -    188)
  1030: reached2             ( 0 -    188)
  1031: ;                    ( 0 -    188)
  1032: if                   ( 0 -    191)
  1033: (                    ( 0 -    191)
  1034: !                    ( 0 -    191)
  1035: reached1             ( 0 -    191)
  1036: )                    ( 0 -    191)
  1037: {                    ( 0 -    191)
  1038: uv1                  ( 0 -    192)
  1039: -=                   ( 0 -    192)
  1040: offset               ( 0 -    192)
  1041: *                    ( 0 -    192)
  1042: QUALITY              ( 0 -    192)
  1043: [                    ( 0 -    192)
  1044: i                    ( 0 -    192)
  1045: ]                    ( 0 -    192)
  1046: ;                    ( 0 -    192)
  1047: }                    ( 0 -    193)
  1048: if                   ( 0 -    194)
  1049: (                    ( 0 -    194)
  1050: !                    ( 0 -    194)
  1051: reached2             ( 0 -    194)
  1052: )                    ( 0 -    194)
  1053: {                    ( 0 -    194)
  1054: uv2                  ( 0 -    195)
  1055: +=                   ( 0 -    195)
  1056: offset               ( 0 -    195)
  1057: *                    ( 0 -    195)
  1058: QUALITY              ( 0 -    195)
  1059: [                    ( 0 -    195)
  1060: i                    ( 0 -    195)
  1061: ]                    ( 0 -    195)
  1062: ;                    ( 0 -    195)
  1063: }                    ( 0 -    196)
  1064: if                   ( 0 -    199)
  1065: (                    ( 0 -    199)
  1066: reachedBoth          ( 0 -    199)
  1067: )                    ( 0 -    199)
  1068: {                    ( 0 -    199)
  1069: break                ( 0 -    199)
  1070: ;                    ( 0 -    199)
  1071: }                    ( 0 -    199)
  1072: }                    ( 0 -    200)
  1073: }                    ( 0 -    201)
  1074: float                ( 0 -    205)
  1075: distance1            ( 0 -    205)
  1076: =                    ( 0 -    205)
  1077: lerp                 ( 0 -    205)
  1078: (                    ( 0 -    205)
  1079: (                    ( 0 -    205)
  1080: UV                   ( 0 -    205)
  1081: .                    ( 0 -    205)
  1082: x                    ( 0 -    205)
  1083: -                    ( 0 -    205)
  1084: uv1                  ( 0 -    205)
  1085: .                    ( 0 -    205)
  1086: x                    ( 0 -    205)
  1087: )                    ( 0 -    205)
  1088: ,                    ( 0 -    205)
  1089: (                    ( 0 -    205)
  1090: UV                   ( 0 -    205)
  1091: .                    ( 0 -    205)
  1092: y                    ( 0 -    205)
  1093: -                    ( 0 -    205)
  1094: uv1                  ( 0 -    205)
  1095: .                    ( 0 -    205)
  1096: y                    ( 0 -    205)
  1097: )                    ( 0 -    205)
  1098: ,                    ( 0 -    205)
  1099: isHorizontal         ( 0 -    205)
  1100: )                    ( 0 -    205)
  1101: ;                    ( 0 -    205)
  1102: float                ( 0 -    206)
  1103: distance2            ( 0 -    206)
  1104: =                    ( 0 -    206)
  1105: lerp                 ( 0 -    206)
  1106: (                    ( 0 -    206)
  1107: (                    ( 0 -    206)
  1108: uv2                  ( 0 -    206)
  1109: .                    ( 0 -    206)
  1110: x                    ( 0 -    206)
  1111: -                    ( 0 -    206)
  1112: UV                   ( 0 -    206)
  1113: .                    ( 0 -    206)
  1114: x                    ( 0 -    206)
  1115: )                    ( 0 -    206)
  1116: ,                    ( 0 -    206)
  1117: (                    ( 0 -    206)
  1118: uv2                  ( 0 -    206)
  1119: .                    ( 0 -    206)
  1120: y                    ( 0 -    206)
  1121: -                    ( 0 -    206)
  1122: UV                   ( 0 -    206)
  1123: .                    ( 0 -    206)
  1124: y                    ( 0 -    206)
  1125: )                    ( 0 -    206)
  1126: ,                    ( 0 -    206)
  1127: isHorizontal         ( 0 -    206)
  1128: )                    ( 0 -    206)
  1129: ;                    ( 0 -    206)
  1130: bool                 ( 0 -    209)
  1131: isDirection1         ( 0 -    209)
  1132: =                    ( 0 -    209)
  1133: distance1            ( 0 -    209)
  1134: <                    ( 0 -    209)
  1135: distance2            ( 0 -    209)
  1136: ;                    ( 0 -    209)
  1137: float                ( 0 -    210)
  1138: distanceFinal        ( 0 -    210)
  1139: =                    ( 0 -    210)
  1140: min                  ( 0 -    210)
  1141: (                    ( 0 -    210)
  1142: distance1            ( 0 -    210)
  1143: ,                    ( 0 -    210)
  1144: distance2            ( 0 -    210)
  1145: )                    ( 0 -    210)
  1146: ;                    ( 0 -    210)
  1147: float                ( 0 -    213)
  1148: edgeThickness        ( 0 -    213)
  1149: =                    ( 0 -    213)
  1150: (                    ( 0 -    213)
  1151: distance1            ( 0 -    213)
  1152: +                    ( 0 -    213)
  1153: distance2            ( 0 -    213)
  1154: )                    ( 0 -    213)
  1155: ;                    ( 0 -    213)
  1156: float                ( 0 -    216)
  1157: pixelOffset          ( 0 -    216)
  1158: =                    ( 0 -    216)
  1159: -                    ( 0 -    216)
  1160: distanceFinal        ( 0 -    216)
  1161: /                    ( 0 -    216)
  1162: edgeThickness        ( 0 -    216)
  1163: +                    ( 0 -    216)
  1164: 0.500000             ( 0 -    216)
  1165: ;                    ( 0 -    216)
  1166: bool                 ( 0 -    219)
  1167: isLumaCenterSmaller  ( 0 -    219)
  1168: =                    ( 0 -    219)
  1169: lumaCenter           ( 0 -    219)
  1170: <                    ( 0 -    219)
  1171: lumaLocalAverage     ( 0 -    219)
  1172: ;                    ( 0 -    219)
  1173: bool                 ( 0 -    223)
  1174: correctVariation     ( 0 -    223)
  1175: =                    ( 0 -    223)
  1176: (                    ( 0 -    223)
  1177: (                    ( 0 -    223)
  1178: isDirection1         ( 0 -    223)
  1179: ?                    ( 0 -    223)
  1180: lumaEnd1             ( 0 -    223)
  1181: :                    ( 0 -    223)
  1182: lumaEnd2             ( 0 -    223)
  1183: )                    ( 0 -    223)
  1184: <                    ( 0 -    223)
  1185: 0.000000             ( 0 -    223)
  1186: )                    ( 0 -    223)
  1187: unknown              ( 0 -    223)
  1188: isLumaCenterSmaller  ( 0 -    223)
  1189: ;                    ( 0 -    223)
  1190: float                ( 0 -    226)
  1191: finalOffset          ( 0 -    226)
  1192: =                    ( 0 -    226)
  1193: correctVariation     ( 0 -    226)
  1194: ?                    ( 0 -    226)
  1195: pixelOffset          ( 0 -    226)
  1196: :                    ( 0 -    226)
  1197: 0.000000             ( 0 -    226)
  1198: ;                    ( 0 -    226)
  1199: float                ( 0 -    230)
  1200: lumaAverage          ( 0 -    230)
  1201: =                    ( 0 -    230)
  1202: (                    ( 0 -    230)
  1203: 1.000000             ( 0 -    230)
  1204: /                    ( 0 -    230)
  1205: 12.000000            ( 0 -    230)
  1206: )                    ( 0 -    230)
  1207: *                    ( 0 -    230)
  1208: (                    ( 0 -    230)
  1209: 2.000000             ( 0 -    230)
  1210: *                    ( 0 -    230)
  1211: (                    ( 0 -    230)
  1212: lumaDownUp           ( 0 -    230)
  1213: +                    ( 0 -    230)
  1214: lumaLeftRight        ( 0 -    230)
  1215: )                    ( 0 -    230)
  1216: +                    ( 0 -    230)
  1217: lumaLeftCorners      ( 0 -    230)
  1218: +                    ( 0 -    230)
  1219: lumaRightCorners     ( 0 -    230)
  1220: )                    ( 0 -    230)
  1221: ;                    ( 0 -    230)
  1222: float                ( 0 -    232)
  1223: subPixelOffset1      ( 0 -    232)
  1224: =                    ( 0 -    232)
  1225: clamp                ( 0 -    232)
  1226: (                    ( 0 -    232)
  1227: abs                  ( 0 -    232)
  1228: (                    ( 0 -    232)
  1229: lumaAverage          ( 0 -    232)
  1230: -                    ( 0 -    232)
  1231: lumaCenter           ( 0 -    232)
  1232: )                    ( 0 -    232)
  1233: /                    ( 0 -    232)
  1234: lumaRange            ( 0 -    232)
  1235: ,                    ( 0 -    232)
  1236: 0.000000             ( 0 -    232)
  1237: ,                    ( 0 -    232)
  1238: 1.000000             ( 0 -    232)
  1239: )                    ( 0 -    232)
  1240: ;                    ( 0 -    232)
  1241: float                ( 0 -    233)
  1242: subPixelOffset2      ( 0 -    233)
  1243: =                    ( 0 -    233)
  1244: (                    ( 0 -    233)
  1245: -                    ( 0 -    233)
  1246: 2.000000             ( 0 -    233)
  1247: *                    ( 0 -    233)
  1248: subPixelOffset1      ( 0 -    233)
  1249: +                    ( 0 -    233)
  1250: 3.000000             ( 0 -    233)
  1251: )                    ( 0 -    233)
  1252: *                    ( 0 -    233)
  1253: subPixelOffset1      ( 0 -    233)
  1254: *                    ( 0 -    233)
  1255: subPixelOffset1      ( 0 -    233)
  1256: ;                    ( 0 -    233)
  1257: float                ( 0 -    235)
  1258: subPixelOffsetFinal  ( 0 -    235)
  1259: =                    ( 0 -    235)
  1260: subPixelOffset2      ( 0 -    235)
  1261: *                    ( 0 -    235)
  1262: subPixelOffset2      ( 0 -    235)
  1263: *                    ( 0 -    235)
  1264: 0.750000             ( 0 -    235)
  1265: ;                    ( 0 -    235)
  1266: finalOffset          ( 0 -    238)
  1267: =                    ( 0 -    238)
  1268: max                  ( 0 -    238)
  1269: (                    ( 0 -    238)
  1270: finalOffset          ( 0 -    238)
  1271: ,                    ( 0 -    238)
  1272: subPixelOffsetFinal  ( 0 -    238)
  1273: )                    ( 0 -    238)
  1274: ;                    ( 0 -    238)
  1275: float2               ( 0 -    241)
  1276: finalUv              ( 0 -    241)
  1277: =                    ( 0 -    241)
  1278: UV                   ( 0 -    241)
  1279: ;                    ( 0 -    241)
  1280: if                   ( 0 -    242)
  1281: (                    ( 0 -    242)
  1282: isHorizontal         ( 0 -    242)
  1283: <                    ( 0 -    242)
  1284: 0.500000             ( 0 -    242)
  1285: )                    ( 0 -    242)
  1286: {                    ( 0 -    243)
  1287: finalUv              ( 0 -    244)
  1288: .                    ( 0 -    244)
  1289: y                    ( 0 -    244)
  1290: +=                   ( 0 -    244)
  1291: finalOffset          ( 0 -    244)
  1292: *                    ( 0 -    244)
  1293: stepLength           ( 0 -    244)
  1294: ;                    ( 0 -    244)
  1295: }                    ( 0 -    245)
  1296: else                 ( 0 -    246)
  1297: {                    ( 0 -    247)
  1298: finalUv              ( 0 -    248)
  1299: .                    ( 0 -    248)
  1300: x                    ( 0 -    248)
  1301: +=                   ( 0 -    248)
  1302: finalOffset          ( 0 -    248)
  1303: *                    ( 0 -    248)
  1304: stepLength           ( 0 -    248)
  1305: ;                    ( 0 -    248)
  1306: }                    ( 0 -    249)
  1307: return               ( 0 -    252)
  1308: sceneTexture         ( 0 -    252)
  1309: .                    ( 0 -    252)
  1310: Sample               ( 0 -    252)
  1311: (                    ( 0 -    252)
  1312: clampMiplessLinearSampler ( 0 -    252)
  1313: ,                    ( 0 -    252)
  1314: finalUv              ( 0 -    252)
  1315: )                    ( 0 -    252)
  1316: .                    ( 0 -    252)
  1317: rgb                  ( 0 -    252)
  1318: ;                    ( 0 -    252)
  1319: }                    ( 0 -    253)
  1320: struct               ( 0 -    255)
  1321: PSIn                 ( 0 -    255)
  1322: {                    ( 0 -    255)
  1323: float4               ( 0 -    256)
  1324: Position             ( 0 -    256)
  1325: :                    ( 0 -    256)
  1326: SV_POSITION          ( 0 -    256)
  1327: ;                    ( 0 -    256)
  1328: float2               ( 0 -    257)
  1329: TexCoord             ( 0 -    257)
  1330: :                    ( 0 -    257)
  1331: TEXCOORD             ( 0 -    257)
  1332: ;                    ( 0 -    257)
  1333: }                    ( 0 -    258)
  1334: ;                    ( 0 -    258)
  1335: float4               ( 0 -    260)
  1336: main                 ( 0 -    260)
  1337: (                    ( 0 -    260)
  1338: PSIn                 ( 0 -    260)
  1339: input                ( 0 -    260)
  1340: )                    ( 0 -    260)
  1341: :                    ( 0 -    260)
  1342: SV_TARGET            ( 0 -    260)
  1343: {                    ( 0 -    261)
  1344: float3               ( 0 -    262)
  1345: result               ( 0 -    262)
  1346: =                    ( 0 -    262)
  1347: float3               ( 0 -    262)
  1348: (                    ( 0 -    262)
  1349: 0.000000             ( 0 -    262)
  1350: ,                    ( 0 -    262)
  1351: 0.000000             ( 0 -    262)
  1352: ,                    ( 0 -    262)
  1353: 0.000000             ( 0 -    262)
  1354: )                    ( 0 -    262)
  1355: ;                    ( 0 -    262)
  1356: if                   ( 0 -    263)
  1357: (                    ( 0 -    263)
  1358: Use                  ( 0 -    263)
  1359: )                    ( 0 -    263)
  1360: result               ( 0 -    264)
  1361: =                    ( 0 -    264)
  1362: FXAA                 ( 0 -    264)
  1363: (                    ( 0 -    264)
  1364: input                ( 0 -    264)
  1365: .                    ( 0 -    264)
  1366: TexCoord             ( 0 -    264)
  1367: ,                    ( 0 -    264)
  1368: int2                 ( 0 -    264)
  1369: (                    ( 0 -    264)
  1370: input                ( 0 -    264)
  1371: .                    ( 0 -    264)
  1372: TexCoord             ( 0 -    264)
  1373: *                    ( 0 -    264)
  1374: ScreenSize           ( 0 -    264)
  1375: )                    ( 0 -    264)
  1376: )                    ( 0 -    264)
  1377: ;                    ( 0 -    264)
  1378: else                 ( 0 -    265)
  1379: result               ( 0 -    266)
  1380: =                    ( 0 -    266)
  1381: sceneTexture         ( 0 -    266)
  1382: .                    ( 0 -    266)
  1383: Sample               ( 0 -    266)
  1384: (                    ( 0 -    266)
  1385: clampMiplessLinearSampler ( 0 -    266)
  1386: ,                    ( 0 -    266)
  1387: input                ( 0 -    266)
  1388: .                    ( 0 -    266)
  1389: TexCoord             ( 0 -    266)
  1390: )                    ( 0 -    266)
  1391: .                    ( 0 -    266)
  1392: rgb                  ( 0 -    266)
  1393: ;                    ( 0 -    266)
  1394: return               ( 0 -    268)
  1395: float4               ( 0 -    268)
  1396: (                    ( 0 -    268)
  1397: result               ( 0 -    268)
  1398: .                    ( 0 -    268)
  1399: r                    ( 0 -    268)
  1400: ,                    ( 0 -    268)
  1401: result               ( 0 -    268)
  1402: .                    ( 0 -    268)
  1403: g                    ( 0 -    268)
  1404: ,                    ( 0 -    268)
  1405: result               ( 0 -    268)
  1406: .                    ( 0 -    268)
  1407: b                    ( 0 -    268)
  1408: ,                    ( 0 -    268)
  1409: 1.000000             ( 0 -    268)
  1410: )                    ( 0 -    268)
  1411: ;                    ( 0 -    268)
  1412: }                    ( 0 -    270)
  1413: <eof>                ( 0 -    271)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/08_GltfViewer/Shaders/D3D12/FXAA.frag

