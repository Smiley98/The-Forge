     0: cbuffer              ( 0 -     26)
     1: cbPerPass            ( 0 -     26)
     2: :                    ( 0 -     26)
     3: register             ( 0 -     26)
     4: (                    ( 0 -     26)
     5: b0                   ( 0 -     26)
     6: ,                    ( 0 -     26)
     7: space1               ( 0 -     26)
     8: )                    ( 0 -     26)
     9: {                    ( 0 -     27)
    10: float4x4             ( 0 -     28)
    11: projView             ( 0 -     28)
    12: ;                    ( 0 -     28)
    13: }                    ( 0 -     29)
    14: cbuffer              ( 0 -     31)
    15: cbPerProp            ( 0 -     31)
    16: :                    ( 0 -     31)
    17: register             ( 0 -     31)
    18: (                    ( 0 -     31)
    19: b1                   ( 0 -     31)
    20: )                    ( 0 -     31)
    21: {                    ( 0 -     32)
    22: float4x4             ( 0 -     33)
    23: world                ( 0 -     33)
    24: ;                    ( 0 -     33)
    25: float                ( 0 -     34)
    26: roughness            ( 0 -     34)
    27: ;                    ( 0 -     34)
    28: float                ( 0 -     35)
    29: metallic             ( 0 -     35)
    30: ;                    ( 0 -     35)
    31: int                  ( 0 -     36)
    32: pbrMaterials         ( 0 -     36)
    33: ;                    ( 0 -     36)
    34: float                ( 0 -     37)
    35: pad                  ( 0 -     37)
    36: ;                    ( 0 -     37)
    37: }                    ( 0 -     38)
    38: cbuffer              ( 0 -     40)
    39: cbTextureRootConstants ( 0 -     40)
    40: :                    ( 0 -     40)
    41: register             ( 0 -     40)
    42: (                    ( 0 -     40)
    43: b2                   ( 0 -     40)
    44: )                    ( 0 -     40)
    45: {                    ( 0 -     41)
    46: uint                 ( 0 -     42)
    47: albedoMap            ( 0 -     42)
    48: ;                    ( 0 -     42)
    49: uint                 ( 0 -     43)
    50: normalMap            ( 0 -     43)
    51: ;                    ( 0 -     43)
    52: uint                 ( 0 -     44)
    53: metallicMap          ( 0 -     44)
    54: ;                    ( 0 -     44)
    55: uint                 ( 0 -     45)
    56: roughnessMap         ( 0 -     45)
    57: ;                    ( 0 -     45)
    58: uint                 ( 0 -     46)
    59: aoMap                ( 0 -     46)
    60: ;                    ( 0 -     46)
    61: }                    ( 0 -     47)
    62: SamplerState         ( 0 -     49)
    63: samplerLinear        ( 0 -     49)
    64: :                    ( 0 -     49)
    65: register             ( 0 -     49)
    66: (                    ( 0 -     49)
    67: s2                   ( 0 -     49)
    68: )                    ( 0 -     49)
    69: ;                    ( 0 -     49)
    70: Texture2D            ( 0 -     52)
    71: textureMaps          ( 0 -     52)
    72: [                    ( 0 -     52)
    73: ]                    ( 0 -     52)
    74: :                    ( 0 -     52)
    75: register             ( 0 -     52)
    76: (                    ( 0 -     52)
    77: t3                   ( 0 -     52)
    78: )                    ( 0 -     52)
    79: ;                    ( 0 -     52)
    80: struct               ( 0 -     55)
    81: PsIn                 ( 0 -     55)
    82: {                    ( 0 -     56)
    83: float3               ( 0 -     57)
    84: normal               ( 0 -     57)
    85: :                    ( 0 -     57)
    86: TEXCOORD0            ( 0 -     57)
    87: ;                    ( 0 -     57)
    88: float3               ( 0 -     58)
    89: pos                  ( 0 -     58)
    90: :                    ( 0 -     58)
    91: TEXCOORD1            ( 0 -     58)
    92: ;                    ( 0 -     58)
    93: float2               ( 0 -     59)
    94: uv                   ( 0 -     59)
    95: :                    ( 0 -     59)
    96: TEXCOORD2            ( 0 -     59)
    97: ;                    ( 0 -     59)
    98: }                    ( 0 -     60)
    99: ;                    ( 0 -     60)
   100: struct               ( 0 -     62)
   101: PSOut                ( 0 -     62)
   102: {                    ( 0 -     63)
   103: float4               ( 0 -     64)
   104: albedo               ( 0 -     64)
   105: :                    ( 0 -     64)
   106: SV_Target0           ( 0 -     64)
   107: ;                    ( 0 -     64)
   108: float4               ( 0 -     65)
   109: normal               ( 0 -     65)
   110: :                    ( 0 -     65)
   111: SV_Target1           ( 0 -     65)
   112: ;                    ( 0 -     65)
   113: }                    ( 0 -     66)
   114: ;                    ( 0 -     66)
   115: PSOut                ( 0 -     69)
   116: main                 ( 0 -     69)
   117: (                    ( 0 -     69)
   118: PsIn                 ( 0 -     69)
   119: input                ( 0 -     69)
   120: )                    ( 0 -     69)
   121: :                    ( 0 -     69)
   122: SV_TARGET            ( 0 -     69)
   123: {                    ( 0 -     70)
   124: PSOut                ( 0 -     71)
   125: Out                  ( 0 -     71)
   126: =                    ( 0 -     71)
   127: (                    ( 0 -     71)
   128: PSOut                ( 0 -     71)
   129: )                    ( 0 -     71)
   130: 0                    ( 0 -     71)
   131: ;                    ( 0 -     71)
   132: float3               ( 0 -     74)
   133: albedo               ( 0 -     74)
   134: =                    ( 0 -     74)
   135: textureMaps          ( 0 -     74)
   136: [                    ( 0 -     74)
   137: albedoMap            ( 0 -     74)
   138: ]                    ( 0 -     74)
   139: .                    ( 0 -     74)
   140: Sample               ( 0 -     74)
   141: (                    ( 0 -     74)
   142: samplerLinear        ( 0 -     74)
   143: ,                    ( 0 -     74)
   144: input                ( 0 -     74)
   145: .                    ( 0 -     74)
   146: uv                   ( 0 -     74)
   147: )                    ( 0 -     74)
   148: .                    ( 0 -     74)
   149: rgb                  ( 0 -     74)
   150: ;                    ( 0 -     74)
   151: float3               ( 0 -     76)
   152: N                    ( 0 -     76)
   153: =                    ( 0 -     76)
   154: normalize            ( 0 -     76)
   155: (                    ( 0 -     76)
   156: input                ( 0 -     76)
   157: .                    ( 0 -     76)
   158: normal               ( 0 -     76)
   159: )                    ( 0 -     76)
   160: ;                    ( 0 -     76)
   161: Out                  ( 0 -     78)
   162: .                    ( 0 -     78)
   163: albedo               ( 0 -     78)
   164: =                    ( 0 -     78)
   165: float4               ( 0 -     78)
   166: (                    ( 0 -     78)
   167: albedo               ( 0 -     78)
   168: ,                    ( 0 -     78)
   169: 1                    ( 0 -     78)
   170: )                    ( 0 -     78)
   171: ;                    ( 0 -     78)
   172: Out                  ( 0 -     79)
   173: .                    ( 0 -     79)
   174: normal               ( 0 -     79)
   175: =                    ( 0 -     79)
   176: float4               ( 0 -     79)
   177: (                    ( 0 -     79)
   178: N                    ( 0 -     79)
   179: ,                    ( 0 -     79)
   180: 0                    ( 0 -     79)
   181: )                    ( 0 -     79)
   182: ;                    ( 0 -     79)
   183: return               ( 0 -     81)
   184: Out                  ( 0 -     81)
   185: ;                    ( 0 -     81)
   186: }                    ( 0 -     82)
   187: <eof>                ( 0 -     83)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/09a_HybridRaytracing/Shaders/D3D12/gbufferPass.frag

