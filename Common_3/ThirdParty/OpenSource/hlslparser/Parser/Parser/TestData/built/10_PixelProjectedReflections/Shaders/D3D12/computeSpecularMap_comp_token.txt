     0: static               ( 0 -     27)
     1: float                ( 0 -     27)
     2: Pi                   ( 0 -     27)
     3: =                    ( 0 -     27)
     4: 3.141593             ( 0 -     27)
     5: ;                    ( 0 -     27)
     6: static               ( 0 -     28)
     7: int                  ( 0 -     28)
     8: SampleCount          ( 0 -     28)
     9: =                    ( 0 -     28)
    10: 128                  ( 0 -     28)
    11: ;                    ( 0 -     28)
    12: struct               ( 0 -     31)
    13: PrecomputeSkySpecularData ( 0 -     31)
    14: {                    ( 0 -     32)
    15: uint                 ( 0 -     33)
    16: mipSize              ( 0 -     33)
    17: ;                    ( 0 -     33)
    18: float                ( 0 -     34)
    19: roughness            ( 0 -     34)
    20: ;                    ( 0 -     34)
    21: }                    ( 0 -     35)
    22: ;                    ( 0 -     35)
    23: ConstantBuffer       ( 0 -     37)
    24: <                    ( 0 -     37)
    25: PrecomputeSkySpecularData ( 0 -     37)
    26: >                    ( 0 -     37)
    27: RootConstant         ( 0 -     37)
    28: :                    ( 0 -     37)
    29: register             ( 0 -     37)
    30: (                    ( 0 -     37)
    31: b0                   ( 0 -     37)
    32: )                    ( 0 -     37)
    33: ;                    ( 0 -     37)
    34: TextureCube          ( 0 -     38)
    35: srcTexture           ( 0 -     38)
    36: :                    ( 0 -     38)
    37: register             ( 0 -     38)
    38: (                    ( 0 -     38)
    39: t1                   ( 0 -     38)
    40: )                    ( 0 -     38)
    41: ;                    ( 0 -     38)
    42: RWTexture2DArray     ( 0 -     39)
    43: <                    ( 0 -     39)
    44: float4               ( 0 -     39)
    45: >                    ( 0 -     39)
    46: dstTexture           ( 0 -     39)
    47: :                    ( 0 -     39)
    48: register             ( 0 -     39)
    49: (                    ( 0 -     39)
    50: u2                   ( 0 -     39)
    51: ,                    ( 0 -     39)
    52: space3               ( 0 -     39)
    53: )                    ( 0 -     39)
    54: ;                    ( 0 -     39)
    55: SamplerState         ( 0 -     40)
    56: skyboxSampler        ( 0 -     40)
    57: :                    ( 0 -     40)
    58: register             ( 0 -     40)
    59: (                    ( 0 -     40)
    60: s3                   ( 0 -     40)
    61: )                    ( 0 -     40)
    62: ;                    ( 0 -     40)
    63: float                ( 0 -     42)
    64: RadicalInverse_VdC   ( 0 -     42)
    65: (                    ( 0 -     42)
    66: uint                 ( 0 -     42)
    67: bits                 ( 0 -     42)
    68: )                    ( 0 -     42)
    69: {                    ( 0 -     43)
    70: bits                 ( 0 -     44)
    71: =                    ( 0 -     44)
    72: (                    ( 0 -     44)
    73: bits                 ( 0 -     44)
    74: unknown              ( 0 -     44)
    75: 16                   ( 0 -     44)
    76: )                    ( 0 -     44)
    77: |                    ( 0 -     44)
    78: (                    ( 0 -     44)
    79: bits                 ( 0 -     44)
    80: unknown              ( 0 -     44)
    81: 16                   ( 0 -     44)
    82: )                    ( 0 -     44)
    83: ;                    ( 0 -     44)
    84: bits                 ( 0 -     45)
    85: =                    ( 0 -     45)
    86: (                    ( 0 -     45)
    87: (                    ( 0 -     45)
    88: bits                 ( 0 -     45)
    89: &                    ( 0 -     45)
    90: 1431655765           ( 0 -     45)
    91: )                    ( 0 -     45)
    92: unknown              ( 0 -     45)
    93: 1                    ( 0 -     45)
    94: )                    ( 0 -     45)
    95: |                    ( 0 -     45)
    96: (                    ( 0 -     45)
    97: (                    ( 0 -     45)
    98: bits                 ( 0 -     45)
    99: &                    ( 0 -     45)
   100: 2863311530           ( 0 -     45)
   101: )                    ( 0 -     45)
   102: unknown              ( 0 -     45)
   103: 1                    ( 0 -     45)
   104: )                    ( 0 -     45)
   105: ;                    ( 0 -     45)
   106: bits                 ( 0 -     46)
   107: =                    ( 0 -     46)
   108: (                    ( 0 -     46)
   109: (                    ( 0 -     46)
   110: bits                 ( 0 -     46)
   111: &                    ( 0 -     46)
   112: 858993459            ( 0 -     46)
   113: )                    ( 0 -     46)
   114: unknown              ( 0 -     46)
   115: 2                    ( 0 -     46)
   116: )                    ( 0 -     46)
   117: |                    ( 0 -     46)
   118: (                    ( 0 -     46)
   119: (                    ( 0 -     46)
   120: bits                 ( 0 -     46)
   121: &                    ( 0 -     46)
   122: 3435973836           ( 0 -     46)
   123: )                    ( 0 -     46)
   124: unknown              ( 0 -     46)
   125: 2                    ( 0 -     46)
   126: )                    ( 0 -     46)
   127: ;                    ( 0 -     46)
   128: bits                 ( 0 -     47)
   129: =                    ( 0 -     47)
   130: (                    ( 0 -     47)
   131: (                    ( 0 -     47)
   132: bits                 ( 0 -     47)
   133: &                    ( 0 -     47)
   134: 252645135            ( 0 -     47)
   135: )                    ( 0 -     47)
   136: unknown              ( 0 -     47)
   137: 4                    ( 0 -     47)
   138: )                    ( 0 -     47)
   139: |                    ( 0 -     47)
   140: (                    ( 0 -     47)
   141: (                    ( 0 -     47)
   142: bits                 ( 0 -     47)
   143: &                    ( 0 -     47)
   144: 4042322160           ( 0 -     47)
   145: )                    ( 0 -     47)
   146: unknown              ( 0 -     47)
   147: 4                    ( 0 -     47)
   148: )                    ( 0 -     47)
   149: ;                    ( 0 -     47)
   150: bits                 ( 0 -     48)
   151: =                    ( 0 -     48)
   152: (                    ( 0 -     48)
   153: (                    ( 0 -     48)
   154: bits                 ( 0 -     48)
   155: &                    ( 0 -     48)
   156: 16711935             ( 0 -     48)
   157: )                    ( 0 -     48)
   158: unknown              ( 0 -     48)
   159: 8                    ( 0 -     48)
   160: )                    ( 0 -     48)
   161: |                    ( 0 -     48)
   162: (                    ( 0 -     48)
   163: (                    ( 0 -     48)
   164: bits                 ( 0 -     48)
   165: &                    ( 0 -     48)
   166: 4278255360           ( 0 -     48)
   167: )                    ( 0 -     48)
   168: unknown              ( 0 -     48)
   169: 8                    ( 0 -     48)
   170: )                    ( 0 -     48)
   171: ;                    ( 0 -     48)
   172: return               ( 0 -     49)
   173: float                ( 0 -     49)
   174: (                    ( 0 -     49)
   175: bits                 ( 0 -     49)
   176: )                    ( 0 -     49)
   177: *                    ( 0 -     49)
   178: 0.000000             ( 0 -     49)
   179: ;                    ( 0 -     49)
   180: }                    ( 0 -     50)
   181: float2               ( 0 -     52)
   182: Hammersley           ( 0 -     52)
   183: (                    ( 0 -     52)
   184: uint                 ( 0 -     52)
   185: i                    ( 0 -     52)
   186: ,                    ( 0 -     52)
   187: uint                 ( 0 -     52)
   188: N                    ( 0 -     52)
   189: )                    ( 0 -     52)
   190: {                    ( 0 -     53)
   191: return               ( 0 -     54)
   192: float2               ( 0 -     54)
   193: (                    ( 0 -     54)
   194: float                ( 0 -     54)
   195: (                    ( 0 -     54)
   196: i                    ( 0 -     54)
   197: )                    ( 0 -     54)
   198: /                    ( 0 -     54)
   199: float                ( 0 -     54)
   200: (                    ( 0 -     54)
   201: N                    ( 0 -     54)
   202: )                    ( 0 -     54)
   203: ,                    ( 0 -     54)
   204: RadicalInverse_VdC   ( 0 -     54)
   205: (                    ( 0 -     54)
   206: i                    ( 0 -     54)
   207: )                    ( 0 -     54)
   208: )                    ( 0 -     54)
   209: ;                    ( 0 -     54)
   210: }                    ( 0 -     55)
   211: float                ( 0 -     57)
   212: DistributionGGX      ( 0 -     57)
   213: (                    ( 0 -     57)
   214: float3               ( 0 -     57)
   215: N                    ( 0 -     57)
   216: ,                    ( 0 -     57)
   217: float3               ( 0 -     57)
   218: H                    ( 0 -     57)
   219: ,                    ( 0 -     57)
   220: float                ( 0 -     57)
   221: roughness            ( 0 -     57)
   222: )                    ( 0 -     57)
   223: {                    ( 0 -     58)
   224: float                ( 0 -     59)
   225: a                    ( 0 -     59)
   226: =                    ( 0 -     59)
   227: roughness            ( 0 -     59)
   228: *                    ( 0 -     59)
   229: roughness            ( 0 -     59)
   230: ;                    ( 0 -     59)
   231: float                ( 0 -     60)
   232: a2                   ( 0 -     60)
   233: =                    ( 0 -     60)
   234: a                    ( 0 -     60)
   235: *                    ( 0 -     60)
   236: a                    ( 0 -     60)
   237: ;                    ( 0 -     60)
   238: float                ( 0 -     61)
   239: NdotH                ( 0 -     61)
   240: =                    ( 0 -     61)
   241: max                  ( 0 -     61)
   242: (                    ( 0 -     61)
   243: dot                  ( 0 -     61)
   244: (                    ( 0 -     61)
   245: N                    ( 0 -     61)
   246: ,                    ( 0 -     61)
   247: H                    ( 0 -     61)
   248: )                    ( 0 -     61)
   249: ,                    ( 0 -     61)
   250: 0.000000             ( 0 -     61)
   251: )                    ( 0 -     61)
   252: ;                    ( 0 -     61)
   253: float                ( 0 -     62)
   254: NdotH2               ( 0 -     62)
   255: =                    ( 0 -     62)
   256: NdotH                ( 0 -     62)
   257: *                    ( 0 -     62)
   258: NdotH                ( 0 -     62)
   259: ;                    ( 0 -     62)
   260: float                ( 0 -     64)
   261: nom                  ( 0 -     64)
   262: =                    ( 0 -     64)
   263: a2                   ( 0 -     64)
   264: ;                    ( 0 -     64)
   265: float                ( 0 -     65)
   266: denom                ( 0 -     65)
   267: =                    ( 0 -     65)
   268: (                    ( 0 -     65)
   269: NdotH2               ( 0 -     65)
   270: *                    ( 0 -     65)
   271: (                    ( 0 -     65)
   272: a2                   ( 0 -     65)
   273: -                    ( 0 -     65)
   274: 1.000000             ( 0 -     65)
   275: )                    ( 0 -     65)
   276: +                    ( 0 -     65)
   277: 1.000000             ( 0 -     65)
   278: )                    ( 0 -     65)
   279: ;                    ( 0 -     65)
   280: denom                ( 0 -     66)
   281: =                    ( 0 -     66)
   282: Pi                   ( 0 -     66)
   283: *                    ( 0 -     66)
   284: denom                ( 0 -     66)
   285: *                    ( 0 -     66)
   286: denom                ( 0 -     66)
   287: ;                    ( 0 -     66)
   288: return               ( 0 -     68)
   289: nom                  ( 0 -     68)
   290: /                    ( 0 -     68)
   291: denom                ( 0 -     68)
   292: ;                    ( 0 -     68)
   293: }                    ( 0 -     69)
   294: float3               ( 0 -     71)
   295: ImportanceSampleGGX  ( 0 -     71)
   296: (                    ( 0 -     71)
   297: float2               ( 0 -     71)
   298: Xi                   ( 0 -     71)
   299: ,                    ( 0 -     71)
   300: float3               ( 0 -     71)
   301: N                    ( 0 -     71)
   302: ,                    ( 0 -     71)
   303: float                ( 0 -     71)
   304: roughness            ( 0 -     71)
   305: )                    ( 0 -     71)
   306: {                    ( 0 -     72)
   307: float                ( 0 -     73)
   308: a                    ( 0 -     73)
   309: =                    ( 0 -     73)
   310: roughness            ( 0 -     73)
   311: *                    ( 0 -     73)
   312: roughness            ( 0 -     73)
   313: ;                    ( 0 -     73)
   314: float                ( 0 -     75)
   315: phi                  ( 0 -     75)
   316: =                    ( 0 -     75)
   317: 2.000000             ( 0 -     75)
   318: *                    ( 0 -     75)
   319: Pi                   ( 0 -     75)
   320: *                    ( 0 -     75)
   321: Xi                   ( 0 -     75)
   322: .                    ( 0 -     75)
   323: x                    ( 0 -     75)
   324: ;                    ( 0 -     75)
   325: float                ( 0 -     76)
   326: cosTheta             ( 0 -     76)
   327: =                    ( 0 -     76)
   328: sqrt                 ( 0 -     76)
   329: (                    ( 0 -     76)
   330: (                    ( 0 -     76)
   331: 1.000000             ( 0 -     76)
   332: -                    ( 0 -     76)
   333: Xi                   ( 0 -     76)
   334: .                    ( 0 -     76)
   335: y                    ( 0 -     76)
   336: )                    ( 0 -     76)
   337: /                    ( 0 -     76)
   338: (                    ( 0 -     76)
   339: 1.000000             ( 0 -     76)
   340: +                    ( 0 -     76)
   341: (                    ( 0 -     76)
   342: a                    ( 0 -     76)
   343: *                    ( 0 -     76)
   344: a                    ( 0 -     76)
   345: -                    ( 0 -     76)
   346: 1.000000             ( 0 -     76)
   347: )                    ( 0 -     76)
   348: *                    ( 0 -     76)
   349: Xi                   ( 0 -     76)
   350: .                    ( 0 -     76)
   351: y                    ( 0 -     76)
   352: )                    ( 0 -     76)
   353: )                    ( 0 -     76)
   354: ;                    ( 0 -     76)
   355: float                ( 0 -     77)
   356: sinTheta             ( 0 -     77)
   357: =                    ( 0 -     77)
   358: sqrt                 ( 0 -     77)
   359: (                    ( 0 -     77)
   360: 1.000000             ( 0 -     77)
   361: -                    ( 0 -     77)
   362: cosTheta             ( 0 -     77)
   363: *                    ( 0 -     77)
   364: cosTheta             ( 0 -     77)
   365: )                    ( 0 -     77)
   366: ;                    ( 0 -     77)
   367: float3               ( 0 -     80)
   368: H                    ( 0 -     80)
   369: ;                    ( 0 -     80)
   370: H                    ( 0 -     81)
   371: .                    ( 0 -     81)
   372: x                    ( 0 -     81)
   373: =                    ( 0 -     81)
   374: cos                  ( 0 -     81)
   375: (                    ( 0 -     81)
   376: phi                  ( 0 -     81)
   377: )                    ( 0 -     81)
   378: *                    ( 0 -     81)
   379: sinTheta             ( 0 -     81)
   380: ;                    ( 0 -     81)
   381: H                    ( 0 -     82)
   382: .                    ( 0 -     82)
   383: y                    ( 0 -     82)
   384: =                    ( 0 -     82)
   385: sin                  ( 0 -     82)
   386: (                    ( 0 -     82)
   387: phi                  ( 0 -     82)
   388: )                    ( 0 -     82)
   389: *                    ( 0 -     82)
   390: sinTheta             ( 0 -     82)
   391: ;                    ( 0 -     82)
   392: H                    ( 0 -     83)
   393: .                    ( 0 -     83)
   394: z                    ( 0 -     83)
   395: =                    ( 0 -     83)
   396: cosTheta             ( 0 -     83)
   397: ;                    ( 0 -     83)
   398: float3               ( 0 -     86)
   399: up                   ( 0 -     86)
   400: =                    ( 0 -     86)
   401: abs                  ( 0 -     86)
   402: (                    ( 0 -     86)
   403: N                    ( 0 -     86)
   404: .                    ( 0 -     86)
   405: z                    ( 0 -     86)
   406: )                    ( 0 -     86)
   407: <                    ( 0 -     86)
   408: 0.999000             ( 0 -     86)
   409: ?                    ( 0 -     86)
   410: float3               ( 0 -     86)
   411: (                    ( 0 -     86)
   412: 0.000000             ( 0 -     86)
   413: ,                    ( 0 -     86)
   414: 0.000000             ( 0 -     86)
   415: ,                    ( 0 -     86)
   416: 1.000000             ( 0 -     86)
   417: )                    ( 0 -     86)
   418: :                    ( 0 -     86)
   419: float3               ( 0 -     86)
   420: (                    ( 0 -     86)
   421: 1.000000             ( 0 -     86)
   422: ,                    ( 0 -     86)
   423: 0.000000             ( 0 -     86)
   424: ,                    ( 0 -     86)
   425: 0.000000             ( 0 -     86)
   426: )                    ( 0 -     86)
   427: ;                    ( 0 -     86)
   428: float3               ( 0 -     87)
   429: tangent              ( 0 -     87)
   430: =                    ( 0 -     87)
   431: normalize            ( 0 -     87)
   432: (                    ( 0 -     87)
   433: cross                ( 0 -     87)
   434: (                    ( 0 -     87)
   435: up                   ( 0 -     87)
   436: ,                    ( 0 -     87)
   437: N                    ( 0 -     87)
   438: )                    ( 0 -     87)
   439: )                    ( 0 -     87)
   440: ;                    ( 0 -     87)
   441: float3               ( 0 -     88)
   442: bitangent            ( 0 -     88)
   443: =                    ( 0 -     88)
   444: cross                ( 0 -     88)
   445: (                    ( 0 -     88)
   446: N                    ( 0 -     88)
   447: ,                    ( 0 -     88)
   448: tangent              ( 0 -     88)
   449: )                    ( 0 -     88)
   450: ;                    ( 0 -     88)
   451: float3               ( 0 -     90)
   452: sampleVec            ( 0 -     90)
   453: =                    ( 0 -     90)
   454: tangent              ( 0 -     90)
   455: *                    ( 0 -     90)
   456: H                    ( 0 -     90)
   457: .                    ( 0 -     90)
   458: x                    ( 0 -     90)
   459: +                    ( 0 -     90)
   460: bitangent            ( 0 -     90)
   461: *                    ( 0 -     90)
   462: H                    ( 0 -     90)
   463: .                    ( 0 -     90)
   464: y                    ( 0 -     90)
   465: +                    ( 0 -     90)
   466: N                    ( 0 -     90)
   467: *                    ( 0 -     90)
   468: H                    ( 0 -     90)
   469: .                    ( 0 -     90)
   470: z                    ( 0 -     90)
   471: ;                    ( 0 -     90)
   472: return               ( 0 -     91)
   473: normalize            ( 0 -     91)
   474: (                    ( 0 -     91)
   475: sampleVec            ( 0 -     91)
   476: )                    ( 0 -     91)
   477: ;                    ( 0 -     91)
   478: }                    ( 0 -     92)
   479: [                    ( 0 -     94)
   480: numthreads           ( 0 -     94)
   481: (                    ( 0 -     94)
   482: 16                   ( 0 -     94)
   483: ,                    ( 0 -     94)
   484: 16                   ( 0 -     94)
   485: ,                    ( 0 -     94)
   486: 1                    ( 0 -     94)
   487: )                    ( 0 -     94)
   488: ]                    ( 0 -     94)
   489: void                 ( 0 -     95)
   490: main                 ( 0 -     95)
   491: (                    ( 0 -     95)
   492: uint3                ( 0 -     95)
   493: DTid                 ( 0 -     95)
   494: :                    ( 0 -     95)
   495: SV_DispatchThreadID  ( 0 -     95)
   496: )                    ( 0 -     95)
   497: {                    ( 0 -     96)
   498: uint3                ( 0 -     97)
   499: threadPos            ( 0 -     97)
   500: =                    ( 0 -     97)
   501: DTid                 ( 0 -     97)
   502: ;                    ( 0 -     97)
   503: float                ( 0 -     99)
   504: mipRoughness         ( 0 -     99)
   505: =                    ( 0 -     99)
   506: RootConstant         ( 0 -     99)
   507: .                    ( 0 -     99)
   508: roughness            ( 0 -     99)
   509: ;                    ( 0 -     99)
   510: uint                 ( 0 -    100)
   511: mipSize              ( 0 -    100)
   512: =                    ( 0 -    100)
   513: RootConstant         ( 0 -    100)
   514: .                    ( 0 -    100)
   515: mipSize              ( 0 -    100)
   516: ;                    ( 0 -    100)
   517: if                   ( 0 -    102)
   518: (                    ( 0 -    102)
   519: threadPos            ( 0 -    102)
   520: .                    ( 0 -    102)
   521: x                    ( 0 -    102)
   522: unknown              ( 0 -    102)
   523: mipSize              ( 0 -    102)
   524: unknown              ( 0 -    102)
   525: threadPos            ( 0 -    102)
   526: .                    ( 0 -    102)
   527: y                    ( 0 -    102)
   528: unknown              ( 0 -    102)
   529: mipSize              ( 0 -    102)
   530: )                    ( 0 -    102)
   531: return               ( 0 -    102)
   532: ;                    ( 0 -    102)
   533: float2               ( 0 -    104)
   534: texcoords            ( 0 -    104)
   535: =                    ( 0 -    104)
   536: float2               ( 0 -    104)
   537: (                    ( 0 -    104)
   538: float                ( 0 -    104)
   539: (                    ( 0 -    104)
   540: threadPos            ( 0 -    104)
   541: .                    ( 0 -    104)
   542: x                    ( 0 -    104)
   543: +                    ( 0 -    104)
   544: 0.500000             ( 0 -    104)
   545: )                    ( 0 -    104)
   546: /                    ( 0 -    104)
   547: mipSize              ( 0 -    104)
   548: ,                    ( 0 -    104)
   549: float                ( 0 -    104)
   550: (                    ( 0 -    104)
   551: threadPos            ( 0 -    104)
   552: .                    ( 0 -    104)
   553: y                    ( 0 -    104)
   554: +                    ( 0 -    104)
   555: 0.500000             ( 0 -    104)
   556: )                    ( 0 -    104)
   557: /                    ( 0 -    104)
   558: mipSize              ( 0 -    104)
   559: )                    ( 0 -    104)
   560: ;                    ( 0 -    104)
   561: float3               ( 0 -    106)
   562: sphereDir            ( 0 -    106)
   563: ;                    ( 0 -    106)
   564: if                   ( 0 -    107)
   565: (                    ( 0 -    107)
   566: threadPos            ( 0 -    107)
   567: .                    ( 0 -    107)
   568: z                    ( 0 -    107)
   569: unknown              ( 0 -    107)
   570: 0                    ( 0 -    107)
   571: )                    ( 0 -    107)
   572: sphereDir            ( 0 -    108)
   573: =                    ( 0 -    108)
   574: normalize            ( 0 -    108)
   575: (                    ( 0 -    108)
   576: float3               ( 0 -    108)
   577: (                    ( 0 -    108)
   578: 0.500000             ( 0 -    108)
   579: ,                    ( 0 -    108)
   580: -                    ( 0 -    108)
   581: (                    ( 0 -    108)
   582: texcoords            ( 0 -    108)
   583: .                    ( 0 -    108)
   584: y                    ( 0 -    108)
   585: -                    ( 0 -    108)
   586: 0.500000             ( 0 -    108)
   587: )                    ( 0 -    108)
   588: ,                    ( 0 -    108)
   589: -                    ( 0 -    108)
   590: (                    ( 0 -    108)
   591: texcoords            ( 0 -    108)
   592: .                    ( 0 -    108)
   593: x                    ( 0 -    108)
   594: -                    ( 0 -    108)
   595: 0.500000             ( 0 -    108)
   596: )                    ( 0 -    108)
   597: )                    ( 0 -    108)
   598: )                    ( 0 -    108)
   599: ;                    ( 0 -    108)
   600: else if              ( 0 -    109)
   601: (                    ( 0 -    109)
   602: threadPos            ( 0 -    109)
   603: .                    ( 0 -    109)
   604: z                    ( 0 -    109)
   605: unknown              ( 0 -    109)
   606: 1                    ( 0 -    109)
   607: )                    ( 0 -    109)
   608: sphereDir            ( 0 -    110)
   609: =                    ( 0 -    110)
   610: normalize            ( 0 -    110)
   611: (                    ( 0 -    110)
   612: float3               ( 0 -    110)
   613: (                    ( 0 -    110)
   614: -                    ( 0 -    110)
   615: 0.500000             ( 0 -    110)
   616: ,                    ( 0 -    110)
   617: -                    ( 0 -    110)
   618: (                    ( 0 -    110)
   619: texcoords            ( 0 -    110)
   620: .                    ( 0 -    110)
   621: y                    ( 0 -    110)
   622: -                    ( 0 -    110)
   623: 0.500000             ( 0 -    110)
   624: )                    ( 0 -    110)
   625: ,                    ( 0 -    110)
   626: texcoords            ( 0 -    110)
   627: .                    ( 0 -    110)
   628: x                    ( 0 -    110)
   629: -                    ( 0 -    110)
   630: 0.500000             ( 0 -    110)
   631: )                    ( 0 -    110)
   632: )                    ( 0 -    110)
   633: ;                    ( 0 -    110)
   634: else if              ( 0 -    111)
   635: (                    ( 0 -    111)
   636: threadPos            ( 0 -    111)
   637: .                    ( 0 -    111)
   638: z                    ( 0 -    111)
   639: unknown              ( 0 -    111)
   640: 2                    ( 0 -    111)
   641: )                    ( 0 -    111)
   642: sphereDir            ( 0 -    112)
   643: =                    ( 0 -    112)
   644: normalize            ( 0 -    112)
   645: (                    ( 0 -    112)
   646: float3               ( 0 -    112)
   647: (                    ( 0 -    112)
   648: texcoords            ( 0 -    112)
   649: .                    ( 0 -    112)
   650: x                    ( 0 -    112)
   651: -                    ( 0 -    112)
   652: 0.500000             ( 0 -    112)
   653: ,                    ( 0 -    112)
   654: 0.500000             ( 0 -    112)
   655: ,                    ( 0 -    112)
   656: texcoords            ( 0 -    112)
   657: .                    ( 0 -    112)
   658: y                    ( 0 -    112)
   659: -                    ( 0 -    112)
   660: 0.500000             ( 0 -    112)
   661: )                    ( 0 -    112)
   662: )                    ( 0 -    112)
   663: ;                    ( 0 -    112)
   664: else if              ( 0 -    113)
   665: (                    ( 0 -    113)
   666: threadPos            ( 0 -    113)
   667: .                    ( 0 -    113)
   668: z                    ( 0 -    113)
   669: unknown              ( 0 -    113)
   670: 3                    ( 0 -    113)
   671: )                    ( 0 -    113)
   672: sphereDir            ( 0 -    114)
   673: =                    ( 0 -    114)
   674: normalize            ( 0 -    114)
   675: (                    ( 0 -    114)
   676: float3               ( 0 -    114)
   677: (                    ( 0 -    114)
   678: texcoords            ( 0 -    114)
   679: .                    ( 0 -    114)
   680: x                    ( 0 -    114)
   681: -                    ( 0 -    114)
   682: 0.500000             ( 0 -    114)
   683: ,                    ( 0 -    114)
   684: -                    ( 0 -    114)
   685: 0.500000             ( 0 -    114)
   686: ,                    ( 0 -    114)
   687: -                    ( 0 -    114)
   688: (                    ( 0 -    114)
   689: texcoords            ( 0 -    114)
   690: .                    ( 0 -    114)
   691: y                    ( 0 -    114)
   692: -                    ( 0 -    114)
   693: 0.500000             ( 0 -    114)
   694: )                    ( 0 -    114)
   695: )                    ( 0 -    114)
   696: )                    ( 0 -    114)
   697: ;                    ( 0 -    114)
   698: else if              ( 0 -    115)
   699: (                    ( 0 -    115)
   700: threadPos            ( 0 -    115)
   701: .                    ( 0 -    115)
   702: z                    ( 0 -    115)
   703: unknown              ( 0 -    115)
   704: 4                    ( 0 -    115)
   705: )                    ( 0 -    115)
   706: sphereDir            ( 0 -    116)
   707: =                    ( 0 -    116)
   708: normalize            ( 0 -    116)
   709: (                    ( 0 -    116)
   710: float3               ( 0 -    116)
   711: (                    ( 0 -    116)
   712: texcoords            ( 0 -    116)
   713: .                    ( 0 -    116)
   714: x                    ( 0 -    116)
   715: -                    ( 0 -    116)
   716: 0.500000             ( 0 -    116)
   717: ,                    ( 0 -    116)
   718: -                    ( 0 -    116)
   719: (                    ( 0 -    116)
   720: texcoords            ( 0 -    116)
   721: .                    ( 0 -    116)
   722: y                    ( 0 -    116)
   723: -                    ( 0 -    116)
   724: 0.500000             ( 0 -    116)
   725: )                    ( 0 -    116)
   726: ,                    ( 0 -    116)
   727: 0.500000             ( 0 -    116)
   728: )                    ( 0 -    116)
   729: )                    ( 0 -    116)
   730: ;                    ( 0 -    116)
   731: else if              ( 0 -    117)
   732: (                    ( 0 -    117)
   733: threadPos            ( 0 -    117)
   734: .                    ( 0 -    117)
   735: z                    ( 0 -    117)
   736: unknown              ( 0 -    117)
   737: 5                    ( 0 -    117)
   738: )                    ( 0 -    117)
   739: sphereDir            ( 0 -    118)
   740: =                    ( 0 -    118)
   741: normalize            ( 0 -    118)
   742: (                    ( 0 -    118)
   743: float3               ( 0 -    118)
   744: (                    ( 0 -    118)
   745: -                    ( 0 -    118)
   746: (                    ( 0 -    118)
   747: texcoords            ( 0 -    118)
   748: .                    ( 0 -    118)
   749: x                    ( 0 -    118)
   750: -                    ( 0 -    118)
   751: 0.500000             ( 0 -    118)
   752: )                    ( 0 -    118)
   753: ,                    ( 0 -    118)
   754: -                    ( 0 -    118)
   755: (                    ( 0 -    118)
   756: texcoords            ( 0 -    118)
   757: .                    ( 0 -    118)
   758: y                    ( 0 -    118)
   759: -                    ( 0 -    118)
   760: 0.500000             ( 0 -    118)
   761: )                    ( 0 -    118)
   762: ,                    ( 0 -    118)
   763: -                    ( 0 -    118)
   764: 0.500000             ( 0 -    118)
   765: )                    ( 0 -    118)
   766: )                    ( 0 -    118)
   767: ;                    ( 0 -    118)
   768: float3               ( 0 -    120)
   769: N                    ( 0 -    120)
   770: =                    ( 0 -    120)
   771: sphereDir            ( 0 -    120)
   772: ;                    ( 0 -    120)
   773: float3               ( 0 -    121)
   774: R                    ( 0 -    121)
   775: =                    ( 0 -    121)
   776: N                    ( 0 -    121)
   777: ;                    ( 0 -    121)
   778: float3               ( 0 -    122)
   779: V                    ( 0 -    122)
   780: =                    ( 0 -    122)
   781: R                    ( 0 -    122)
   782: ;                    ( 0 -    122)
   783: float                ( 0 -    124)
   784: totalWeight          ( 0 -    124)
   785: =                    ( 0 -    124)
   786: 0.000000             ( 0 -    124)
   787: ;                    ( 0 -    124)
   788: float4               ( 0 -    125)
   789: prefilteredColor     ( 0 -    125)
   790: =                    ( 0 -    125)
   791: float4               ( 0 -    125)
   792: (                    ( 0 -    125)
   793: 0.000000             ( 0 -    125)
   794: ,                    ( 0 -    125)
   795: 0.000000             ( 0 -    125)
   796: ,                    ( 0 -    125)
   797: 0.000000             ( 0 -    125)
   798: ,                    ( 0 -    125)
   799: 0.000000             ( 0 -    125)
   800: )                    ( 0 -    125)
   801: ;                    ( 0 -    125)
   802: for                  ( 0 -    127)
   803: (                    ( 0 -    127)
   804: int                  ( 0 -    127)
   805: i                    ( 0 -    127)
   806: =                    ( 0 -    127)
   807: 0                    ( 0 -    127)
   808: ;                    ( 0 -    127)
   809: i                    ( 0 -    127)
   810: <                    ( 0 -    127)
   811: SampleCount          ( 0 -    127)
   812: ;                    ( 0 -    127)
   813: ++                   ( 0 -    127)
   814: i                    ( 0 -    127)
   815: )                    ( 0 -    127)
   816: {                    ( 0 -    128)
   817: float2               ( 0 -    129)
   818: Xi                   ( 0 -    129)
   819: =                    ( 0 -    129)
   820: Hammersley           ( 0 -    129)
   821: (                    ( 0 -    129)
   822: i                    ( 0 -    129)
   823: ,                    ( 0 -    129)
   824: SampleCount          ( 0 -    129)
   825: )                    ( 0 -    129)
   826: ;                    ( 0 -    129)
   827: float3               ( 0 -    130)
   828: H                    ( 0 -    130)
   829: =                    ( 0 -    130)
   830: ImportanceSampleGGX  ( 0 -    130)
   831: (                    ( 0 -    130)
   832: Xi                   ( 0 -    130)
   833: ,                    ( 0 -    130)
   834: N                    ( 0 -    130)
   835: ,                    ( 0 -    130)
   836: mipRoughness         ( 0 -    130)
   837: )                    ( 0 -    130)
   838: ;                    ( 0 -    130)
   839: float3               ( 0 -    131)
   840: L                    ( 0 -    131)
   841: =                    ( 0 -    131)
   842: normalize            ( 0 -    131)
   843: (                    ( 0 -    131)
   844: 2.000000             ( 0 -    131)
   845: *                    ( 0 -    131)
   846: dot                  ( 0 -    131)
   847: (                    ( 0 -    131)
   848: V                    ( 0 -    131)
   849: ,                    ( 0 -    131)
   850: H                    ( 0 -    131)
   851: )                    ( 0 -    131)
   852: *                    ( 0 -    131)
   853: H                    ( 0 -    131)
   854: -                    ( 0 -    131)
   855: V                    ( 0 -    131)
   856: )                    ( 0 -    131)
   857: ;                    ( 0 -    131)
   858: float                ( 0 -    133)
   859: NdotL                ( 0 -    133)
   860: =                    ( 0 -    133)
   861: max                  ( 0 -    133)
   862: (                    ( 0 -    133)
   863: dot                  ( 0 -    133)
   864: (                    ( 0 -    133)
   865: N                    ( 0 -    133)
   866: ,                    ( 0 -    133)
   867: L                    ( 0 -    133)
   868: )                    ( 0 -    133)
   869: ,                    ( 0 -    133)
   870: 0.000000             ( 0 -    133)
   871: )                    ( 0 -    133)
   872: ;                    ( 0 -    133)
   873: if                   ( 0 -    134)
   874: (                    ( 0 -    134)
   875: NdotL                ( 0 -    134)
   876: >                    ( 0 -    134)
   877: 0.000000             ( 0 -    134)
   878: )                    ( 0 -    134)
   879: {                    ( 0 -    135)
   880: float                ( 0 -    137)
   881: D                    ( 0 -    137)
   882: =                    ( 0 -    137)
   883: DistributionGGX      ( 0 -    137)
   884: (                    ( 0 -    137)
   885: N                    ( 0 -    137)
   886: ,                    ( 0 -    137)
   887: H                    ( 0 -    137)
   888: ,                    ( 0 -    137)
   889: mipRoughness         ( 0 -    137)
   890: )                    ( 0 -    137)
   891: ;                    ( 0 -    137)
   892: float                ( 0 -    138)
   893: NdotH                ( 0 -    138)
   894: =                    ( 0 -    138)
   895: max                  ( 0 -    138)
   896: (                    ( 0 -    138)
   897: dot                  ( 0 -    138)
   898: (                    ( 0 -    138)
   899: N                    ( 0 -    138)
   900: ,                    ( 0 -    138)
   901: H                    ( 0 -    138)
   902: )                    ( 0 -    138)
   903: ,                    ( 0 -    138)
   904: 0.000000             ( 0 -    138)
   905: )                    ( 0 -    138)
   906: ;                    ( 0 -    138)
   907: float                ( 0 -    139)
   908: HdotV                ( 0 -    139)
   909: =                    ( 0 -    139)
   910: max                  ( 0 -    139)
   911: (                    ( 0 -    139)
   912: dot                  ( 0 -    139)
   913: (                    ( 0 -    139)
   914: H                    ( 0 -    139)
   915: ,                    ( 0 -    139)
   916: V                    ( 0 -    139)
   917: )                    ( 0 -    139)
   918: ,                    ( 0 -    139)
   919: 0.000000             ( 0 -    139)
   920: )                    ( 0 -    139)
   921: ;                    ( 0 -    139)
   922: float                ( 0 -    140)
   923: pdf                  ( 0 -    140)
   924: =                    ( 0 -    140)
   925: D                    ( 0 -    140)
   926: *                    ( 0 -    140)
   927: NdotH                ( 0 -    140)
   928: /                    ( 0 -    140)
   929: (                    ( 0 -    140)
   930: 4.000000             ( 0 -    140)
   931: *                    ( 0 -    140)
   932: HdotV                ( 0 -    140)
   933: )                    ( 0 -    140)
   934: +                    ( 0 -    140)
   935: 0.000100             ( 0 -    140)
   936: ;                    ( 0 -    140)
   937: float                ( 0 -    142)
   938: saTexel              ( 0 -    142)
   939: =                    ( 0 -    142)
   940: 4.000000             ( 0 -    142)
   941: *                    ( 0 -    142)
   942: Pi                   ( 0 -    142)
   943: /                    ( 0 -    142)
   944: (                    ( 0 -    142)
   945: 6.000000             ( 0 -    142)
   946: *                    ( 0 -    142)
   947: mipSize              ( 0 -    142)
   948: *                    ( 0 -    142)
   949: mipSize              ( 0 -    142)
   950: )                    ( 0 -    142)
   951: ;                    ( 0 -    142)
   952: float                ( 0 -    143)
   953: saSample             ( 0 -    143)
   954: =                    ( 0 -    143)
   955: 1.000000             ( 0 -    143)
   956: /                    ( 0 -    143)
   957: (                    ( 0 -    143)
   958: float                ( 0 -    143)
   959: (                    ( 0 -    143)
   960: SampleCount          ( 0 -    143)
   961: )                    ( 0 -    143)
   962: *                    ( 0 -    143)
   963: pdf                  ( 0 -    143)
   964: +                    ( 0 -    143)
   965: 0.000100             ( 0 -    143)
   966: )                    ( 0 -    143)
   967: ;                    ( 0 -    143)
   968: float                ( 0 -    145)
   969: mipLevel             ( 0 -    145)
   970: =                    ( 0 -    145)
   971: mipRoughness         ( 0 -    145)
   972: unknown              ( 0 -    145)
   973: 0.000000             ( 0 -    145)
   974: ?                    ( 0 -    145)
   975: 0.000000             ( 0 -    145)
   976: :                    ( 0 -    145)
   977: 0.500000             ( 0 -    145)
   978: *                    ( 0 -    145)
   979: log2                 ( 0 -    145)
   980: (                    ( 0 -    145)
   981: saSample             ( 0 -    145)
   982: /                    ( 0 -    145)
   983: saTexel              ( 0 -    145)
   984: )                    ( 0 -    145)
   985: ;                    ( 0 -    145)
   986: prefilteredColor     ( 0 -    148)
   987: +=                   ( 0 -    148)
   988: srcTexture           ( 0 -    148)
   989: .                    ( 0 -    148)
   990: SampleLevel          ( 0 -    148)
   991: (                    ( 0 -    148)
   992: skyboxSampler        ( 0 -    148)
   993: ,                    ( 0 -    148)
   994: L                    ( 0 -    148)
   995: ,                    ( 0 -    148)
   996: mipLevel             ( 0 -    148)
   997: )                    ( 0 -    148)
   998: *                    ( 0 -    148)
   999: NdotL                ( 0 -    148)
  1000: ;                    ( 0 -    148)
  1001: totalWeight          ( 0 -    150)
  1002: +=                   ( 0 -    150)
  1003: NdotL                ( 0 -    150)
  1004: ;                    ( 0 -    150)
  1005: }                    ( 0 -    151)
  1006: }                    ( 0 -    152)
  1007: prefilteredColor     ( 0 -    154)
  1008: =                    ( 0 -    154)
  1009: prefilteredColor     ( 0 -    154)
  1010: /                    ( 0 -    154)
  1011: totalWeight          ( 0 -    154)
  1012: ;                    ( 0 -    154)
  1013: dstTexture           ( 0 -    155)
  1014: [                    ( 0 -    155)
  1015: threadPos            ( 0 -    155)
  1016: ]                    ( 0 -    155)
  1017: =                    ( 0 -    155)
  1018: prefilteredColor     ( 0 -    155)
  1019: ;                    ( 0 -    155)
  1020: }                    ( 0 -    156)
  1021: <eof>                ( 0 -    157)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/10_PixelProjectedReflections/Shaders/D3D12/computeSpecularMap.comp

