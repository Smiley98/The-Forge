#line 1 "C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/10_PixelProjectedReflections/Shaders/D3D12/panoToCube.comp"
#line 25 "C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/10_PixelProjectedReflections/Shaders/D3D12/panoToCube.comp"
struct Data
{
	uint mip;
	uint maxSize;
};

ConstantBuffer<Data> RootConstant : register(b0);
Texture2D<float4> srcTexture : register(t1);

RWTexture2DArray<float4> dstTexture : register(u2,  space3 );
SamplerState skyboxSampler : register(s3);

[numthreads(16, 16, 1)]
void main(uint3 DTid : SV_DispatchThreadID)
{
	float2 invAtan = float2(0.1591f, 0.3183f);

	float3 threadPos = DTid;

	uint mip = RootConstant.mip;

	{
		uint mipSize = RootConstant.maxSize >> mip;
		if (threadPos.x >= mipSize || threadPos.y >= mipSize) return;

		float2 texcoords = float2(float(threadPos.x + 0.5) / mipSize, 1.0f - float(threadPos.y + 0.5) / mipSize);
		float3 sphereDir;
		if (threadPos.z <= 0)
			sphereDir = normalize(float3(0.5, -(texcoords.y - 0.5), -(texcoords.x - 0.5)));
		else if (threadPos.z <= 1)
			sphereDir = normalize(float3(-0.5, -(texcoords.y - 0.5), texcoords.x - 0.5));
		else if (threadPos.z <= 2)
			sphereDir = normalize(float3(texcoords.x - 0.5, -0.5, -(texcoords.y - 0.5)));
		else if (threadPos.z <= 3)
			sphereDir = normalize(float3(texcoords.x - 0.5, 0.5, texcoords.y - 0.5));
		else if (threadPos.z <= 4)
			sphereDir = normalize(float3(texcoords.x - 0.5, -(texcoords.y - 0.5), 0.5));
		else if (threadPos.z <= 5)
			sphereDir = normalize(float3(-(texcoords.x - 0.5), -(texcoords.y - 0.5), -0.5));

		float2 panoUVs = float2(atan2(sphereDir.z, sphereDir.x), asin(sphereDir.y));
		panoUVs *= invAtan;
		panoUVs += 0.5f;


		dstTexture[uint3(threadPos.x, threadPos.y, threadPos.z)] = srcTexture.SampleLevel(skyboxSampler, panoUVs, mip);
	}
}
