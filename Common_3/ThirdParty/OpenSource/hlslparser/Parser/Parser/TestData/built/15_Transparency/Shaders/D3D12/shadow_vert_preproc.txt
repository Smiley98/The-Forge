#line 1 "C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/15_Transparency/Shaders/D3D12/shadow.vert"
#line 25 "C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/15_Transparency/Shaders/D3D12/shadow.vert"
#line 1 "shaderDefs.h"
#line 22 "shaderDefs.h"
struct Material
{
	float4 Color;
	float4 Transmission;
	float RefractionRatio;
	float Collimation;
	float2 Padding;
	uint TextureFlags;
	uint AlbedoTexID;
	uint MetallicTexID;
	uint RoughnessTexID;
	uint EmissiveTexID;
	uint3 Padding2;
};

struct ObjectInfo
{
	float4x4 toWorld;
	float4x4 normalMat;
	uint matID;
};

cbuffer DrawInfoRootConstant :  register(b0, space0 )
{
	uint baseInstance = 0;
};

cbuffer ObjectUniformBlock :  register(b0, space1 )
{
	ObjectInfo objectInfo[ 128 ];
};

cbuffer LightUniformBlock :  register(b3, space1 )
{
	float4x4 lightViewProj;
	float4 lightDirection;
	float4 lightColor;
};

cbuffer CameraUniform :  register(b1, space1 )
{
	float4x4 camViewProj;
	float4x4 camViewMat;
	float4 camClipInfo;
	float4 camPosition;
};

cbuffer MaterialUniform :  register(b2, space1 )
{
	Material Materials[ 128 ];
};

Texture2D MaterialTextures[ 8 ] :  register(t100, space0 ) ;
SamplerState LinearSampler :  register(s0, space0 ) ;

Texture2D VSM :  register(t1, space0 ) ;
SamplerState VSMSampler :  register(s2, space0 ) ;
#line 26 "C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/15_Transparency/Shaders/D3D12/shadow.vert"

struct VSInput
{
	float4 Position : POSITION;
	float3 Normal : NORMAL;
	float2 UV : TEXCOORD0;
};

struct VSOutput
{
	float4 Position : SV_POSITION;
};


VSOutput main(VSInput input, uint InstanceID : SV_InstanceID)
{
	VSOutput output;

	uint instanceID = InstanceID + baseInstance;
	float4 pos = mul(objectInfo[instanceID].toWorld, input.Position);
	output.Position = mul(camViewProj, pos);

	return output;
}
