     0: static               ( 0 -     27)
     1: float                ( 0 -     27)
     2: Pi                   ( 0 -     27)
     3: =                    ( 0 -     27)
     4: 3.141593             ( 0 -     27)
     5: ;                    ( 0 -     27)
     6: static               ( 0 -     28)
     7: float                ( 0 -     28)
     8: SampleCount          ( 0 -     28)
     9: =                    ( 0 -     28)
    10: 128                  ( 0 -     28)
    11: ;                    ( 0 -     28)
    12: float                ( 0 -     30)
    13: RadicalInverse_VdC   ( 0 -     30)
    14: (                    ( 0 -     30)
    15: uint                 ( 0 -     30)
    16: bits                 ( 0 -     30)
    17: )                    ( 0 -     30)
    18: {                    ( 0 -     31)
    19: bits                 ( 0 -     32)
    20: =                    ( 0 -     32)
    21: (                    ( 0 -     32)
    22: bits                 ( 0 -     32)
    23: unknown              ( 0 -     32)
    24: 16                   ( 0 -     32)
    25: )                    ( 0 -     32)
    26: |                    ( 0 -     32)
    27: (                    ( 0 -     32)
    28: bits                 ( 0 -     32)
    29: unknown              ( 0 -     32)
    30: 16                   ( 0 -     32)
    31: )                    ( 0 -     32)
    32: ;                    ( 0 -     32)
    33: bits                 ( 0 -     33)
    34: =                    ( 0 -     33)
    35: (                    ( 0 -     33)
    36: (                    ( 0 -     33)
    37: bits                 ( 0 -     33)
    38: &                    ( 0 -     33)
    39: 1431655765           ( 0 -     33)
    40: )                    ( 0 -     33)
    41: unknown              ( 0 -     33)
    42: 1                    ( 0 -     33)
    43: )                    ( 0 -     33)
    44: |                    ( 0 -     33)
    45: (                    ( 0 -     33)
    46: (                    ( 0 -     33)
    47: bits                 ( 0 -     33)
    48: &                    ( 0 -     33)
    49: 2863311530           ( 0 -     33)
    50: )                    ( 0 -     33)
    51: unknown              ( 0 -     33)
    52: 1                    ( 0 -     33)
    53: )                    ( 0 -     33)
    54: ;                    ( 0 -     33)
    55: bits                 ( 0 -     34)
    56: =                    ( 0 -     34)
    57: (                    ( 0 -     34)
    58: (                    ( 0 -     34)
    59: bits                 ( 0 -     34)
    60: &                    ( 0 -     34)
    61: 858993459            ( 0 -     34)
    62: )                    ( 0 -     34)
    63: unknown              ( 0 -     34)
    64: 2                    ( 0 -     34)
    65: )                    ( 0 -     34)
    66: |                    ( 0 -     34)
    67: (                    ( 0 -     34)
    68: (                    ( 0 -     34)
    69: bits                 ( 0 -     34)
    70: &                    ( 0 -     34)
    71: 3435973836           ( 0 -     34)
    72: )                    ( 0 -     34)
    73: unknown              ( 0 -     34)
    74: 2                    ( 0 -     34)
    75: )                    ( 0 -     34)
    76: ;                    ( 0 -     34)
    77: bits                 ( 0 -     35)
    78: =                    ( 0 -     35)
    79: (                    ( 0 -     35)
    80: (                    ( 0 -     35)
    81: bits                 ( 0 -     35)
    82: &                    ( 0 -     35)
    83: 252645135            ( 0 -     35)
    84: )                    ( 0 -     35)
    85: unknown              ( 0 -     35)
    86: 4                    ( 0 -     35)
    87: )                    ( 0 -     35)
    88: |                    ( 0 -     35)
    89: (                    ( 0 -     35)
    90: (                    ( 0 -     35)
    91: bits                 ( 0 -     35)
    92: &                    ( 0 -     35)
    93: 4042322160           ( 0 -     35)
    94: )                    ( 0 -     35)
    95: unknown              ( 0 -     35)
    96: 4                    ( 0 -     35)
    97: )                    ( 0 -     35)
    98: ;                    ( 0 -     35)
    99: bits                 ( 0 -     36)
   100: =                    ( 0 -     36)
   101: (                    ( 0 -     36)
   102: (                    ( 0 -     36)
   103: bits                 ( 0 -     36)
   104: &                    ( 0 -     36)
   105: 16711935             ( 0 -     36)
   106: )                    ( 0 -     36)
   107: unknown              ( 0 -     36)
   108: 8                    ( 0 -     36)
   109: )                    ( 0 -     36)
   110: |                    ( 0 -     36)
   111: (                    ( 0 -     36)
   112: (                    ( 0 -     36)
   113: bits                 ( 0 -     36)
   114: &                    ( 0 -     36)
   115: 4278255360           ( 0 -     36)
   116: )                    ( 0 -     36)
   117: unknown              ( 0 -     36)
   118: 8                    ( 0 -     36)
   119: )                    ( 0 -     36)
   120: ;                    ( 0 -     36)
   121: return               ( 0 -     37)
   122: float                ( 0 -     37)
   123: (                    ( 0 -     37)
   124: bits                 ( 0 -     37)
   125: )                    ( 0 -     37)
   126: *                    ( 0 -     37)
   127: 0.000000             ( 0 -     37)
   128: ;                    ( 0 -     37)
   129: }                    ( 0 -     38)
   130: float2               ( 0 -     40)
   131: Hammersley           ( 0 -     40)
   132: (                    ( 0 -     40)
   133: uint                 ( 0 -     40)
   134: i                    ( 0 -     40)
   135: ,                    ( 0 -     40)
   136: uint                 ( 0 -     40)
   137: N                    ( 0 -     40)
   138: )                    ( 0 -     40)
   139: {                    ( 0 -     41)
   140: return               ( 0 -     42)
   141: float2               ( 0 -     42)
   142: (                    ( 0 -     42)
   143: float                ( 0 -     42)
   144: (                    ( 0 -     42)
   145: i                    ( 0 -     42)
   146: )                    ( 0 -     42)
   147: /                    ( 0 -     42)
   148: float                ( 0 -     42)
   149: (                    ( 0 -     42)
   150: N                    ( 0 -     42)
   151: )                    ( 0 -     42)
   152: ,                    ( 0 -     42)
   153: RadicalInverse_VdC   ( 0 -     42)
   154: (                    ( 0 -     42)
   155: i                    ( 0 -     42)
   156: )                    ( 0 -     42)
   157: )                    ( 0 -     42)
   158: ;                    ( 0 -     42)
   159: }                    ( 0 -     43)
   160: float3               ( 0 -     45)
   161: ImportanceSampleGGX  ( 0 -     45)
   162: (                    ( 0 -     45)
   163: float2               ( 0 -     45)
   164: Xi                   ( 0 -     45)
   165: ,                    ( 0 -     45)
   166: float3               ( 0 -     45)
   167: N                    ( 0 -     45)
   168: ,                    ( 0 -     45)
   169: float                ( 0 -     45)
   170: roughness            ( 0 -     45)
   171: )                    ( 0 -     45)
   172: {                    ( 0 -     46)
   173: float                ( 0 -     47)
   174: a                    ( 0 -     47)
   175: =                    ( 0 -     47)
   176: roughness            ( 0 -     47)
   177: *                    ( 0 -     47)
   178: roughness            ( 0 -     47)
   179: ;                    ( 0 -     47)
   180: float                ( 0 -     49)
   181: phi                  ( 0 -     49)
   182: =                    ( 0 -     49)
   183: 2.000000             ( 0 -     49)
   184: *                    ( 0 -     49)
   185: Pi                   ( 0 -     49)
   186: *                    ( 0 -     49)
   187: Xi                   ( 0 -     49)
   188: .                    ( 0 -     49)
   189: x                    ( 0 -     49)
   190: ;                    ( 0 -     49)
   191: float                ( 0 -     50)
   192: cosTheta             ( 0 -     50)
   193: =                    ( 0 -     50)
   194: sqrt                 ( 0 -     50)
   195: (                    ( 0 -     50)
   196: (                    ( 0 -     50)
   197: 1.000000             ( 0 -     50)
   198: -                    ( 0 -     50)
   199: Xi                   ( 0 -     50)
   200: .                    ( 0 -     50)
   201: y                    ( 0 -     50)
   202: )                    ( 0 -     50)
   203: /                    ( 0 -     50)
   204: (                    ( 0 -     50)
   205: 1.000000             ( 0 -     50)
   206: +                    ( 0 -     50)
   207: (                    ( 0 -     50)
   208: a                    ( 0 -     50)
   209: *                    ( 0 -     50)
   210: a                    ( 0 -     50)
   211: -                    ( 0 -     50)
   212: 1.000000             ( 0 -     50)
   213: )                    ( 0 -     50)
   214: *                    ( 0 -     50)
   215: Xi                   ( 0 -     50)
   216: .                    ( 0 -     50)
   217: y                    ( 0 -     50)
   218: )                    ( 0 -     50)
   219: )                    ( 0 -     50)
   220: ;                    ( 0 -     50)
   221: float                ( 0 -     51)
   222: sinTheta             ( 0 -     51)
   223: =                    ( 0 -     51)
   224: sqrt                 ( 0 -     51)
   225: (                    ( 0 -     51)
   226: 1.000000             ( 0 -     51)
   227: -                    ( 0 -     51)
   228: cosTheta             ( 0 -     51)
   229: *                    ( 0 -     51)
   230: cosTheta             ( 0 -     51)
   231: )                    ( 0 -     51)
   232: ;                    ( 0 -     51)
   233: float3               ( 0 -     54)
   234: H                    ( 0 -     54)
   235: ;                    ( 0 -     54)
   236: H                    ( 0 -     55)
   237: .                    ( 0 -     55)
   238: x                    ( 0 -     55)
   239: =                    ( 0 -     55)
   240: cos                  ( 0 -     55)
   241: (                    ( 0 -     55)
   242: phi                  ( 0 -     55)
   243: )                    ( 0 -     55)
   244: *                    ( 0 -     55)
   245: sinTheta             ( 0 -     55)
   246: ;                    ( 0 -     55)
   247: H                    ( 0 -     56)
   248: .                    ( 0 -     56)
   249: y                    ( 0 -     56)
   250: =                    ( 0 -     56)
   251: sin                  ( 0 -     56)
   252: (                    ( 0 -     56)
   253: phi                  ( 0 -     56)
   254: )                    ( 0 -     56)
   255: *                    ( 0 -     56)
   256: sinTheta             ( 0 -     56)
   257: ;                    ( 0 -     56)
   258: H                    ( 0 -     57)
   259: .                    ( 0 -     57)
   260: z                    ( 0 -     57)
   261: =                    ( 0 -     57)
   262: cosTheta             ( 0 -     57)
   263: ;                    ( 0 -     57)
   264: float3               ( 0 -     60)
   265: up                   ( 0 -     60)
   266: =                    ( 0 -     60)
   267: abs                  ( 0 -     60)
   268: (                    ( 0 -     60)
   269: N                    ( 0 -     60)
   270: .                    ( 0 -     60)
   271: z                    ( 0 -     60)
   272: )                    ( 0 -     60)
   273: <                    ( 0 -     60)
   274: 0.999000             ( 0 -     60)
   275: ?                    ( 0 -     60)
   276: float3               ( 0 -     60)
   277: (                    ( 0 -     60)
   278: 0.000000             ( 0 -     60)
   279: ,                    ( 0 -     60)
   280: 0.000000             ( 0 -     60)
   281: ,                    ( 0 -     60)
   282: 1.000000             ( 0 -     60)
   283: )                    ( 0 -     60)
   284: :                    ( 0 -     60)
   285: float3               ( 0 -     60)
   286: (                    ( 0 -     60)
   287: 1.000000             ( 0 -     60)
   288: ,                    ( 0 -     60)
   289: 0.000000             ( 0 -     60)
   290: ,                    ( 0 -     60)
   291: 0.000000             ( 0 -     60)
   292: )                    ( 0 -     60)
   293: ;                    ( 0 -     60)
   294: float3               ( 0 -     61)
   295: tangent              ( 0 -     61)
   296: =                    ( 0 -     61)
   297: normalize            ( 0 -     61)
   298: (                    ( 0 -     61)
   299: cross                ( 0 -     61)
   300: (                    ( 0 -     61)
   301: up                   ( 0 -     61)
   302: ,                    ( 0 -     61)
   303: N                    ( 0 -     61)
   304: )                    ( 0 -     61)
   305: )                    ( 0 -     61)
   306: ;                    ( 0 -     61)
   307: float3               ( 0 -     62)
   308: bitangent            ( 0 -     62)
   309: =                    ( 0 -     62)
   310: cross                ( 0 -     62)
   311: (                    ( 0 -     62)
   312: N                    ( 0 -     62)
   313: ,                    ( 0 -     62)
   314: tangent              ( 0 -     62)
   315: )                    ( 0 -     62)
   316: ;                    ( 0 -     62)
   317: float3               ( 0 -     64)
   318: sampleVec            ( 0 -     64)
   319: =                    ( 0 -     64)
   320: tangent              ( 0 -     64)
   321: *                    ( 0 -     64)
   322: H                    ( 0 -     64)
   323: .                    ( 0 -     64)
   324: x                    ( 0 -     64)
   325: +                    ( 0 -     64)
   326: bitangent            ( 0 -     64)
   327: *                    ( 0 -     64)
   328: H                    ( 0 -     64)
   329: .                    ( 0 -     64)
   330: y                    ( 0 -     64)
   331: +                    ( 0 -     64)
   332: N                    ( 0 -     64)
   333: *                    ( 0 -     64)
   334: H                    ( 0 -     64)
   335: .                    ( 0 -     64)
   336: z                    ( 0 -     64)
   337: ;                    ( 0 -     64)
   338: return               ( 0 -     65)
   339: normalize            ( 0 -     65)
   340: (                    ( 0 -     65)
   341: sampleVec            ( 0 -     65)
   342: )                    ( 0 -     65)
   343: ;                    ( 0 -     65)
   344: }                    ( 0 -     66)
   345: float                ( 0 -     68)
   346: GeometrySchlickGGX   ( 0 -     68)
   347: (                    ( 0 -     68)
   348: float                ( 0 -     68)
   349: NdotV                ( 0 -     68)
   350: ,                    ( 0 -     68)
   351: float                ( 0 -     68)
   352: roughness            ( 0 -     68)
   353: )                    ( 0 -     68)
   354: {                    ( 0 -     69)
   355: float                ( 0 -     71)
   356: a                    ( 0 -     71)
   357: =                    ( 0 -     71)
   358: roughness            ( 0 -     71)
   359: ;                    ( 0 -     71)
   360: float                ( 0 -     72)
   361: k                    ( 0 -     72)
   362: =                    ( 0 -     72)
   363: (                    ( 0 -     72)
   364: a                    ( 0 -     72)
   365: *                    ( 0 -     72)
   366: a                    ( 0 -     72)
   367: )                    ( 0 -     72)
   368: /                    ( 0 -     72)
   369: 2.000000             ( 0 -     72)
   370: ;                    ( 0 -     72)
   371: float                ( 0 -     74)
   372: nom                  ( 0 -     74)
   373: =                    ( 0 -     74)
   374: NdotV                ( 0 -     74)
   375: ;                    ( 0 -     74)
   376: float                ( 0 -     75)
   377: denom                ( 0 -     75)
   378: =                    ( 0 -     75)
   379: NdotV                ( 0 -     75)
   380: *                    ( 0 -     75)
   381: (                    ( 0 -     75)
   382: 1.000000             ( 0 -     75)
   383: -                    ( 0 -     75)
   384: k                    ( 0 -     75)
   385: )                    ( 0 -     75)
   386: +                    ( 0 -     75)
   387: k                    ( 0 -     75)
   388: ;                    ( 0 -     75)
   389: return               ( 0 -     77)
   390: nom                  ( 0 -     77)
   391: /                    ( 0 -     77)
   392: denom                ( 0 -     77)
   393: ;                    ( 0 -     77)
   394: }                    ( 0 -     78)
   395: float                ( 0 -     80)
   396: GeometrySmith        ( 0 -     80)
   397: (                    ( 0 -     80)
   398: float3               ( 0 -     80)
   399: N                    ( 0 -     80)
   400: ,                    ( 0 -     80)
   401: float3               ( 0 -     80)
   402: V                    ( 0 -     80)
   403: ,                    ( 0 -     80)
   404: float3               ( 0 -     80)
   405: L                    ( 0 -     80)
   406: ,                    ( 0 -     80)
   407: float                ( 0 -     80)
   408: roughness            ( 0 -     80)
   409: )                    ( 0 -     80)
   410: {                    ( 0 -     81)
   411: float                ( 0 -     82)
   412: NdotV                ( 0 -     82)
   413: =                    ( 0 -     82)
   414: max                  ( 0 -     82)
   415: (                    ( 0 -     82)
   416: dot                  ( 0 -     82)
   417: (                    ( 0 -     82)
   418: N                    ( 0 -     82)
   419: ,                    ( 0 -     82)
   420: V                    ( 0 -     82)
   421: )                    ( 0 -     82)
   422: ,                    ( 0 -     82)
   423: 0.000000             ( 0 -     82)
   424: )                    ( 0 -     82)
   425: ;                    ( 0 -     82)
   426: float                ( 0 -     83)
   427: NdotL                ( 0 -     83)
   428: =                    ( 0 -     83)
   429: max                  ( 0 -     83)
   430: (                    ( 0 -     83)
   431: dot                  ( 0 -     83)
   432: (                    ( 0 -     83)
   433: N                    ( 0 -     83)
   434: ,                    ( 0 -     83)
   435: L                    ( 0 -     83)
   436: )                    ( 0 -     83)
   437: ,                    ( 0 -     83)
   438: 0.000000             ( 0 -     83)
   439: )                    ( 0 -     83)
   440: ;                    ( 0 -     83)
   441: float                ( 0 -     84)
   442: ggx2                 ( 0 -     84)
   443: =                    ( 0 -     84)
   444: GeometrySchlickGGX   ( 0 -     84)
   445: (                    ( 0 -     84)
   446: NdotV                ( 0 -     84)
   447: ,                    ( 0 -     84)
   448: roughness            ( 0 -     84)
   449: )                    ( 0 -     84)
   450: ;                    ( 0 -     84)
   451: float                ( 0 -     85)
   452: ggx1                 ( 0 -     85)
   453: =                    ( 0 -     85)
   454: GeometrySchlickGGX   ( 0 -     85)
   455: (                    ( 0 -     85)
   456: NdotL                ( 0 -     85)
   457: ,                    ( 0 -     85)
   458: roughness            ( 0 -     85)
   459: )                    ( 0 -     85)
   460: ;                    ( 0 -     85)
   461: return               ( 0 -     87)
   462: ggx1                 ( 0 -     87)
   463: *                    ( 0 -     87)
   464: ggx2                 ( 0 -     87)
   465: ;                    ( 0 -     87)
   466: }                    ( 0 -     88)
   467: float2               ( 0 -     90)
   468: IntegrateBRDF        ( 0 -     90)
   469: (                    ( 0 -     90)
   470: float                ( 0 -     90)
   471: NdotV                ( 0 -     90)
   472: ,                    ( 0 -     90)
   473: float                ( 0 -     90)
   474: roughness            ( 0 -     90)
   475: )                    ( 0 -     90)
   476: {                    ( 0 -     91)
   477: float3               ( 0 -     92)
   478: V                    ( 0 -     92)
   479: ;                    ( 0 -     92)
   480: V                    ( 0 -     93)
   481: .                    ( 0 -     93)
   482: x                    ( 0 -     93)
   483: =                    ( 0 -     93)
   484: sqrt                 ( 0 -     93)
   485: (                    ( 0 -     93)
   486: 1.000000             ( 0 -     93)
   487: -                    ( 0 -     93)
   488: NdotV                ( 0 -     93)
   489: *                    ( 0 -     93)
   490: NdotV                ( 0 -     93)
   491: )                    ( 0 -     93)
   492: ;                    ( 0 -     93)
   493: V                    ( 0 -     94)
   494: .                    ( 0 -     94)
   495: y                    ( 0 -     94)
   496: =                    ( 0 -     94)
   497: 0.000000             ( 0 -     94)
   498: ;                    ( 0 -     94)
   499: V                    ( 0 -     95)
   500: .                    ( 0 -     95)
   501: z                    ( 0 -     95)
   502: =                    ( 0 -     95)
   503: NdotV                ( 0 -     95)
   504: ;                    ( 0 -     95)
   505: float                ( 0 -     97)
   506: A                    ( 0 -     97)
   507: =                    ( 0 -     97)
   508: 0.000000             ( 0 -     97)
   509: ;                    ( 0 -     97)
   510: float                ( 0 -     98)
   511: B                    ( 0 -     98)
   512: =                    ( 0 -     98)
   513: 0.000000             ( 0 -     98)
   514: ;                    ( 0 -     98)
   515: float3               ( 0 -    100)
   516: N                    ( 0 -    100)
   517: =                    ( 0 -    100)
   518: float3               ( 0 -    100)
   519: (                    ( 0 -    100)
   520: 0.000000             ( 0 -    100)
   521: ,                    ( 0 -    100)
   522: 0.000000             ( 0 -    100)
   523: ,                    ( 0 -    100)
   524: 1.000000             ( 0 -    100)
   525: )                    ( 0 -    100)
   526: ;                    ( 0 -    100)
   527: for                  ( 0 -    101)
   528: (                    ( 0 -    101)
   529: int                  ( 0 -    101)
   530: i                    ( 0 -    101)
   531: =                    ( 0 -    101)
   532: 0                    ( 0 -    101)
   533: ;                    ( 0 -    101)
   534: i                    ( 0 -    101)
   535: <                    ( 0 -    101)
   536: SampleCount          ( 0 -    101)
   537: ;                    ( 0 -    101)
   538: ++                   ( 0 -    101)
   539: i                    ( 0 -    101)
   540: )                    ( 0 -    101)
   541: {                    ( 0 -    102)
   542: float2               ( 0 -    105)
   543: Xi                   ( 0 -    105)
   544: =                    ( 0 -    105)
   545: Hammersley           ( 0 -    105)
   546: (                    ( 0 -    105)
   547: i                    ( 0 -    105)
   548: ,                    ( 0 -    105)
   549: SampleCount          ( 0 -    105)
   550: )                    ( 0 -    105)
   551: ;                    ( 0 -    105)
   552: float3               ( 0 -    106)
   553: H                    ( 0 -    106)
   554: =                    ( 0 -    106)
   555: ImportanceSampleGGX  ( 0 -    106)
   556: (                    ( 0 -    106)
   557: Xi                   ( 0 -    106)
   558: ,                    ( 0 -    106)
   559: N                    ( 0 -    106)
   560: ,                    ( 0 -    106)
   561: roughness            ( 0 -    106)
   562: )                    ( 0 -    106)
   563: ;                    ( 0 -    106)
   564: float3               ( 0 -    107)
   565: L                    ( 0 -    107)
   566: =                    ( 0 -    107)
   567: normalize            ( 0 -    107)
   568: (                    ( 0 -    107)
   569: 2.000000             ( 0 -    107)
   570: *                    ( 0 -    107)
   571: dot                  ( 0 -    107)
   572: (                    ( 0 -    107)
   573: V                    ( 0 -    107)
   574: ,                    ( 0 -    107)
   575: H                    ( 0 -    107)
   576: )                    ( 0 -    107)
   577: *                    ( 0 -    107)
   578: H                    ( 0 -    107)
   579: -                    ( 0 -    107)
   580: V                    ( 0 -    107)
   581: )                    ( 0 -    107)
   582: ;                    ( 0 -    107)
   583: float                ( 0 -    109)
   584: NdotL                ( 0 -    109)
   585: =                    ( 0 -    109)
   586: max                  ( 0 -    109)
   587: (                    ( 0 -    109)
   588: L                    ( 0 -    109)
   589: .                    ( 0 -    109)
   590: z                    ( 0 -    109)
   591: ,                    ( 0 -    109)
   592: 0.000000             ( 0 -    109)
   593: )                    ( 0 -    109)
   594: ;                    ( 0 -    109)
   595: float                ( 0 -    110)
   596: NdotH                ( 0 -    110)
   597: =                    ( 0 -    110)
   598: max                  ( 0 -    110)
   599: (                    ( 0 -    110)
   600: H                    ( 0 -    110)
   601: .                    ( 0 -    110)
   602: z                    ( 0 -    110)
   603: ,                    ( 0 -    110)
   604: 0.000000             ( 0 -    110)
   605: )                    ( 0 -    110)
   606: ;                    ( 0 -    110)
   607: float                ( 0 -    111)
   608: VdotH                ( 0 -    111)
   609: =                    ( 0 -    111)
   610: max                  ( 0 -    111)
   611: (                    ( 0 -    111)
   612: dot                  ( 0 -    111)
   613: (                    ( 0 -    111)
   614: V                    ( 0 -    111)
   615: ,                    ( 0 -    111)
   616: H                    ( 0 -    111)
   617: )                    ( 0 -    111)
   618: ,                    ( 0 -    111)
   619: 0.000000             ( 0 -    111)
   620: )                    ( 0 -    111)
   621: ;                    ( 0 -    111)
   622: if                   ( 0 -    113)
   623: (                    ( 0 -    113)
   624: NdotL                ( 0 -    113)
   625: >                    ( 0 -    113)
   626: 0.000000             ( 0 -    113)
   627: )                    ( 0 -    113)
   628: {                    ( 0 -    114)
   629: float                ( 0 -    115)
   630: G                    ( 0 -    115)
   631: =                    ( 0 -    115)
   632: GeometrySmith        ( 0 -    115)
   633: (                    ( 0 -    115)
   634: N                    ( 0 -    115)
   635: ,                    ( 0 -    115)
   636: V                    ( 0 -    115)
   637: ,                    ( 0 -    115)
   638: L                    ( 0 -    115)
   639: ,                    ( 0 -    115)
   640: roughness            ( 0 -    115)
   641: )                    ( 0 -    115)
   642: ;                    ( 0 -    115)
   643: float                ( 0 -    116)
   644: G_Vis                ( 0 -    116)
   645: =                    ( 0 -    116)
   646: (                    ( 0 -    116)
   647: G                    ( 0 -    116)
   648: *                    ( 0 -    116)
   649: VdotH                ( 0 -    116)
   650: )                    ( 0 -    116)
   651: /                    ( 0 -    116)
   652: (                    ( 0 -    116)
   653: NdotH                ( 0 -    116)
   654: *                    ( 0 -    116)
   655: NdotV                ( 0 -    116)
   656: )                    ( 0 -    116)
   657: ;                    ( 0 -    116)
   658: float                ( 0 -    117)
   659: Fc                   ( 0 -    117)
   660: =                    ( 0 -    117)
   661: pow                  ( 0 -    117)
   662: (                    ( 0 -    117)
   663: 1.000000             ( 0 -    117)
   664: -                    ( 0 -    117)
   665: VdotH                ( 0 -    117)
   666: ,                    ( 0 -    117)
   667: 5.000000             ( 0 -    117)
   668: )                    ( 0 -    117)
   669: ;                    ( 0 -    117)
   670: A                    ( 0 -    119)
   671: +=                   ( 0 -    119)
   672: (                    ( 0 -    119)
   673: 1.000000             ( 0 -    119)
   674: -                    ( 0 -    119)
   675: Fc                   ( 0 -    119)
   676: )                    ( 0 -    119)
   677: *                    ( 0 -    119)
   678: G_Vis                ( 0 -    119)
   679: ;                    ( 0 -    119)
   680: B                    ( 0 -    120)
   681: +=                   ( 0 -    120)
   682: Fc                   ( 0 -    120)
   683: *                    ( 0 -    120)
   684: G_Vis                ( 0 -    120)
   685: ;                    ( 0 -    120)
   686: }                    ( 0 -    121)
   687: }                    ( 0 -    122)
   688: A                    ( 0 -    124)
   689: /=                   ( 0 -    124)
   690: float                ( 0 -    124)
   691: (                    ( 0 -    124)
   692: SampleCount          ( 0 -    124)
   693: )                    ( 0 -    124)
   694: ;                    ( 0 -    124)
   695: B                    ( 0 -    125)
   696: /=                   ( 0 -    125)
   697: float                ( 0 -    125)
   698: (                    ( 0 -    125)
   699: SampleCount          ( 0 -    125)
   700: )                    ( 0 -    125)
   701: ;                    ( 0 -    125)
   702: return               ( 0 -    127)
   703: float2               ( 0 -    127)
   704: (                    ( 0 -    127)
   705: A                    ( 0 -    127)
   706: ,                    ( 0 -    127)
   707: B                    ( 0 -    127)
   708: )                    ( 0 -    127)
   709: ;                    ( 0 -    127)
   710: }                    ( 0 -    128)
   711: static               ( 0 -    130)
   712: const                ( 0 -    130)
   713: float                ( 0 -    130)
   714: PI                   ( 0 -    130)
   715: =                    ( 0 -    130)
   716: 3.141593             ( 0 -    130)
   717: ;                    ( 0 -    130)
   718: RWTexture2D          ( 0 -    132)
   719: <                    ( 0 -    132)
   720: float2               ( 0 -    132)
   721: >                    ( 0 -    132)
   722: dstTexture           ( 0 -    132)
   723: :                    ( 0 -    132)
   724: register             ( 0 -    132)
   725: (                    ( 0 -    132)
   726: u0                   ( 0 -    132)
   727: )                    ( 0 -    132)
   728: ;                    ( 0 -    132)
   729: [                    ( 0 -    134)
   730: numthreads           ( 0 -    134)
   731: (                    ( 0 -    134)
   732: 16                   ( 0 -    134)
   733: ,                    ( 0 -    134)
   734: 16                   ( 0 -    134)
   735: ,                    ( 0 -    134)
   736: 1                    ( 0 -    134)
   737: )                    ( 0 -    134)
   738: ]                    ( 0 -    134)
   739: void                 ( 0 -    135)
   740: main                 ( 0 -    135)
   741: (                    ( 0 -    135)
   742: uint3                ( 0 -    135)
   743: DTid                 ( 0 -    135)
   744: :                    ( 0 -    135)
   745: SV_DispatchThreadID  ( 0 -    135)
   746: )                    ( 0 -    135)
   747: {                    ( 0 -    136)
   748: float2               ( 0 -    137)
   749: texcoords            ( 0 -    137)
   750: =                    ( 0 -    137)
   751: float2               ( 0 -    137)
   752: (                    ( 0 -    137)
   753: float                ( 0 -    137)
   754: (                    ( 0 -    137)
   755: DTid                 ( 0 -    137)
   756: .                    ( 0 -    137)
   757: x                    ( 0 -    137)
   758: +                    ( 0 -    137)
   759: 0.500000             ( 0 -    137)
   760: )                    ( 0 -    137)
   761: /                    ( 0 -    137)
   762: 512.000000           ( 0 -    137)
   763: ,                    ( 0 -    137)
   764: 1.000000             ( 0 -    137)
   765: -                    ( 0 -    137)
   766: float                ( 0 -    137)
   767: (                    ( 0 -    137)
   768: DTid                 ( 0 -    137)
   769: .                    ( 0 -    137)
   770: y                    ( 0 -    137)
   771: +                    ( 0 -    137)
   772: 0.500000             ( 0 -    137)
   773: )                    ( 0 -    137)
   774: /                    ( 0 -    137)
   775: 512.000000           ( 0 -    137)
   776: )                    ( 0 -    137)
   777: ;                    ( 0 -    137)
   778: float4               ( 0 -    138)
   779: output               ( 0 -    138)
   780: =                    ( 0 -    138)
   781: float4               ( 0 -    138)
   782: (                    ( 0 -    138)
   783: IntegrateBRDF        ( 0 -    138)
   784: (                    ( 0 -    138)
   785: texcoords            ( 0 -    138)
   786: .                    ( 0 -    138)
   787: x                    ( 0 -    138)
   788: ,                    ( 0 -    138)
   789: texcoords            ( 0 -    138)
   790: .                    ( 0 -    138)
   791: y                    ( 0 -    138)
   792: )                    ( 0 -    138)
   793: ,                    ( 0 -    138)
   794: 0.000000             ( 0 -    138)
   795: ,                    ( 0 -    138)
   796: 0.000000             ( 0 -    138)
   797: )                    ( 0 -    138)
   798: ;                    ( 0 -    138)
   799: dstTexture           ( 0 -    139)
   800: [                    ( 0 -    139)
   801: DTid                 ( 0 -    139)
   802: .                    ( 0 -    139)
   803: xy                   ( 0 -    139)
   804: ]                    ( 0 -    139)
   805: =                    ( 0 -    139)
   806: output               ( 0 -    139)
   807: ;                    ( 0 -    139)
   808: }                    ( 0 -    140)
   809: <eof>                ( 0 -    141)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/10_PixelProjectedReflections/Shaders/D3D12/BRDFIntegration.comp

