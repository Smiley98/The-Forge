     0: struct               ( 0 -     26)
     1: Light                ( 0 -     26)
     2: {                    ( 0 -     27)
     3: float4               ( 0 -     28)
     4: pos                  ( 0 -     28)
     5: ;                    ( 0 -     28)
     6: float4               ( 0 -     29)
     7: col                  ( 0 -     29)
     8: ;                    ( 0 -     29)
     9: float                ( 0 -     30)
    10: radius               ( 0 -     30)
    11: ;                    ( 0 -     30)
    12: float                ( 0 -     31)
    13: intensity            ( 0 -     31)
    14: ;                    ( 0 -     31)
    15: float                ( 0 -     32)
    16: _pad0                ( 0 -     32)
    17: ;                    ( 0 -     32)
    18: float                ( 0 -     33)
    19: _pad1                ( 0 -     33)
    20: ;                    ( 0 -     33)
    21: }                    ( 0 -     34)
    22: ;                    ( 0 -     34)
    23: static               ( 0 -     36)
    24: const                ( 0 -     36)
    25: float                ( 0 -     36)
    26: PI                   ( 0 -     36)
    27: =                    ( 0 -     36)
    28: 3.141593             ( 0 -     36)
    29: ;                    ( 0 -     36)
    30: cbuffer              ( 0 -     39)
    31: cbExtendCamera       ( 0 -     39)
    32: :                    ( 0 -     39)
    33: register             ( 0 -     39)
    34: (                    ( 0 -     39)
    35: b0                   ( 0 -     39)
    36: ,                    ( 0 -     39)
    37: space1               ( 0 -     39)
    38: )                    ( 0 -     39)
    39: {                    ( 0 -     40)
    40: float4x4             ( 0 -     41)
    41: viewMat              ( 0 -     41)
    42: ;                    ( 0 -     41)
    43: float4x4             ( 0 -     42)
    44: projMat              ( 0 -     42)
    45: ;                    ( 0 -     42)
    46: float4x4             ( 0 -     43)
    47: viewProjMat          ( 0 -     43)
    48: ;                    ( 0 -     43)
    49: float4x4             ( 0 -     44)
    50: InvViewProjMat       ( 0 -     44)
    51: ;                    ( 0 -     44)
    52: float4               ( 0 -     46)
    53: cameraWorldPos       ( 0 -     46)
    54: ;                    ( 0 -     46)
    55: float4               ( 0 -     47)
    56: viewPortSize         ( 0 -     47)
    57: ;                    ( 0 -     47)
    58: }                    ( 0 -     48)
    59: cbuffer              ( 0 -     51)
    60: cbLights             ( 0 -     51)
    61: :                    ( 0 -     51)
    62: register             ( 0 -     51)
    63: (                    ( 0 -     51)
    64: b1                   ( 0 -     51)
    65: )                    ( 0 -     51)
    66: {                    ( 0 -     52)
    67: Light                ( 0 -     53)
    68: lights               ( 0 -     53)
    69: [                    ( 0 -     53)
    70: 16                   ( 0 -     53)
    71: ]                    ( 0 -     53)
    72: ;                    ( 0 -     53)
    73: int                  ( 0 -     54)
    74: currAmountOflights   ( 0 -     54)
    75: ;                    ( 0 -     54)
    76: }                    ( 0 -     55)
    77: struct               ( 0 -     57)
    78: DirectionalLight     ( 0 -     57)
    79: {                    ( 0 -     58)
    80: float4               ( 0 -     59)
    81: mPos                 ( 0 -     59)
    82: ;                    ( 0 -     59)
    83: float4               ( 0 -     60)
    84: mCol                 ( 0 -     60)
    85: ;                    ( 0 -     60)
    86: float4               ( 0 -     61)
    87: mDir                 ( 0 -     61)
    88: ;                    ( 0 -     61)
    89: }                    ( 0 -     62)
    90: ;                    ( 0 -     62)
    91: cbuffer              ( 0 -     64)
    92: cbDLights            ( 0 -     64)
    93: :                    ( 0 -     64)
    94: register             ( 0 -     64)
    95: (                    ( 0 -     64)
    96: b2                   ( 0 -     64)
    97: )                    ( 0 -     64)
    98: {                    ( 0 -     65)
    99: DirectionalLight     ( 0 -     66)
   100: dlights              ( 0 -     66)
   101: [                    ( 0 -     66)
   102: 16                   ( 0 -     66)
   103: ]                    ( 0 -     66)
   104: ;                    ( 0 -     66)
   105: int                  ( 0 -     67)
   106: currAmountOfDLights  ( 0 -     67)
   107: ;                    ( 0 -     67)
   108: }                    ( 0 -     68)
   109: ;                    ( 0 -     68)
   110: Texture2D            ( 0 -     71)
   111: <                    ( 0 -     71)
   112: float2               ( 0 -     71)
   113: >                    ( 0 -     71)
   114: brdfIntegrationMap   ( 0 -     71)
   115: :                    ( 0 -     71)
   116: register             ( 0 -     71)
   117: (                    ( 0 -     71)
   118: t3                   ( 0 -     71)
   119: )                    ( 0 -     71)
   120: ;                    ( 0 -     71)
   121: TextureCube          ( 0 -     72)
   122: <                    ( 0 -     72)
   123: float4               ( 0 -     72)
   124: >                    ( 0 -     72)
   125: irradianceMap        ( 0 -     72)
   126: :                    ( 0 -     72)
   127: register             ( 0 -     72)
   128: (                    ( 0 -     72)
   129: t4                   ( 0 -     72)
   130: )                    ( 0 -     72)
   131: ;                    ( 0 -     72)
   132: TextureCube          ( 0 -     73)
   133: <                    ( 0 -     73)
   134: float4               ( 0 -     73)
   135: >                    ( 0 -     73)
   136: specularMap          ( 0 -     73)
   137: :                    ( 0 -     73)
   138: register             ( 0 -     73)
   139: (                    ( 0 -     73)
   140: t5                   ( 0 -     73)
   141: )                    ( 0 -     73)
   142: ;                    ( 0 -     73)
   143: Texture2D            ( 0 -     75)
   144: AlbedoTexture        ( 0 -     75)
   145: :                    ( 0 -     75)
   146: register             ( 0 -     75)
   147: (                    ( 0 -     75)
   148: t6                   ( 0 -     75)
   149: )                    ( 0 -     75)
   150: ;                    ( 0 -     75)
   151: Texture2D            ( 0 -     76)
   152: NormalTexture        ( 0 -     76)
   153: :                    ( 0 -     76)
   154: register             ( 0 -     76)
   155: (                    ( 0 -     76)
   156: t7                   ( 0 -     76)
   157: )                    ( 0 -     76)
   158: ;                    ( 0 -     76)
   159: Texture2D            ( 0 -     77)
   160: RoughnessTexture     ( 0 -     77)
   161: :                    ( 0 -     77)
   162: register             ( 0 -     77)
   163: (                    ( 0 -     77)
   164: t8                   ( 0 -     77)
   165: )                    ( 0 -     77)
   166: ;                    ( 0 -     77)
   167: Texture2D            ( 0 -     78)
   168: DepthTexture         ( 0 -     78)
   169: :                    ( 0 -     78)
   170: register             ( 0 -     78)
   171: (                    ( 0 -     78)
   172: t9                   ( 0 -     78)
   173: )                    ( 0 -     78)
   174: ;                    ( 0 -     78)
   175: SamplerState         ( 0 -     80)
   176: envSampler           ( 0 -     80)
   177: :                    ( 0 -     80)
   178: register             ( 0 -     80)
   179: (                    ( 0 -     80)
   180: s10                  ( 0 -     80)
   181: )                    ( 0 -     80)
   182: ;                    ( 0 -     80)
   183: SamplerState         ( 0 -     81)
   184: defaultSampler       ( 0 -     81)
   185: :                    ( 0 -     81)
   186: register             ( 0 -     81)
   187: (                    ( 0 -     81)
   188: s11                  ( 0 -     81)
   189: )                    ( 0 -     81)
   190: ;                    ( 0 -     81)
   191: float3               ( 0 -     84)
   192: FresnelSchlickRoughness ( 0 -     84)
   193: (                    ( 0 -     84)
   194: float                ( 0 -     84)
   195: cosTheta             ( 0 -     84)
   196: ,                    ( 0 -     84)
   197: float3               ( 0 -     84)
   198: F0                   ( 0 -     84)
   199: ,                    ( 0 -     84)
   200: float                ( 0 -     84)
   201: roughness            ( 0 -     84)
   202: )                    ( 0 -     84)
   203: {                    ( 0 -     85)
   204: float3               ( 0 -     87)
   205: ret                  ( 0 -     87)
   206: =                    ( 0 -     87)
   207: float3               ( 0 -     87)
   208: (                    ( 0 -     87)
   209: 0.000000             ( 0 -     87)
   210: ,                    ( 0 -     87)
   211: 0.000000             ( 0 -     87)
   212: ,                    ( 0 -     87)
   213: 0.000000             ( 0 -     87)
   214: )                    ( 0 -     87)
   215: ;                    ( 0 -     87)
   216: float                ( 0 -     88)
   217: powTheta             ( 0 -     88)
   218: =                    ( 0 -     88)
   219: pow                  ( 0 -     88)
   220: (                    ( 0 -     88)
   221: 1.000000             ( 0 -     88)
   222: -                    ( 0 -     88)
   223: cosTheta             ( 0 -     88)
   224: ,                    ( 0 -     88)
   225: 5.000000             ( 0 -     88)
   226: )                    ( 0 -     88)
   227: ;                    ( 0 -     88)
   228: float                ( 0 -     89)
   229: invRough             ( 0 -     89)
   230: =                    ( 0 -     89)
   231: float                ( 0 -     89)
   232: (                    ( 0 -     89)
   233: 1.000000             ( 0 -     89)
   234: -                    ( 0 -     89)
   235: roughness            ( 0 -     89)
   236: )                    ( 0 -     89)
   237: ;                    ( 0 -     89)
   238: ret                  ( 0 -     91)
   239: .                    ( 0 -     91)
   240: x                    ( 0 -     91)
   241: =                    ( 0 -     91)
   242: F0                   ( 0 -     91)
   243: .                    ( 0 -     91)
   244: x                    ( 0 -     91)
   245: +                    ( 0 -     91)
   246: (                    ( 0 -     91)
   247: max                  ( 0 -     91)
   248: (                    ( 0 -     91)
   249: invRough             ( 0 -     91)
   250: ,                    ( 0 -     91)
   251: F0                   ( 0 -     91)
   252: .                    ( 0 -     91)
   253: x                    ( 0 -     91)
   254: )                    ( 0 -     91)
   255: -                    ( 0 -     91)
   256: F0                   ( 0 -     91)
   257: .                    ( 0 -     91)
   258: x                    ( 0 -     91)
   259: )                    ( 0 -     91)
   260: *                    ( 0 -     91)
   261: powTheta             ( 0 -     91)
   262: ;                    ( 0 -     91)
   263: ret                  ( 0 -     92)
   264: .                    ( 0 -     92)
   265: y                    ( 0 -     92)
   266: =                    ( 0 -     92)
   267: F0                   ( 0 -     92)
   268: .                    ( 0 -     92)
   269: y                    ( 0 -     92)
   270: +                    ( 0 -     92)
   271: (                    ( 0 -     92)
   272: max                  ( 0 -     92)
   273: (                    ( 0 -     92)
   274: invRough             ( 0 -     92)
   275: ,                    ( 0 -     92)
   276: F0                   ( 0 -     92)
   277: .                    ( 0 -     92)
   278: y                    ( 0 -     92)
   279: )                    ( 0 -     92)
   280: -                    ( 0 -     92)
   281: F0                   ( 0 -     92)
   282: .                    ( 0 -     92)
   283: y                    ( 0 -     92)
   284: )                    ( 0 -     92)
   285: *                    ( 0 -     92)
   286: powTheta             ( 0 -     92)
   287: ;                    ( 0 -     92)
   288: ret                  ( 0 -     93)
   289: .                    ( 0 -     93)
   290: z                    ( 0 -     93)
   291: =                    ( 0 -     93)
   292: F0                   ( 0 -     93)
   293: .                    ( 0 -     93)
   294: z                    ( 0 -     93)
   295: +                    ( 0 -     93)
   296: (                    ( 0 -     93)
   297: max                  ( 0 -     93)
   298: (                    ( 0 -     93)
   299: invRough             ( 0 -     93)
   300: ,                    ( 0 -     93)
   301: F0                   ( 0 -     93)
   302: .                    ( 0 -     93)
   303: z                    ( 0 -     93)
   304: )                    ( 0 -     93)
   305: -                    ( 0 -     93)
   306: F0                   ( 0 -     93)
   307: .                    ( 0 -     93)
   308: z                    ( 0 -     93)
   309: )                    ( 0 -     93)
   310: *                    ( 0 -     93)
   311: powTheta             ( 0 -     93)
   312: ;                    ( 0 -     93)
   313: return               ( 0 -     95)
   314: ret                  ( 0 -     95)
   315: ;                    ( 0 -     95)
   316: }                    ( 0 -     96)
   317: float3               ( 0 -     98)
   318: fresnelSchlick       ( 0 -     98)
   319: (                    ( 0 -     98)
   320: float                ( 0 -     98)
   321: cosTheta             ( 0 -     98)
   322: ,                    ( 0 -     98)
   323: float3               ( 0 -     98)
   324: F0                   ( 0 -     98)
   325: )                    ( 0 -     98)
   326: {                    ( 0 -     99)
   327: return               ( 0 -    100)
   328: F0                   ( 0 -    100)
   329: +                    ( 0 -    100)
   330: (                    ( 0 -    100)
   331: 1.000000             ( 0 -    100)
   332: -                    ( 0 -    100)
   333: F0                   ( 0 -    100)
   334: )                    ( 0 -    100)
   335: *                    ( 0 -    100)
   336: pow                  ( 0 -    100)
   337: (                    ( 0 -    100)
   338: 1.000000             ( 0 -    100)
   339: -                    ( 0 -    100)
   340: cosTheta             ( 0 -    100)
   341: ,                    ( 0 -    100)
   342: 5.000000             ( 0 -    100)
   343: )                    ( 0 -    100)
   344: ;                    ( 0 -    100)
   345: }                    ( 0 -    101)
   346: float                ( 0 -    103)
   347: distributionGGX      ( 0 -    103)
   348: (                    ( 0 -    103)
   349: float3               ( 0 -    103)
   350: N                    ( 0 -    103)
   351: ,                    ( 0 -    103)
   352: float3               ( 0 -    103)
   353: H                    ( 0 -    103)
   354: ,                    ( 0 -    103)
   355: float                ( 0 -    103)
   356: roughness            ( 0 -    103)
   357: )                    ( 0 -    103)
   358: {                    ( 0 -    104)
   359: float                ( 0 -    105)
   360: a                    ( 0 -    105)
   361: =                    ( 0 -    105)
   362: roughness            ( 0 -    105)
   363: *                    ( 0 -    105)
   364: roughness            ( 0 -    105)
   365: ;                    ( 0 -    105)
   366: float                ( 0 -    106)
   367: a2                   ( 0 -    106)
   368: =                    ( 0 -    106)
   369: a                    ( 0 -    106)
   370: *                    ( 0 -    106)
   371: a                    ( 0 -    106)
   372: ;                    ( 0 -    106)
   373: float                ( 0 -    107)
   374: NdotH                ( 0 -    107)
   375: =                    ( 0 -    107)
   376: max                  ( 0 -    107)
   377: (                    ( 0 -    107)
   378: dot                  ( 0 -    107)
   379: (                    ( 0 -    107)
   380: N                    ( 0 -    107)
   381: ,                    ( 0 -    107)
   382: H                    ( 0 -    107)
   383: )                    ( 0 -    107)
   384: ,                    ( 0 -    107)
   385: 0.000000             ( 0 -    107)
   386: )                    ( 0 -    107)
   387: ;                    ( 0 -    107)
   388: float                ( 0 -    108)
   389: NdotH2               ( 0 -    108)
   390: =                    ( 0 -    108)
   391: NdotH                ( 0 -    108)
   392: *                    ( 0 -    108)
   393: NdotH                ( 0 -    108)
   394: ;                    ( 0 -    108)
   395: float                ( 0 -    109)
   396: nom                  ( 0 -    109)
   397: =                    ( 0 -    109)
   398: a2                   ( 0 -    109)
   399: ;                    ( 0 -    109)
   400: float                ( 0 -    110)
   401: denom                ( 0 -    110)
   402: =                    ( 0 -    110)
   403: (                    ( 0 -    110)
   404: NdotH2               ( 0 -    110)
   405: *                    ( 0 -    110)
   406: (                    ( 0 -    110)
   407: a2                   ( 0 -    110)
   408: -                    ( 0 -    110)
   409: 1.000000             ( 0 -    110)
   410: )                    ( 0 -    110)
   411: +                    ( 0 -    110)
   412: 1.000000             ( 0 -    110)
   413: )                    ( 0 -    110)
   414: ;                    ( 0 -    110)
   415: denom                ( 0 -    111)
   416: =                    ( 0 -    111)
   417: PI                   ( 0 -    111)
   418: *                    ( 0 -    111)
   419: denom                ( 0 -    111)
   420: *                    ( 0 -    111)
   421: denom                ( 0 -    111)
   422: ;                    ( 0 -    111)
   423: return               ( 0 -    113)
   424: nom                  ( 0 -    113)
   425: /                    ( 0 -    113)
   426: denom                ( 0 -    113)
   427: ;                    ( 0 -    113)
   428: }                    ( 0 -    114)
   429: float                ( 0 -    116)
   430: GeometrySchlickGGX   ( 0 -    116)
   431: (                    ( 0 -    116)
   432: float                ( 0 -    116)
   433: NdotV                ( 0 -    116)
   434: ,                    ( 0 -    116)
   435: float                ( 0 -    116)
   436: roughness            ( 0 -    116)
   437: )                    ( 0 -    116)
   438: {                    ( 0 -    117)
   439: float                ( 0 -    118)
   440: r                    ( 0 -    118)
   441: =                    ( 0 -    118)
   442: (                    ( 0 -    118)
   443: roughness            ( 0 -    118)
   444: +                    ( 0 -    118)
   445: 1.000000             ( 0 -    118)
   446: )                    ( 0 -    118)
   447: ;                    ( 0 -    118)
   448: float                ( 0 -    119)
   449: k                    ( 0 -    119)
   450: =                    ( 0 -    119)
   451: (                    ( 0 -    119)
   452: r                    ( 0 -    119)
   453: *                    ( 0 -    119)
   454: r                    ( 0 -    119)
   455: )                    ( 0 -    119)
   456: /                    ( 0 -    119)
   457: 8.000000             ( 0 -    119)
   458: ;                    ( 0 -    119)
   459: float                ( 0 -    121)
   460: nom                  ( 0 -    121)
   461: =                    ( 0 -    121)
   462: NdotV                ( 0 -    121)
   463: ;                    ( 0 -    121)
   464: float                ( 0 -    122)
   465: denom                ( 0 -    122)
   466: =                    ( 0 -    122)
   467: NdotV                ( 0 -    122)
   468: *                    ( 0 -    122)
   469: (                    ( 0 -    122)
   470: 1.000000             ( 0 -    122)
   471: -                    ( 0 -    122)
   472: k                    ( 0 -    122)
   473: )                    ( 0 -    122)
   474: +                    ( 0 -    122)
   475: k                    ( 0 -    122)
   476: ;                    ( 0 -    122)
   477: return               ( 0 -    124)
   478: nom                  ( 0 -    124)
   479: /                    ( 0 -    124)
   480: denom                ( 0 -    124)
   481: ;                    ( 0 -    124)
   482: }                    ( 0 -    125)
   483: float                ( 0 -    127)
   484: GeometrySmith        ( 0 -    127)
   485: (                    ( 0 -    127)
   486: float3               ( 0 -    127)
   487: N                    ( 0 -    127)
   488: ,                    ( 0 -    127)
   489: float3               ( 0 -    127)
   490: V                    ( 0 -    127)
   491: ,                    ( 0 -    127)
   492: float3               ( 0 -    127)
   493: L                    ( 0 -    127)
   494: ,                    ( 0 -    127)
   495: float                ( 0 -    127)
   496: roughness            ( 0 -    127)
   497: )                    ( 0 -    127)
   498: {                    ( 0 -    128)
   499: float                ( 0 -    129)
   500: NdotV                ( 0 -    129)
   501: =                    ( 0 -    129)
   502: max                  ( 0 -    129)
   503: (                    ( 0 -    129)
   504: dot                  ( 0 -    129)
   505: (                    ( 0 -    129)
   506: N                    ( 0 -    129)
   507: ,                    ( 0 -    129)
   508: V                    ( 0 -    129)
   509: )                    ( 0 -    129)
   510: ,                    ( 0 -    129)
   511: 0.000000             ( 0 -    129)
   512: )                    ( 0 -    129)
   513: ;                    ( 0 -    129)
   514: float                ( 0 -    130)
   515: NdotL                ( 0 -    130)
   516: =                    ( 0 -    130)
   517: max                  ( 0 -    130)
   518: (                    ( 0 -    130)
   519: dot                  ( 0 -    130)
   520: (                    ( 0 -    130)
   521: N                    ( 0 -    130)
   522: ,                    ( 0 -    130)
   523: L                    ( 0 -    130)
   524: )                    ( 0 -    130)
   525: ,                    ( 0 -    130)
   526: 0.000000             ( 0 -    130)
   527: )                    ( 0 -    130)
   528: ;                    ( 0 -    130)
   529: float                ( 0 -    131)
   530: ggx2                 ( 0 -    131)
   531: =                    ( 0 -    131)
   532: GeometrySchlickGGX   ( 0 -    131)
   533: (                    ( 0 -    131)
   534: NdotV                ( 0 -    131)
   535: ,                    ( 0 -    131)
   536: roughness            ( 0 -    131)
   537: )                    ( 0 -    131)
   538: ;                    ( 0 -    131)
   539: float                ( 0 -    132)
   540: ggx1                 ( 0 -    132)
   541: =                    ( 0 -    132)
   542: GeometrySchlickGGX   ( 0 -    132)
   543: (                    ( 0 -    132)
   544: NdotL                ( 0 -    132)
   545: ,                    ( 0 -    132)
   546: roughness            ( 0 -    132)
   547: )                    ( 0 -    132)
   548: ;                    ( 0 -    132)
   549: return               ( 0 -    134)
   550: ggx1                 ( 0 -    134)
   551: *                    ( 0 -    134)
   552: ggx2                 ( 0 -    134)
   553: ;                    ( 0 -    134)
   554: }                    ( 0 -    135)
   555: float3               ( 0 -    137)
   556: getWorldPositionFromDepth ( 0 -    137)
   557: (                    ( 0 -    137)
   558: float2               ( 0 -    137)
   559: ndc                  ( 0 -    137)
   560: ,                    ( 0 -    137)
   561: float                ( 0 -    137)
   562: sceneDepth           ( 0 -    137)
   563: )                    ( 0 -    137)
   564: {                    ( 0 -    138)
   565: float4               ( 0 -    139)
   566: worldPos             ( 0 -    139)
   567: =                    ( 0 -    139)
   568: mul                  ( 0 -    139)
   569: (                    ( 0 -    139)
   570: InvViewProjMat       ( 0 -    139)
   571: ,                    ( 0 -    139)
   572: float4               ( 0 -    139)
   573: (                    ( 0 -    139)
   574: ndc                  ( 0 -    139)
   575: ,                    ( 0 -    139)
   576: sceneDepth           ( 0 -    139)
   577: ,                    ( 0 -    139)
   578: 1.000000             ( 0 -    139)
   579: )                    ( 0 -    139)
   580: )                    ( 0 -    139)
   581: ;                    ( 0 -    139)
   582: worldPos             ( 0 -    140)
   583: /=                   ( 0 -    140)
   584: worldPos             ( 0 -    140)
   585: .                    ( 0 -    140)
   586: w                    ( 0 -    140)
   587: ;                    ( 0 -    140)
   588: return               ( 0 -    142)
   589: float3               ( 0 -    142)
   590: (                    ( 0 -    142)
   591: worldPos             ( 0 -    142)
   592: .                    ( 0 -    142)
   593: xyz                  ( 0 -    142)
   594: )                    ( 0 -    142)
   595: ;                    ( 0 -    142)
   596: }                    ( 0 -    143)
   597: struct               ( 0 -    146)
   598: VSOutput             ( 0 -    146)
   599: {                    ( 0 -    146)
   600: float4               ( 0 -    147)
   601: Position             ( 0 -    147)
   602: :                    ( 0 -    147)
   603: SV_POSITION          ( 0 -    147)
   604: ;                    ( 0 -    147)
   605: float2               ( 0 -    148)
   606: uv                   ( 0 -    148)
   607: :                    ( 0 -    148)
   608: TEXCOORD0            ( 0 -    148)
   609: ;                    ( 0 -    148)
   610: }                    ( 0 -    149)
   611: ;                    ( 0 -    149)
   612: float4               ( 0 -    151)
   613: main                 ( 0 -    151)
   614: (                    ( 0 -    151)
   615: VSOutput             ( 0 -    151)
   616: input                ( 0 -    151)
   617: )                    ( 0 -    151)
   618: :                    ( 0 -    151)
   619: SV_TARGET            ( 0 -    151)
   620: {                    ( 0 -    152)
   621: float3               ( 0 -    155)
   622: albedo               ( 0 -    155)
   623: =                    ( 0 -    155)
   624: AlbedoTexture        ( 0 -    155)
   625: .                    ( 0 -    155)
   626: Sample               ( 0 -    155)
   627: (                    ( 0 -    155)
   628: defaultSampler       ( 0 -    155)
   629: ,                    ( 0 -    155)
   630: input                ( 0 -    155)
   631: .                    ( 0 -    155)
   632: uv                   ( 0 -    155)
   633: )                    ( 0 -    155)
   634: .                    ( 0 -    155)
   635: rgb                  ( 0 -    155)
   636: ;                    ( 0 -    155)
   637: float4               ( 0 -    157)
   638: normalColor          ( 0 -    157)
   639: =                    ( 0 -    157)
   640: NormalTexture        ( 0 -    157)
   641: .                    ( 0 -    157)
   642: Sample               ( 0 -    157)
   643: (                    ( 0 -    157)
   644: defaultSampler       ( 0 -    157)
   645: ,                    ( 0 -    157)
   646: input                ( 0 -    157)
   647: .                    ( 0 -    157)
   648: uv                   ( 0 -    157)
   649: )                    ( 0 -    157)
   650: ;                    ( 0 -    157)
   651: float4               ( 0 -    158)
   652: roughnessColor       ( 0 -    158)
   653: =                    ( 0 -    158)
   654: RoughnessTexture     ( 0 -    158)
   655: .                    ( 0 -    158)
   656: Sample               ( 0 -    158)
   657: (                    ( 0 -    158)
   658: defaultSampler       ( 0 -    158)
   659: ,                    ( 0 -    158)
   660: input                ( 0 -    158)
   661: .                    ( 0 -    158)
   662: uv                   ( 0 -    158)
   663: )                    ( 0 -    158)
   664: ;                    ( 0 -    158)
   665: float                ( 0 -    160)
   666: _roughness           ( 0 -    160)
   667: =                    ( 0 -    160)
   668: roughnessColor       ( 0 -    160)
   669: .                    ( 0 -    160)
   670: r                    ( 0 -    160)
   671: ;                    ( 0 -    160)
   672: float                ( 0 -    161)
   673: _metalness           ( 0 -    161)
   674: =                    ( 0 -    161)
   675: normalColor          ( 0 -    161)
   676: .                    ( 0 -    161)
   677: a                    ( 0 -    161)
   678: ;                    ( 0 -    161)
   679: float                ( 0 -    162)
   680: ao                   ( 0 -    162)
   681: =                    ( 0 -    162)
   682: 1.000000             ( 0 -    162)
   683: ;                    ( 0 -    162)
   684: float                ( 0 -    164)
   685: depth                ( 0 -    164)
   686: =                    ( 0 -    164)
   687: DepthTexture         ( 0 -    164)
   688: .                    ( 0 -    164)
   689: Sample               ( 0 -    164)
   690: (                    ( 0 -    164)
   691: defaultSampler       ( 0 -    164)
   692: ,                    ( 0 -    164)
   693: input                ( 0 -    164)
   694: .                    ( 0 -    164)
   695: uv                   ( 0 -    164)
   696: )                    ( 0 -    164)
   697: .                    ( 0 -    164)
   698: r                    ( 0 -    164)
   699: ;                    ( 0 -    164)
   700: if                   ( 0 -    166)
   701: (                    ( 0 -    166)
   702: depth                ( 0 -    166)
   703: unknown              ( 0 -    166)
   704: 1.000000             ( 0 -    166)
   705: )                    ( 0 -    166)
   706: {                    ( 0 -    167)
   707: return               ( 0 -    169)
   708: float4               ( 0 -    169)
   709: (                    ( 0 -    169)
   710: albedo               ( 0 -    169)
   711: ,                    ( 0 -    169)
   712: 1.000000             ( 0 -    169)
   713: )                    ( 0 -    169)
   714: ;                    ( 0 -    169)
   715: }                    ( 0 -    170)
   716: float3               ( 0 -    172)
   717: N                    ( 0 -    172)
   718: =                    ( 0 -    172)
   719: normalize            ( 0 -    172)
   720: (                    ( 0 -    172)
   721: normalColor          ( 0 -    172)
   722: .                    ( 0 -    172)
   723: rgb                  ( 0 -    172)
   724: )                    ( 0 -    172)
   725: ;                    ( 0 -    172)
   726: float2               ( 0 -    174)
   727: ndc                  ( 0 -    174)
   728: =                    ( 0 -    174)
   729: float2               ( 0 -    174)
   730: (                    ( 0 -    174)
   731: input                ( 0 -    174)
   732: .                    ( 0 -    174)
   733: uv                   ( 0 -    174)
   734: .                    ( 0 -    174)
   735: x                    ( 0 -    174)
   736: *                    ( 0 -    174)
   737: 2.000000             ( 0 -    174)
   738: -                    ( 0 -    174)
   739: 1.000000             ( 0 -    174)
   740: ,                    ( 0 -    174)
   741: (                    ( 0 -    174)
   742: 1.000000             ( 0 -    174)
   743: -                    ( 0 -    174)
   744: input                ( 0 -    174)
   745: .                    ( 0 -    174)
   746: uv                   ( 0 -    174)
   747: .                    ( 0 -    174)
   748: y                    ( 0 -    174)
   749: )                    ( 0 -    174)
   750: *                    ( 0 -    174)
   751: 2.000000             ( 0 -    174)
   752: -                    ( 0 -    174)
   753: 1.000000             ( 0 -    174)
   754: )                    ( 0 -    174)
   755: ;                    ( 0 -    174)
   756: float3               ( 0 -    176)
   757: worldPos             ( 0 -    176)
   758: =                    ( 0 -    176)
   759: getWorldPositionFromDepth ( 0 -    176)
   760: (                    ( 0 -    176)
   761: ndc                  ( 0 -    176)
   762: ,                    ( 0 -    176)
   763: depth                ( 0 -    176)
   764: )                    ( 0 -    176)
   765: ;                    ( 0 -    176)
   766: float3               ( 0 -    178)
   767: V                    ( 0 -    178)
   768: =                    ( 0 -    178)
   769: normalize            ( 0 -    178)
   770: (                    ( 0 -    178)
   771: cameraWorldPos       ( 0 -    178)
   772: .                    ( 0 -    178)
   773: xyz                  ( 0 -    178)
   774: -                    ( 0 -    178)
   775: worldPos             ( 0 -    178)
   776: )                    ( 0 -    178)
   777: ;                    ( 0 -    178)
   778: float3               ( 0 -    179)
   779: R                    ( 0 -    179)
   780: =                    ( 0 -    179)
   781: reflect              ( 0 -    179)
   782: (                    ( 0 -    179)
   783: -                    ( 0 -    179)
   784: V                    ( 0 -    179)
   785: ,                    ( 0 -    179)
   786: N                    ( 0 -    179)
   787: )                    ( 0 -    179)
   788: ;                    ( 0 -    179)
   789: float3               ( 0 -    182)
   790: F0                   ( 0 -    182)
   791: =                    ( 0 -    182)
   792: float3               ( 0 -    182)
   793: (                    ( 0 -    182)
   794: 0.040000             ( 0 -    182)
   795: ,                    ( 0 -    182)
   796: 0.040000             ( 0 -    182)
   797: ,                    ( 0 -    182)
   798: 0.040000             ( 0 -    182)
   799: )                    ( 0 -    182)
   800: ;                    ( 0 -    182)
   801: F0                   ( 0 -    183)
   802: =                    ( 0 -    183)
   803: lerp                 ( 0 -    183)
   804: (                    ( 0 -    183)
   805: F0                   ( 0 -    183)
   806: ,                    ( 0 -    183)
   807: albedo               ( 0 -    183)
   808: ,                    ( 0 -    183)
   809: _metalness           ( 0 -    183)
   810: )                    ( 0 -    183)
   811: ;                    ( 0 -    183)
   812: float3               ( 0 -    185)
   813: Lo                   ( 0 -    185)
   814: =                    ( 0 -    185)
   815: float3               ( 0 -    185)
   816: (                    ( 0 -    185)
   817: 0.000000             ( 0 -    185)
   818: ,                    ( 0 -    185)
   819: 0.000000             ( 0 -    185)
   820: ,                    ( 0 -    185)
   821: 0.000000             ( 0 -    185)
   822: )                    ( 0 -    185)
   823: ;                    ( 0 -    185)
   824: for                  ( 0 -    188)
   825: (                    ( 0 -    188)
   826: int                  ( 0 -    188)
   827: i                    ( 0 -    188)
   828: =                    ( 0 -    188)
   829: 0                    ( 0 -    188)
   830: ;                    ( 0 -    188)
   831: i                    ( 0 -    188)
   832: <                    ( 0 -    188)
   833: currAmountOfDLights  ( 0 -    188)
   834: ;                    ( 0 -    188)
   835: ++                   ( 0 -    188)
   836: i                    ( 0 -    188)
   837: )                    ( 0 -    188)
   838: {                    ( 0 -    189)
   839: float3               ( 0 -    191)
   840: L                    ( 0 -    191)
   841: =                    ( 0 -    191)
   842: -                    ( 0 -    191)
   843: normalize            ( 0 -    191)
   844: (                    ( 0 -    191)
   845: float3               ( 0 -    191)
   846: (                    ( 0 -    191)
   847: dlights              ( 0 -    191)
   848: [                    ( 0 -    191)
   849: i                    ( 0 -    191)
   850: ]                    ( 0 -    191)
   851: .                    ( 0 -    191)
   852: mDir                 ( 0 -    191)
   853: .                    ( 0 -    191)
   854: xyz                  ( 0 -    191)
   855: )                    ( 0 -    191)
   856: )                    ( 0 -    191)
   857: ;                    ( 0 -    191)
   858: float3               ( 0 -    194)
   859: H                    ( 0 -    194)
   860: =                    ( 0 -    194)
   861: normalize            ( 0 -    194)
   862: (                    ( 0 -    194)
   863: V                    ( 0 -    194)
   864: +                    ( 0 -    194)
   865: L                    ( 0 -    194)
   866: )                    ( 0 -    194)
   867: ;                    ( 0 -    194)
   868: float3               ( 0 -    196)
   869: radiance             ( 0 -    196)
   870: =                    ( 0 -    196)
   871: float3               ( 0 -    196)
   872: (                    ( 0 -    196)
   873: dlights              ( 0 -    196)
   874: [                    ( 0 -    196)
   875: i                    ( 0 -    196)
   876: ]                    ( 0 -    196)
   877: .                    ( 0 -    196)
   878: mCol                 ( 0 -    196)
   879: .                    ( 0 -    196)
   880: rgb                  ( 0 -    196)
   881: )                    ( 0 -    196)
   882: *                    ( 0 -    196)
   883: dlights              ( 0 -    196)
   884: [                    ( 0 -    196)
   885: i                    ( 0 -    196)
   886: ]                    ( 0 -    196)
   887: .                    ( 0 -    196)
   888: mCol                 ( 0 -    196)
   889: .                    ( 0 -    196)
   890: a                    ( 0 -    196)
   891: ;                    ( 0 -    196)
   892: float                ( 0 -    198)
   893: NDF                  ( 0 -    198)
   894: =                    ( 0 -    198)
   895: distributionGGX      ( 0 -    198)
   896: (                    ( 0 -    198)
   897: N                    ( 0 -    198)
   898: ,                    ( 0 -    198)
   899: H                    ( 0 -    198)
   900: ,                    ( 0 -    198)
   901: _roughness           ( 0 -    198)
   902: )                    ( 0 -    198)
   903: ;                    ( 0 -    198)
   904: float                ( 0 -    199)
   905: G                    ( 0 -    199)
   906: =                    ( 0 -    199)
   907: GeometrySmith        ( 0 -    199)
   908: (                    ( 0 -    199)
   909: N                    ( 0 -    199)
   910: ,                    ( 0 -    199)
   911: V                    ( 0 -    199)
   912: ,                    ( 0 -    199)
   913: L                    ( 0 -    199)
   914: ,                    ( 0 -    199)
   915: _roughness           ( 0 -    199)
   916: )                    ( 0 -    199)
   917: ;                    ( 0 -    199)
   918: float3               ( 0 -    200)
   919: F                    ( 0 -    200)
   920: =                    ( 0 -    200)
   921: fresnelSchlick       ( 0 -    200)
   922: (                    ( 0 -    200)
   923: max                  ( 0 -    200)
   924: (                    ( 0 -    200)
   925: dot                  ( 0 -    200)
   926: (                    ( 0 -    200)
   927: N                    ( 0 -    200)
   928: ,                    ( 0 -    200)
   929: H                    ( 0 -    200)
   930: )                    ( 0 -    200)
   931: ,                    ( 0 -    200)
   932: 0.000000             ( 0 -    200)
   933: )                    ( 0 -    200)
   934: ,                    ( 0 -    200)
   935: F0                   ( 0 -    200)
   936: )                    ( 0 -    200)
   937: ;                    ( 0 -    200)
   938: float3               ( 0 -    202)
   939: nominator            ( 0 -    202)
   940: =                    ( 0 -    202)
   941: NDF                  ( 0 -    202)
   942: *                    ( 0 -    202)
   943: G                    ( 0 -    202)
   944: *                    ( 0 -    202)
   945: F                    ( 0 -    202)
   946: ;                    ( 0 -    202)
   947: float                ( 0 -    203)
   948: denominator          ( 0 -    203)
   949: =                    ( 0 -    203)
   950: 4.000000             ( 0 -    203)
   951: *                    ( 0 -    203)
   952: max                  ( 0 -    203)
   953: (                    ( 0 -    203)
   954: dot                  ( 0 -    203)
   955: (                    ( 0 -    203)
   956: N                    ( 0 -    203)
   957: ,                    ( 0 -    203)
   958: V                    ( 0 -    203)
   959: )                    ( 0 -    203)
   960: ,                    ( 0 -    203)
   961: 0.000000             ( 0 -    203)
   962: )                    ( 0 -    203)
   963: *                    ( 0 -    203)
   964: max                  ( 0 -    203)
   965: (                    ( 0 -    203)
   966: dot                  ( 0 -    203)
   967: (                    ( 0 -    203)
   968: N                    ( 0 -    203)
   969: ,                    ( 0 -    203)
   970: L                    ( 0 -    203)
   971: )                    ( 0 -    203)
   972: ,                    ( 0 -    203)
   973: 0.000000             ( 0 -    203)
   974: )                    ( 0 -    203)
   975: +                    ( 0 -    203)
   976: 0.001000             ( 0 -    203)
   977: ;                    ( 0 -    203)
   978: float3               ( 0 -    204)
   979: specular             ( 0 -    204)
   980: =                    ( 0 -    204)
   981: nominator            ( 0 -    204)
   982: /                    ( 0 -    204)
   983: denominator          ( 0 -    204)
   984: ;                    ( 0 -    204)
   985: float3               ( 0 -    206)
   986: kS                   ( 0 -    206)
   987: =                    ( 0 -    206)
   988: F                    ( 0 -    206)
   989: ;                    ( 0 -    206)
   990: float3               ( 0 -    208)
   991: kD                   ( 0 -    208)
   992: =                    ( 0 -    208)
   993: float3               ( 0 -    208)
   994: (                    ( 0 -    208)
   995: 1.000000             ( 0 -    208)
   996: ,                    ( 0 -    208)
   997: 1.000000             ( 0 -    208)
   998: ,                    ( 0 -    208)
   999: 1.000000             ( 0 -    208)
  1000: )                    ( 0 -    208)
  1001: -                    ( 0 -    208)
  1002: kS                   ( 0 -    208)
  1003: ;                    ( 0 -    208)
  1004: kD                   ( 0 -    210)
  1005: *=                   ( 0 -    210)
  1006: 1.000000             ( 0 -    210)
  1007: -                    ( 0 -    210)
  1008: _metalness           ( 0 -    210)
  1009: ;                    ( 0 -    210)
  1010: float                ( 0 -    212)
  1011: NdotL                ( 0 -    212)
  1012: =                    ( 0 -    212)
  1013: max                  ( 0 -    212)
  1014: (                    ( 0 -    212)
  1015: dot                  ( 0 -    212)
  1016: (                    ( 0 -    212)
  1017: N                    ( 0 -    212)
  1018: ,                    ( 0 -    212)
  1019: L                    ( 0 -    212)
  1020: )                    ( 0 -    212)
  1021: ,                    ( 0 -    212)
  1022: 0.000000             ( 0 -    212)
  1023: )                    ( 0 -    212)
  1024: ;                    ( 0 -    212)
  1025: if                   ( 0 -    214)
  1026: (                    ( 0 -    214)
  1027: NdotL                ( 0 -    214)
  1028: >                    ( 0 -    214)
  1029: 0.000000             ( 0 -    214)
  1030: )                    ( 0 -    214)
  1031: {                    ( 0 -    215)
  1032: Lo                   ( 0 -    216)
  1033: +=                   ( 0 -    216)
  1034: (                    ( 0 -    216)
  1035: kD                   ( 0 -    216)
  1036: *                    ( 0 -    216)
  1037: albedo               ( 0 -    216)
  1038: /                    ( 0 -    216)
  1039: PI                   ( 0 -    216)
  1040: +                    ( 0 -    216)
  1041: specular             ( 0 -    216)
  1042: )                    ( 0 -    216)
  1043: *                    ( 0 -    216)
  1044: radiance             ( 0 -    216)
  1045: *                    ( 0 -    216)
  1046: NdotL                ( 0 -    216)
  1047: ;                    ( 0 -    216)
  1048: }                    ( 0 -    217)
  1049: else                 ( 0 -    218)
  1050: {                    ( 0 -    219)
  1051: Lo                   ( 0 -    220)
  1052: +=                   ( 0 -    220)
  1053: float3               ( 0 -    220)
  1054: (                    ( 0 -    220)
  1055: 0.000000             ( 0 -    220)
  1056: ,                    ( 0 -    220)
  1057: 0.000000             ( 0 -    220)
  1058: ,                    ( 0 -    220)
  1059: 0.000000             ( 0 -    220)
  1060: )                    ( 0 -    220)
  1061: ;                    ( 0 -    220)
  1062: }                    ( 0 -    221)
  1063: }                    ( 0 -    222)
  1064: for                  ( 0 -    226)
  1065: (                    ( 0 -    226)
  1066: int                  ( 0 -    226)
  1067: i                    ( 0 -    226)
  1068: =                    ( 0 -    226)
  1069: 0                    ( 0 -    226)
  1070: ;                    ( 0 -    226)
  1071: i                    ( 0 -    226)
  1072: <                    ( 0 -    226)
  1073: currAmountOflights   ( 0 -    226)
  1074: ;                    ( 0 -    226)
  1075: ++                   ( 0 -    226)
  1076: i                    ( 0 -    226)
  1077: )                    ( 0 -    226)
  1078: {                    ( 0 -    227)
  1079: float3               ( 0 -    229)
  1080: L                    ( 0 -    229)
  1081: =                    ( 0 -    229)
  1082: normalize            ( 0 -    229)
  1083: (                    ( 0 -    229)
  1084: float3               ( 0 -    229)
  1085: (                    ( 0 -    229)
  1086: lights               ( 0 -    229)
  1087: [                    ( 0 -    229)
  1088: i                    ( 0 -    229)
  1089: ]                    ( 0 -    229)
  1090: .                    ( 0 -    229)
  1091: pos                  ( 0 -    229)
  1092: .                    ( 0 -    229)
  1093: xyz                  ( 0 -    229)
  1094: )                    ( 0 -    229)
  1095: -                    ( 0 -    229)
  1096: worldPos             ( 0 -    229)
  1097: )                    ( 0 -    229)
  1098: ;                    ( 0 -    229)
  1099: float3               ( 0 -    232)
  1100: H                    ( 0 -    232)
  1101: =                    ( 0 -    232)
  1102: normalize            ( 0 -    232)
  1103: (                    ( 0 -    232)
  1104: V                    ( 0 -    232)
  1105: +                    ( 0 -    232)
  1106: L                    ( 0 -    232)
  1107: )                    ( 0 -    232)
  1108: ;                    ( 0 -    232)
  1109: float                ( 0 -    235)
  1110: distance             ( 0 -    235)
  1111: =                    ( 0 -    235)
  1112: length               ( 0 -    235)
  1113: (                    ( 0 -    235)
  1114: float3               ( 0 -    235)
  1115: (                    ( 0 -    235)
  1116: lights               ( 0 -    235)
  1117: [                    ( 0 -    235)
  1118: i                    ( 0 -    235)
  1119: ]                    ( 0 -    235)
  1120: .                    ( 0 -    235)
  1121: pos                  ( 0 -    235)
  1122: .                    ( 0 -    235)
  1123: xyz                  ( 0 -    235)
  1124: )                    ( 0 -    235)
  1125: -                    ( 0 -    235)
  1126: worldPos             ( 0 -    235)
  1127: )                    ( 0 -    235)
  1128: ;                    ( 0 -    235)
  1129: float                ( 0 -    238)
  1130: distanceByRadius     ( 0 -    238)
  1131: =                    ( 0 -    238)
  1132: 1.000000             ( 0 -    238)
  1133: -                    ( 0 -    238)
  1134: pow                  ( 0 -    238)
  1135: (                    ( 0 -    238)
  1136: (                    ( 0 -    238)
  1137: distance             ( 0 -    238)
  1138: /                    ( 0 -    238)
  1139: lights               ( 0 -    238)
  1140: [                    ( 0 -    238)
  1141: i                    ( 0 -    238)
  1142: ]                    ( 0 -    238)
  1143: .                    ( 0 -    238)
  1144: radius               ( 0 -    238)
  1145: )                    ( 0 -    238)
  1146: ,                    ( 0 -    238)
  1147: 4                    ( 0 -    238)
  1148: )                    ( 0 -    238)
  1149: ;                    ( 0 -    238)
  1150: float                ( 0 -    239)
  1151: clamped              ( 0 -    239)
  1152: =                    ( 0 -    239)
  1153: pow                  ( 0 -    239)
  1154: (                    ( 0 -    239)
  1155: clamp                ( 0 -    239)
  1156: (                    ( 0 -    239)
  1157: distanceByRadius     ( 0 -    239)
  1158: ,                    ( 0 -    239)
  1159: 0.000000             ( 0 -    239)
  1160: ,                    ( 0 -    239)
  1161: 1.000000             ( 0 -    239)
  1162: )                    ( 0 -    239)
  1163: ,                    ( 0 -    239)
  1164: 2.000000             ( 0 -    239)
  1165: )                    ( 0 -    239)
  1166: ;                    ( 0 -    239)
  1167: float                ( 0 -    240)
  1168: attenuation          ( 0 -    240)
  1169: =                    ( 0 -    240)
  1170: clamped              ( 0 -    240)
  1171: /                    ( 0 -    240)
  1172: (                    ( 0 -    240)
  1173: distance             ( 0 -    240)
  1174: *                    ( 0 -    240)
  1175: distance             ( 0 -    240)
  1176: +                    ( 0 -    240)
  1177: 1.000000             ( 0 -    240)
  1178: )                    ( 0 -    240)
  1179: ;                    ( 0 -    240)
  1180: float3               ( 0 -    244)
  1181: radiance             ( 0 -    244)
  1182: =                    ( 0 -    244)
  1183: float3               ( 0 -    244)
  1184: (                    ( 0 -    244)
  1185: lights               ( 0 -    244)
  1186: [                    ( 0 -    244)
  1187: i                    ( 0 -    244)
  1188: ]                    ( 0 -    244)
  1189: .                    ( 0 -    244)
  1190: col                  ( 0 -    244)
  1191: .                    ( 0 -    244)
  1192: rgb                  ( 0 -    244)
  1193: )                    ( 0 -    244)
  1194: *                    ( 0 -    244)
  1195: attenuation          ( 0 -    244)
  1196: *                    ( 0 -    244)
  1197: lights               ( 0 -    244)
  1198: [                    ( 0 -    244)
  1199: i                    ( 0 -    244)
  1200: ]                    ( 0 -    244)
  1201: .                    ( 0 -    244)
  1202: intensity            ( 0 -    244)
  1203: ;                    ( 0 -    244)
  1204: float                ( 0 -    246)
  1205: NDF                  ( 0 -    246)
  1206: =                    ( 0 -    246)
  1207: distributionGGX      ( 0 -    246)
  1208: (                    ( 0 -    246)
  1209: N                    ( 0 -    246)
  1210: ,                    ( 0 -    246)
  1211: H                    ( 0 -    246)
  1212: ,                    ( 0 -    246)
  1213: _roughness           ( 0 -    246)
  1214: )                    ( 0 -    246)
  1215: ;                    ( 0 -    246)
  1216: float                ( 0 -    247)
  1217: G                    ( 0 -    247)
  1218: =                    ( 0 -    247)
  1219: GeometrySmith        ( 0 -    247)
  1220: (                    ( 0 -    247)
  1221: N                    ( 0 -    247)
  1222: ,                    ( 0 -    247)
  1223: V                    ( 0 -    247)
  1224: ,                    ( 0 -    247)
  1225: L                    ( 0 -    247)
  1226: ,                    ( 0 -    247)
  1227: _roughness           ( 0 -    247)
  1228: )                    ( 0 -    247)
  1229: ;                    ( 0 -    247)
  1230: float3               ( 0 -    248)
  1231: F                    ( 0 -    248)
  1232: =                    ( 0 -    248)
  1233: fresnelSchlick       ( 0 -    248)
  1234: (                    ( 0 -    248)
  1235: max                  ( 0 -    248)
  1236: (                    ( 0 -    248)
  1237: dot                  ( 0 -    248)
  1238: (                    ( 0 -    248)
  1239: N                    ( 0 -    248)
  1240: ,                    ( 0 -    248)
  1241: H                    ( 0 -    248)
  1242: )                    ( 0 -    248)
  1243: ,                    ( 0 -    248)
  1244: 0.000000             ( 0 -    248)
  1245: )                    ( 0 -    248)
  1246: ,                    ( 0 -    248)
  1247: F0                   ( 0 -    248)
  1248: )                    ( 0 -    248)
  1249: ;                    ( 0 -    248)
  1250: float3               ( 0 -    250)
  1251: nominator            ( 0 -    250)
  1252: =                    ( 0 -    250)
  1253: NDF                  ( 0 -    250)
  1254: *                    ( 0 -    250)
  1255: G                    ( 0 -    250)
  1256: *                    ( 0 -    250)
  1257: F                    ( 0 -    250)
  1258: ;                    ( 0 -    250)
  1259: float                ( 0 -    251)
  1260: denominator          ( 0 -    251)
  1261: =                    ( 0 -    251)
  1262: 4.000000             ( 0 -    251)
  1263: *                    ( 0 -    251)
  1264: max                  ( 0 -    251)
  1265: (                    ( 0 -    251)
  1266: dot                  ( 0 -    251)
  1267: (                    ( 0 -    251)
  1268: N                    ( 0 -    251)
  1269: ,                    ( 0 -    251)
  1270: V                    ( 0 -    251)
  1271: )                    ( 0 -    251)
  1272: ,                    ( 0 -    251)
  1273: 0.000000             ( 0 -    251)
  1274: )                    ( 0 -    251)
  1275: *                    ( 0 -    251)
  1276: max                  ( 0 -    251)
  1277: (                    ( 0 -    251)
  1278: dot                  ( 0 -    251)
  1279: (                    ( 0 -    251)
  1280: N                    ( 0 -    251)
  1281: ,                    ( 0 -    251)
  1282: L                    ( 0 -    251)
  1283: )                    ( 0 -    251)
  1284: ,                    ( 0 -    251)
  1285: 0.000000             ( 0 -    251)
  1286: )                    ( 0 -    251)
  1287: +                    ( 0 -    251)
  1288: 0.001000             ( 0 -    251)
  1289: ;                    ( 0 -    251)
  1290: float3               ( 0 -    252)
  1291: specular             ( 0 -    252)
  1292: =                    ( 0 -    252)
  1293: nominator            ( 0 -    252)
  1294: /                    ( 0 -    252)
  1295: denominator          ( 0 -    252)
  1296: ;                    ( 0 -    252)
  1297: float3               ( 0 -    254)
  1298: kS                   ( 0 -    254)
  1299: =                    ( 0 -    254)
  1300: F                    ( 0 -    254)
  1301: ;                    ( 0 -    254)
  1302: float3               ( 0 -    256)
  1303: kD                   ( 0 -    256)
  1304: =                    ( 0 -    256)
  1305: float3               ( 0 -    256)
  1306: (                    ( 0 -    256)
  1307: 1.000000             ( 0 -    256)
  1308: ,                    ( 0 -    256)
  1309: 1.000000             ( 0 -    256)
  1310: ,                    ( 0 -    256)
  1311: 1.000000             ( 0 -    256)
  1312: )                    ( 0 -    256)
  1313: -                    ( 0 -    256)
  1314: kS                   ( 0 -    256)
  1315: ;                    ( 0 -    256)
  1316: kD                   ( 0 -    258)
  1317: *=                   ( 0 -    258)
  1318: 1.000000             ( 0 -    258)
  1319: -                    ( 0 -    258)
  1320: _metalness           ( 0 -    258)
  1321: ;                    ( 0 -    258)
  1322: float                ( 0 -    260)
  1323: NdotL                ( 0 -    260)
  1324: =                    ( 0 -    260)
  1325: max                  ( 0 -    260)
  1326: (                    ( 0 -    260)
  1327: dot                  ( 0 -    260)
  1328: (                    ( 0 -    260)
  1329: N                    ( 0 -    260)
  1330: ,                    ( 0 -    260)
  1331: L                    ( 0 -    260)
  1332: )                    ( 0 -    260)
  1333: ,                    ( 0 -    260)
  1334: 0.000000             ( 0 -    260)
  1335: )                    ( 0 -    260)
  1336: ;                    ( 0 -    260)
  1337: if                   ( 0 -    262)
  1338: (                    ( 0 -    262)
  1339: NdotL                ( 0 -    262)
  1340: >                    ( 0 -    262)
  1341: 0.000000             ( 0 -    262)
  1342: )                    ( 0 -    262)
  1343: {                    ( 0 -    262)
  1344: Lo                   ( 0 -    264)
  1345: +=                   ( 0 -    264)
  1346: (                    ( 0 -    264)
  1347: kD                   ( 0 -    264)
  1348: *                    ( 0 -    264)
  1349: albedo               ( 0 -    264)
  1350: /                    ( 0 -    264)
  1351: PI                   ( 0 -    264)
  1352: +                    ( 0 -    264)
  1353: specular             ( 0 -    264)
  1354: )                    ( 0 -    264)
  1355: *                    ( 0 -    264)
  1356: radiance             ( 0 -    264)
  1357: *                    ( 0 -    264)
  1358: NdotL                ( 0 -    264)
  1359: ;                    ( 0 -    264)
  1360: }                    ( 0 -    265)
  1361: else                 ( 0 -    265)
  1362: {                    ( 0 -    265)
  1363: Lo                   ( 0 -    268)
  1364: +=                   ( 0 -    268)
  1365: float3               ( 0 -    268)
  1366: (                    ( 0 -    268)
  1367: 0.000000             ( 0 -    268)
  1368: ,                    ( 0 -    268)
  1369: 0.000000             ( 0 -    268)
  1370: ,                    ( 0 -    268)
  1371: 0.000000             ( 0 -    268)
  1372: )                    ( 0 -    268)
  1373: ;                    ( 0 -    268)
  1374: }                    ( 0 -    269)
  1375: }                    ( 0 -    270)
  1376: float3               ( 0 -    273)
  1377: F                    ( 0 -    273)
  1378: =                    ( 0 -    273)
  1379: FresnelSchlickRoughness ( 0 -    273)
  1380: (                    ( 0 -    273)
  1381: max                  ( 0 -    273)
  1382: (                    ( 0 -    273)
  1383: dot                  ( 0 -    273)
  1384: (                    ( 0 -    273)
  1385: N                    ( 0 -    273)
  1386: ,                    ( 0 -    273)
  1387: V                    ( 0 -    273)
  1388: )                    ( 0 -    273)
  1389: ,                    ( 0 -    273)
  1390: 0.000000             ( 0 -    273)
  1391: )                    ( 0 -    273)
  1392: ,                    ( 0 -    273)
  1393: F0                   ( 0 -    273)
  1394: ,                    ( 0 -    273)
  1395: _roughness           ( 0 -    273)
  1396: )                    ( 0 -    273)
  1397: ;                    ( 0 -    273)
  1398: float3               ( 0 -    274)
  1399: kS                   ( 0 -    274)
  1400: =                    ( 0 -    274)
  1401: F                    ( 0 -    274)
  1402: ;                    ( 0 -    274)
  1403: float3               ( 0 -    275)
  1404: kD                   ( 0 -    275)
  1405: =                    ( 0 -    275)
  1406: float3               ( 0 -    275)
  1407: (                    ( 0 -    275)
  1408: 1.000000             ( 0 -    275)
  1409: ,                    ( 0 -    275)
  1410: 1.000000             ( 0 -    275)
  1411: ,                    ( 0 -    275)
  1412: 1.000000             ( 0 -    275)
  1413: )                    ( 0 -    275)
  1414: -                    ( 0 -    275)
  1415: kS                   ( 0 -    275)
  1416: ;                    ( 0 -    275)
  1417: kD                   ( 0 -    276)
  1418: *=                   ( 0 -    276)
  1419: 1.000000             ( 0 -    276)
  1420: -                    ( 0 -    276)
  1421: _metalness           ( 0 -    276)
  1422: ;                    ( 0 -    276)
  1423: float3               ( 0 -    278)
  1424: irradiance           ( 0 -    278)
  1425: =                    ( 0 -    278)
  1426: irradianceMap        ( 0 -    278)
  1427: .                    ( 0 -    278)
  1428: Sample               ( 0 -    278)
  1429: (                    ( 0 -    278)
  1430: envSampler           ( 0 -    278)
  1431: ,                    ( 0 -    278)
  1432: N                    ( 0 -    278)
  1433: )                    ( 0 -    278)
  1434: .                    ( 0 -    278)
  1435: rgb                  ( 0 -    278)
  1436: ;                    ( 0 -    278)
  1437: float3               ( 0 -    279)
  1438: diffuse              ( 0 -    279)
  1439: =                    ( 0 -    279)
  1440: kD                   ( 0 -    279)
  1441: *                    ( 0 -    279)
  1442: irradiance           ( 0 -    279)
  1443: *                    ( 0 -    279)
  1444: albedo               ( 0 -    279)
  1445: ;                    ( 0 -    279)
  1446: float3               ( 0 -    281)
  1447: specularColor        ( 0 -    281)
  1448: =                    ( 0 -    281)
  1449: specularMap          ( 0 -    281)
  1450: .                    ( 0 -    281)
  1451: SampleLevel          ( 0 -    281)
  1452: (                    ( 0 -    281)
  1453: envSampler           ( 0 -    281)
  1454: ,                    ( 0 -    281)
  1455: R                    ( 0 -    281)
  1456: ,                    ( 0 -    281)
  1457: _roughness           ( 0 -    281)
  1458: *                    ( 0 -    281)
  1459: 4                    ( 0 -    281)
  1460: )                    ( 0 -    281)
  1461: .                    ( 0 -    281)
  1462: rgb                  ( 0 -    281)
  1463: ;                    ( 0 -    281)
  1464: float2               ( 0 -    283)
  1465: maxNVRough           ( 0 -    283)
  1466: =                    ( 0 -    283)
  1467: float2               ( 0 -    283)
  1468: (                    ( 0 -    283)
  1469: max                  ( 0 -    283)
  1470: (                    ( 0 -    283)
  1471: dot                  ( 0 -    283)
  1472: (                    ( 0 -    283)
  1473: N                    ( 0 -    283)
  1474: ,                    ( 0 -    283)
  1475: V                    ( 0 -    283)
  1476: )                    ( 0 -    283)
  1477: ,                    ( 0 -    283)
  1478: 0.000000             ( 0 -    283)
  1479: )                    ( 0 -    283)
  1480: ,                    ( 0 -    283)
  1481: _roughness           ( 0 -    283)
  1482: )                    ( 0 -    283)
  1483: ;                    ( 0 -    283)
  1484: float2               ( 0 -    284)
  1485: brdf                 ( 0 -    284)
  1486: =                    ( 0 -    284)
  1487: brdfIntegrationMap   ( 0 -    284)
  1488: .                    ( 0 -    284)
  1489: Sample               ( 0 -    284)
  1490: (                    ( 0 -    284)
  1491: defaultSampler       ( 0 -    284)
  1492: ,                    ( 0 -    284)
  1493: maxNVRough           ( 0 -    284)
  1494: )                    ( 0 -    284)
  1495: .                    ( 0 -    284)
  1496: rg                   ( 0 -    284)
  1497: ;                    ( 0 -    284)
  1498: float3               ( 0 -    286)
  1499: specular             ( 0 -    286)
  1500: =                    ( 0 -    286)
  1501: specularColor        ( 0 -    286)
  1502: *                    ( 0 -    286)
  1503: (                    ( 0 -    286)
  1504: F                    ( 0 -    286)
  1505: *                    ( 0 -    286)
  1506: brdf                 ( 0 -    286)
  1507: .                    ( 0 -    286)
  1508: x                    ( 0 -    286)
  1509: +                    ( 0 -    286)
  1510: brdf                 ( 0 -    286)
  1511: .                    ( 0 -    286)
  1512: y                    ( 0 -    286)
  1513: )                    ( 0 -    286)
  1514: ;                    ( 0 -    286)
  1515: float3               ( 0 -    288)
  1516: ambient              ( 0 -    288)
  1517: =                    ( 0 -    288)
  1518: float3               ( 0 -    288)
  1519: (                    ( 0 -    288)
  1520: diffuse              ( 0 -    288)
  1521: +                    ( 0 -    288)
  1522: specular             ( 0 -    288)
  1523: )                    ( 0 -    288)
  1524: *                    ( 0 -    288)
  1525: float3               ( 0 -    288)
  1526: (                    ( 0 -    288)
  1527: ao                   ( 0 -    288)
  1528: ,                    ( 0 -    288)
  1529: ao                   ( 0 -    288)
  1530: ,                    ( 0 -    288)
  1531: ao                   ( 0 -    288)
  1532: )                    ( 0 -    288)
  1533: ;                    ( 0 -    288)
  1534: float3               ( 0 -    290)
  1535: color                ( 0 -    290)
  1536: =                    ( 0 -    290)
  1537: Lo                   ( 0 -    290)
  1538: +                    ( 0 -    290)
  1539: ambient              ( 0 -    290)
  1540: *                    ( 0 -    290)
  1541: 0.200000             ( 0 -    290)
  1542: ;                    ( 0 -    290)
  1543: color                ( 0 -    293)
  1544: =                    ( 0 -    293)
  1545: color                ( 0 -    293)
  1546: /                    ( 0 -    293)
  1547: (                    ( 0 -    293)
  1548: color                ( 0 -    293)
  1549: +                    ( 0 -    293)
  1550: float3               ( 0 -    293)
  1551: (                    ( 0 -    293)
  1552: 1.000000             ( 0 -    293)
  1553: ,                    ( 0 -    293)
  1554: 1.000000             ( 0 -    293)
  1555: ,                    ( 0 -    293)
  1556: 1.000000             ( 0 -    293)
  1557: )                    ( 0 -    293)
  1558: )                    ( 0 -    293)
  1559: ;                    ( 0 -    293)
  1560: float                ( 0 -    294)
  1561: gammaCorr            ( 0 -    294)
  1562: =                    ( 0 -    294)
  1563: 1.000000             ( 0 -    294)
  1564: /                    ( 0 -    294)
  1565: 2.200000             ( 0 -    294)
  1566: ;                    ( 0 -    294)
  1567: color                ( 0 -    296)
  1568: .                    ( 0 -    296)
  1569: r                    ( 0 -    296)
  1570: =                    ( 0 -    296)
  1571: pow                  ( 0 -    296)
  1572: (                    ( 0 -    296)
  1573: color                ( 0 -    296)
  1574: .                    ( 0 -    296)
  1575: r                    ( 0 -    296)
  1576: ,                    ( 0 -    296)
  1577: gammaCorr            ( 0 -    296)
  1578: )                    ( 0 -    296)
  1579: ;                    ( 0 -    296)
  1580: color                ( 0 -    297)
  1581: .                    ( 0 -    297)
  1582: g                    ( 0 -    297)
  1583: =                    ( 0 -    297)
  1584: pow                  ( 0 -    297)
  1585: (                    ( 0 -    297)
  1586: color                ( 0 -    297)
  1587: .                    ( 0 -    297)
  1588: g                    ( 0 -    297)
  1589: ,                    ( 0 -    297)
  1590: gammaCorr            ( 0 -    297)
  1591: )                    ( 0 -    297)
  1592: ;                    ( 0 -    297)
  1593: color                ( 0 -    298)
  1594: .                    ( 0 -    298)
  1595: b                    ( 0 -    298)
  1596: =                    ( 0 -    298)
  1597: pow                  ( 0 -    298)
  1598: (                    ( 0 -    298)
  1599: color                ( 0 -    298)
  1600: .                    ( 0 -    298)
  1601: b                    ( 0 -    298)
  1602: ,                    ( 0 -    298)
  1603: gammaCorr            ( 0 -    298)
  1604: )                    ( 0 -    298)
  1605: ;                    ( 0 -    298)
  1606: return               ( 0 -    300)
  1607: float4               ( 0 -    300)
  1608: (                    ( 0 -    300)
  1609: color                ( 0 -    300)
  1610: .                    ( 0 -    300)
  1611: r                    ( 0 -    300)
  1612: ,                    ( 0 -    300)
  1613: color                ( 0 -    300)
  1614: .                    ( 0 -    300)
  1615: g                    ( 0 -    300)
  1616: ,                    ( 0 -    300)
  1617: color                ( 0 -    300)
  1618: .                    ( 0 -    300)
  1619: b                    ( 0 -    300)
  1620: ,                    ( 0 -    300)
  1621: 1.000000             ( 0 -    300)
  1622: )                    ( 0 -    300)
  1623: ;                    ( 0 -    300)
  1624: }                    ( 0 -    301)
  1625: <eof>                ( 0 -    302)

 0: C:/Users/conno/Desktop/The-Forge/Examples_3/Unit_Tests/src/10_PixelProjectedReflections/Shaders/D3D12/renderSceneBRDF.frag

